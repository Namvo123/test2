{"version":3,"file":"mdb-angular-treeview.mjs","sources":["../../../projects/mdb-angular-treeview/src/lib/treeview.component.ts","../../../projects/mdb-angular-treeview/src/lib/treeview.component.html","../../../projects/mdb-angular-treeview/src/lib/treeview.module.ts","../../../projects/mdb-angular-treeview/src/public-api.ts","../../../projects/mdb-angular-treeview/src/mdb-angular-treeview.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ViewChildren,\n  QueryList,\n  Renderer2,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mdb-treeview',\n  exportAs: 'mdbTreeview',\n  templateUrl: 'treeview.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MdbTreeviewComponent {\n  @ViewChildren('activeElement') activeElement: QueryList<ElementRef>;\n\n  @Input() nodes: any;\n  @Input() textField: string;\n  @Input() childrenField: string;\n  @Input() checkedField: string;\n  @Input() selectable = false;\n  @Input() checkboxesField: string;\n  @Input() accordion = false;\n  @Input() openOnClick = true;\n  @Input() line = false;\n  @Input() color = 'primary';\n  @Input() rotationAngle = '90';\n\n  @Output() selected = new EventEmitter();\n  @Output() activeItemChange = new EventEmitter();\n\n  constructor(private _renderer: Renderer2, private _cdRef: ChangeDetectorRef) {}\n\n  expand(id: string): void {\n    const node = this._deepFind(id, 'expandId');\n\n    if (!node) {\n      return;\n    }\n\n    this._expandParentsNode(node[this.textField]);\n\n    node.collapsed = false;\n\n    this._cdRef.markForCheck();\n  }\n\n  collapse(): void {\n    this._collapseAll(this.nodes);\n    this._cdRef.markForCheck();\n  }\n\n  _checkboxChange(element: HTMLInputElement, node: any): void {\n    node[this.checkedField] = element.checked;\n  }\n\n  _handleCheckboxClick(element: HTMLInputElement, isChecked: boolean, node: any): void {\n    const isParentField = () => node[this.childrenField];\n\n    const toggleAllDirectChildrenCheckboxes = (actualNode: any, state: boolean): void => {\n      actualNode[this.childrenField].forEach((childrenNode) => {\n        childrenNode[this.checkedField] = state;\n      });\n    };\n\n    const toggleAllChildrenCheckboxes = (actualNode: any, state: boolean): void => {\n      toggleAllDirectChildrenCheckboxes(actualNode, state);\n      actualNode[this.childrenField]?.forEach((childrenNode) => {\n        if (childrenNode[this.childrenField]) {\n          toggleAllChildrenCheckboxes(childrenNode, state);\n        }\n      });\n    };\n\n    if (isChecked && isParentField()) {\n      toggleAllChildrenCheckboxes(node, true);\n    }\n    if (!isChecked && isParentField()) {\n      toggleAllChildrenCheckboxes(node, false);\n    }\n\n    node[this.checkedField] = element.checked;\n\n    const iterator = (actualNode: any = this.nodes): void => {\n      actualNode.forEach((childrenNode) => {\n        if (childrenNode[this.childrenField]) {\n          iterator(childrenNode[this.childrenField]);\n          let isAllChildrenChecked = childrenNode[this.childrenField].every(\n            (sibling) => sibling[this.checkedField] === true\n          );\n\n          childrenNode[this.checkedField] = isAllChildrenChecked;\n        }\n      });\n    };\n    iterator(this.nodes);\n  }\n\n  checkboxSelected(node: any, isChecked: boolean): void {\n    if (isChecked) {\n      this.selected.emit(node);\n    }\n  }\n\n  setActive(target: ElementRef, preventClick: boolean): void {\n    if (preventClick) {\n      return;\n    }\n\n    this.activeElement.forEach((element: ElementRef) => {\n      this._renderer.removeClass(element.nativeElement, 'active');\n    });\n\n    this._renderer.addClass(target, 'active');\n\n    this.activeItemChange.emit(target);\n  }\n\n  filter(value: string): void {\n    this.collapse();\n\n    const node = this._deepFind(value, 'name');\n\n    if (!node) {\n      return;\n    }\n\n    this._expandParentsNode(node[this.textField]);\n\n    node.collapsed = false;\n\n    this._cdRef.markForCheck();\n  }\n\n  generateUid(): string {\n    const uid = Math.random().toString(36).substr(2, 9);\n    return `mdb-treeview-${uid}`;\n  }\n\n  private _deepFind(value: string, key: string = this.textField): any {\n    let result: any;\n\n    const findInNode = (nodes: any[], value: string) => {\n      nodes.forEach((node: any) => {\n        const includes = node[key]?.toLowerCase().includes(value.toLowerCase());\n\n        if (includes) {\n          result = node;\n        } else if (node[this.childrenField]) {\n          findInNode(node[this.childrenField], value);\n        }\n      });\n    };\n\n    findInNode(this.nodes, value);\n\n    return result;\n  }\n\n  private _expandParentsNode(value: string, key: string = this.textField): void {\n    const findInNode = (nodes: any, value: string) => {\n      nodes.forEach((parentNode: any) => {\n        parentNode[this.childrenField]?.forEach((childrenNode: any) => {\n          const includes = childrenNode[key]?.toLowerCase().includes(value.toLowerCase());\n\n          if (includes) {\n            parentNode.collapsed = false;\n          } else if (childrenNode[this.childrenField]) {\n            findInNode(parentNode[this.childrenField], value);\n          }\n        });\n      });\n    };\n\n    findInNode(this.nodes, value);\n  }\n\n  private _collapseAll(nodes: any): void {\n    nodes.forEach((node: any) => {\n      node.collapsed = true;\n\n      if (node[this.childrenField]) {\n        this._collapseAll(node[this.childrenField]);\n      }\n    });\n  }\n}\n","<!-- child nodes -->\n<ng-template #tree let-nodeChildren let-idx=\"idx\" let-disabled=\"disabled\">\n  <li\n    #activeElement\n    *ngFor=\"let node of nodeChildren; let n = index;\"\n    role=\"tree-item\"\n    [ngClass]=\"{'treeview-category': !node[childrenField], 'treeview-disabled': (node.disabled || disabled) && !node[childrenField]}\"\n    (click)=\"setActive($event.currentTarget, node[childrenField])\"\n  >\n    <ng-container *ngIf=\"!node[childrenField]\">\n      <ng-container *ngIf=\"selectable\" >\n        <ng-container *ngTemplateOutlet=\"checkboxTemplate; context: { $implicit: node, idx: idx + '_' + n, disabled: node.disabled || disabled}\"></ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!selectable\">\n        <i\n          *ngIf=\"node.icon\"\n          [ngClass]=\"node.icon\"\n          [ngStyle]=\"{'transform': node.collapsed === false ? 'rotate(' + rotationAngle + 'deg)' : 'rotate(0deg)'}\"\n        ></i>\n        {{ node[textField] }}\n      </ng-container>\n    </ng-container>\n    <a \n      #activeElement\n      *ngIf=\"node[childrenField] && node[childrenField].length > 0\"\n      class=\"treeview-category\"\n      role=\"button\"\n      [ngClass]=\"{'d-flex': selectable, 'treeview-disabled': node.disabled || disabled }\"\n      (click)=\"node.collapsed = node.collapsed === undefined ? false : !node.collapsed; setActive($event.currentTarget, false)\"\n    >\n      <span aria-label=\"toggle\">\n        <i\n          tabindex=\"1\"\n          [ngClass]=\"node.icon ? !selectable? node.icon : '' : 'fas fa-angle-right'\"\n          [ngStyle]=\"{'transform': node.collapsed === false ? 'rotate(' + rotationAngle + 'deg)' : 'rotate(0deg)'}\"\n          class=\"mx-1\"\n        ></i>\n      </span>\n      <ng-container *ngIf=\"selectable\" >\n        <ng-container *ngTemplateOutlet=\"checkboxTemplate; context: { $implicit: node, idx: idx + '_' + n, disabled: node.disabled || disabled }\"></ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!selectable\">\n        {{ node[textField] }}\n      </ng-container>\n    </a>\n    <ul \n      id=\"collapse-{{node.expandId}}-{{idx + '_' + n}}\"\n      mdbCollapse\n      [collapsed]=\"node.collapsed === false ? false : true\"\n      role=\"tree\"\n      [ngClass]=\"{'treeview-line': line}\"\n    >\n      <ng-container *ngTemplateOutlet=\"tree; context: { $implicit: node[childrenField], idx: idx + '_' + n, disabled: node.disabled || disabled }\"></ng-container>\n    </ul>\n  </li>\n</ng-template>\n\n<!-- selectable -->\n<ng-template #checkboxTemplate let-node let-idx=\"idx\" let-disabled=\"disabled\">\n  <div class=\"form-check\">\n    <input\n      mdbCheckbox\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      value=\"\"\n      id=\"{{generateUid() + idx}}\"\n      [disabled]=\"disabled\"\n      (click)=\"_handleCheckboxClick($event.target, $event.target.checked, node); $event.stopPropagation()\"\n      (change)=\"_checkboxChange($event.target, node)\"\n      [checked]=\"node[checkedField]\"\n    />\n    <label class=\"form-check-label\" for=\"{{generateUid() + idx}}\">\n      <i\n        *ngIf=\"node.icon\"\n        [ngClass]=\"node.icon\"\n        [ngStyle]=\"{'transform': node.collapsed === false ? 'rotate(' + rotationAngle + 'deg)' : 'rotate(0deg)'}\"\n        ></i>\n      {{ node[textField] }}\n    </label>\n  </div>\n</ng-template>\n\n<!-- first nodes -->\n<div class=\"treeview treeview-{{color}}\">\n  <ul role=\"tree\">\n    <ng-container *ngTemplateOutlet=\"tree; context: { $implicit: nodes, idx: 1 }\"></ng-container>\n  </ul>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { MdbTreeviewComponent } from './treeview.component';\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\nimport { CommonModule } from '@angular/common';\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\n\n@NgModule({\n  declarations: [MdbTreeviewComponent],\n  imports: [CommonModule, MdbCheckboxModule, MdbCollapseModule],\n  exports: [MdbTreeviewComponent],\n})\nexport class MdbTreeviewModule {}\n","/*\n * Public API Surface of mdb-angular-treeview\n */\n\nexport * from './lib/treeview.component';\nexport * from './lib/treeview.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}