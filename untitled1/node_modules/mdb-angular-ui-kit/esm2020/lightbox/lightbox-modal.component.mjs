import { animate, keyframes, style, transition, trigger } from '@angular/animations';
import { DOCUMENT } from '@angular/common';
import { Component, ChangeDetectionStrategy, ViewChild, Inject, forwardRef, HostListener, } from '@angular/core';
import { fromEvent } from 'rxjs';
import { take } from 'rxjs/operators';
import { MdbLightboxComponent } from './lightbox.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "@angular/common";
import * as i3 from "./lightbox.component";
export class MdbLightboxModalComponent {
    constructor(_renderer, _elementRef, _cdRef, _focusTrapFactory, _document, _lightbox) {
        this._renderer = _renderer;
        this._elementRef = _elementRef;
        this._cdRef = _cdRef;
        this._focusTrapFactory = _focusTrapFactory;
        this._document = _document;
        this.animationState = '';
        this._fullscreen = false;
        this._scale = 1;
        this._mousedown = false;
        this._tapCounter = 0;
        this._tapTime = 0;
        this._toolsTimeout = 4000;
        this._doubleTapTimeout = 300;
        this.lightbox = _lightbox;
    }
    onHostMousemove() {
        this._resetToolsToggler();
    }
    onHostKeyup(event) {
        this._onKeyup(event);
    }
    onHostClick(target) {
        this._resetToolsToggler();
        if (target.tagName !== 'DIV') {
            return;
        }
        this.close();
    }
    ngAfterViewInit() {
        this.index = this.lightboxItems.toArray().indexOf(this.activeLightboxItem);
        this.total = this.lightboxItems.toArray().length;
        this._setToolsToggleTimeout();
        this._disableScroll();
        this._previouslyFocusedElement = this._document.activeElement;
        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);
        this._focusTrap.focusInitialElementWhenReady();
    }
    ngOnDestroy() {
        this._previouslyFocusedElement.focus();
        this._focusTrap.destroy();
        this._enableScroll();
    }
    onMousedown(event) {
        const touch = event.touches;
        const x = touch ? touch[0].clientX : event.clientX;
        const y = touch ? touch[0].clientY : event.clientY;
        this._originalPositionX = parseFloat(this.activeItem.nativeElement.style.left) || 0;
        this._originalPositionY = parseFloat(this.activeItem.nativeElement.style.top) || 0;
        this._positionX = this._originalPositionX;
        this._positionY = this._originalPositionY;
        this._mousedownPositionX = x * (1 / this._scale) - this._positionX;
        this._mousedownPositionY = y * (1 / this._scale) - this._positionY;
        this._mousedown = true;
    }
    onMousemove(event) {
        if (!this._mousedown)
            return;
        const touch = event.touches;
        const x = touch ? touch[0].clientX : event.clientX;
        const y = touch ? touch[0].clientY : event.clientY;
        if (touch)
            this._resetToolsToggler();
        if (this._scale !== 1) {
            this._positionX = x * (1 / this._scale) - this._mousedownPositionX;
            this._positionY = y * (1 / this._scale) - this._mousedownPositionY;
            this._renderer.setStyle(this.activeItem.nativeElement, 'left', `${this._positionX}px`);
            this._renderer.setStyle(this.activeItem.nativeElement, 'top', `${this._positionY}px`);
        }
        else {
            if (this.total <= 1)
                return;
            this._positionX = x * (1 / this._scale) - this._mousedownPositionX;
            this._renderer.setStyle(this.activeItem.nativeElement, 'left', `${this._positionX}px`);
        }
    }
    onMouseup(event) {
        this._mousedown = false;
        this._moveImg(event.target);
        this._checkDoubleTap(event);
    }
    zoom() {
        if (this._scale === 1) {
            this.zoomIn();
        }
        else {
            this.zoomOut();
        }
    }
    close() {
        this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'transform', 'scale(0.25)');
        this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'opacity', 0);
        this.lightbox.close();
    }
    toggleFullscreen() {
        if (this._fullscreen === false) {
            this._renderer.addClass(this.btnFullsreen.nativeElement, 'active');
            if (this._elementRef.nativeElement.requestFullscreen) {
                this._elementRef.nativeElement.requestFullscreen();
            }
            this._fullscreen = true;
        }
        else {
            this._renderer.removeClass(this.btnFullsreen.nativeElement, 'active');
            if (this._document.exitFullscreen) {
                this._document.exitFullscreen();
            }
            this._fullscreen = false;
        }
    }
    _onKeyup(event) {
        this._resetToolsToggler();
        switch (event.key) {
            case 'ArrowRight':
                this.slide();
                break;
            case 'ArrowLeft':
                this.slide('left');
                break;
            case 'Escape':
                this.close();
                break;
            case 'Home':
                this.slide('first');
                break;
            case 'End':
                this.slide('last');
                break;
            case 'ArrowUp':
                this.zoomIn();
                break;
            case 'ArrowDown':
                this.zoomOut();
                break;
            default:
                break;
        }
    }
    _moveImg(target) {
        if (this._scale !== 1 ||
            target !== this.activeItem.nativeElement ||
            this.lightboxItems.length <= 1) {
            return;
        }
        const movement = this._positionX - this._originalPositionX;
        if (movement > 0) {
            this.slide('left');
        }
        else if (movement < 0) {
            this.slide();
        }
    }
    _setNewPositionOnZoomIn(event) {
        clearTimeout(this._zoomTimer);
        this._positionX = window.innerWidth / 2 - event.offsetX - 50;
        this._positionY = window.innerHeight / 2 - event.offsetY - 50;
        this._renderer.setStyle(this.activeItem.nativeElement, 'transition', 'all 0.5s ease-out');
        this._renderer.setStyle(this.activeItem.nativeElement, 'left', `${this._positionX}px`);
        this._renderer.setStyle(this.activeItem.nativeElement, 'top', `${this._positionY}px`);
        this._zoomTimer = setTimeout(() => {
            this._renderer.setStyle(this.activeItem.nativeElement, 'transition', 'none');
        }, 500);
    }
    _resetToolsToggler() {
        this.toggleToolbar(1);
        clearTimeout(this._toolsToggleTimer);
        this._setToolsToggleTimeout();
    }
    toggleToolbar(opacity) {
        this._renderer.setStyle(this.galleryToolbar.nativeElement, 'opacity', opacity);
        this._renderer.setStyle(this.leftArrow.nativeElement, 'opacity', opacity);
        this._renderer.setStyle(this.rightArrow.nativeElement, 'opacity', opacity);
    }
    _setToolsToggleTimeout() {
        this._toolsToggleTimer = setTimeout(() => {
            this.toggleToolbar(0);
            clearTimeout(this._toolsToggleTimer);
        }, this._toolsTimeout);
    }
    onWheel(event) {
        if (event.deltaY > 0) {
            this.zoomOut();
        }
        else {
            if (this._scale >= 3)
                return;
            this._setNewPositionOnZoomIn(event);
            this.zoomIn();
        }
    }
    zoomIn() {
        if (this._scale >= 3) {
            return;
        }
        this.lightbox.lightboxZoomIn.emit();
        this._scale += this.zoomLevel;
        this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'transform', `scale(${this._scale})`);
        this._updateZoomBtn();
        this.lightbox.lightboxZoomedIn.emit();
    }
    zoomOut() {
        if (this._scale <= 1) {
            return;
        }
        this.lightbox.lightboxZoomOut.emit();
        this._scale -= this.zoomLevel;
        this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'transform', `scale(${this._scale})`);
        this._updateZoomBtn();
        this._updateImgPosition();
        this.lightbox.lightboxZoomedOut.emit();
    }
    slide(target = 'right') {
        this.lightbox.lightboxSlide.emit();
        if (this.lightboxItems.length <= 1) {
            return;
        }
        switch (target) {
            case 'right':
                this.slideRight = true;
                this.index + 1 === this.total ? (this.index = 0) : (this.index += 1);
                break;
            case 'left':
                this.slideRight = false;
                this.index - 1 < 0 ? (this.index = this.total - 1) : (this.index -= 1);
                break;
            case 'first':
                this.slideRight = true;
                this.index = 0;
                break;
            case 'last':
                this.slideRight = false;
                this.index = this.lightboxItems.length - 1;
                break;
            default:
                break;
        }
        clearTimeout(this._slideTimer);
        this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'transform', 'scale(0.25)');
        this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'left', this.slideRight ? '-100%' : '100%');
        fromEvent(this.activeItemWrapper.nativeElement, 'transitionend')
            .pipe(take(1))
            .subscribe(() => {
            this._showLoader();
            this._updateActiveLightboxItem();
        });
    }
    reset() {
        if (this._fullscreen) {
            this.toggleFullscreen();
        }
        this._restoreDefaultPosition();
        this._restoreDefaultZoom();
        clearTimeout(this._toolsToggleTimer);
        clearTimeout(this._doubleTapTimer);
    }
    _disableScroll() {
        this._renderer.addClass(this._document.body, 'disabled-scroll');
        if (this._document.documentElement.scrollHeight > this._document.documentElement.clientHeight) {
            this._renderer.addClass(this._document.body, 'replace-scrollbar');
        }
    }
    _enableScroll() {
        this._renderer.removeClass(this._document.body, 'disabled-scroll');
        this._renderer.removeClass(this._document.body, 'replace-scrollbar');
    }
    _restoreDefaultZoom() {
        if (this._scale !== 1) {
            this._scale = 1;
            this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'transform', `scale(${this._scale})`);
            this._updateZoomBtn();
            this._updateImgPosition();
        }
    }
    _updateImgPosition() {
        if (this._scale === 1) {
            this._restoreDefaultPosition();
        }
    }
    _checkDoubleTap(event) {
        clearTimeout(this._doubleTapTimer);
        const currentTime = new Date().getTime();
        const tapLength = currentTime - this._tapTime;
        if (this._tapCounter > 0 && tapLength < 500) {
            this._onDoubleClick(event);
            this._doubleTapTimer = setTimeout(() => {
                this._tapTime = new Date().getTime();
                this._tapCounter = 0;
            }, this._doubleTapTimeout);
        }
        else {
            this._tapCounter++;
            this._tapTime = new Date().getTime();
        }
    }
    _onDoubleClick(event) {
        const touchEvent = event;
        if (touchEvent.touches) {
            this._setNewPositionOnZoomIn(event);
        }
        if (this._scale !== 1) {
            this._restoreDefaultZoom();
        }
        else {
            this.zoomIn();
        }
    }
    _updateZoomBtn() {
        if (this._scale > 1) {
            this._renderer.addClass(this.btnZoom.nativeElement, 'active');
            this._renderer.setAttribute(this.btnZoom.nativeElement, 'aria-label', 'Zoom out');
        }
        else {
            this._renderer.removeClass(this.btnZoom.nativeElement, 'active');
            this._renderer.setAttribute(this.btnZoom.nativeElement, 'aria-label', 'Zoom in');
        }
    }
    _restoreDefaultPosition() {
        clearTimeout(this._zoomTimer);
        this._renderer.setStyle(this.activeItem.nativeElement, 'left', 0);
        this._renderer.setStyle(this.activeItem.nativeElement, 'top', 0);
        this._renderer.setStyle(this.activeItem.nativeElement, 'transition', 'all 0.5s ease-out');
        this._calculateImgSize();
        setTimeout(() => {
            this._renderer.setStyle(this.activeItem.nativeElement, 'transition', 'none');
        }, 500);
    }
    _updateActiveLightboxItem() {
        this.activeLightboxItem = this.lightboxItems.toArray()[this.index];
        this._cdRef.markForCheck();
    }
    load() {
        this._hideLoader();
        if (this.activeItemWrapper.nativeElement.style.transform == 'scale(0.25)') {
            this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'transition', 'none');
            this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'left', this.slideRight ? '100%' : '-100%');
            this._slideTimer = setTimeout(() => {
                this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'transition', '');
                this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'left', '0');
                this._renderer.setStyle(this.activeItemWrapper.nativeElement, 'transform', 'scale(1)');
                this.lightbox.lightboxSlided.emit();
            }, 0);
        }
        this._calculateImgSize();
    }
    _showLoader() {
        this._renderer.setStyle(this.loader.nativeElement, 'opacity', 1);
    }
    _hideLoader() {
        this._renderer.setStyle(this.loader.nativeElement, 'opacity', 0);
    }
    _calculateImgSize() {
        if (this.activeItem.nativeElement.width >= this.activeItem.nativeElement.height) {
            this._renderer.setStyle(this.activeItem.nativeElement, 'width', '100%');
            this._renderer.setStyle(this.activeItem.nativeElement, 'maxWidth', '100%');
            this._renderer.setStyle(this.activeItem.nativeElement, 'height', 'auto');
            const top = `${(this.activeItemWrapper.nativeElement.offsetHeight - this.activeItem.nativeElement.height) /
                2}px`;
            this._renderer.setStyle(this.activeItem.nativeElement, 'top', top);
            this._renderer.setStyle(this.activeItem.nativeElement, 'left', 0);
        }
        else {
            this._renderer.setStyle(this.activeItem.nativeElement, 'height', '100%');
            this._renderer.setStyle(this.activeItem.nativeElement, 'maxHeight', '100%');
            this._renderer.setStyle(this.activeItem.nativeElement, 'width', 'auto');
            const left = `${(this.activeItemWrapper.nativeElement.offsetWidth - this.activeItem.nativeElement.width) / 2}px`;
            this._renderer.setStyle(this.activeItem.nativeElement, 'left', left);
            this._renderer.setStyle(this.activeItem.nativeElement, 'top', 0);
        }
        if (this.activeItem.nativeElement.width >= this.activeItemWrapper.nativeElement.offsetWidth) {
            this._renderer.setStyle(this.activeItem.nativeElement, 'width', `${this.activeItemWrapper.nativeElement.offsetWidth}px`);
            this._renderer.setStyle(this.activeItem.nativeElement, 'height', 'auto');
            this._renderer.setStyle(this.activeItem.nativeElement, 'height', 'auto');
            const top = `${(this.activeItemWrapper.nativeElement.offsetHeight - this.activeItem.nativeElement.height) /
                2}px`;
            this._renderer.setStyle(this.activeItem.nativeElement, 'top', top);
            this._renderer.setStyle(this.activeItem.nativeElement, 'left', 0);
        }
        if (this.activeItem.nativeElement.height >= this.activeItemWrapper.nativeElement.offsetHeight) {
            this._renderer.setStyle(this.activeItem.nativeElement, 'height', `${this.activeItemWrapper.nativeElement.offsetHeight}px`);
            this._renderer.setStyle(this.activeItem.nativeElement, 'width', 'auto');
            this._renderer.setStyle(this.activeItem.nativeElement, 'top', 0);
            const left = `${(this.activeItemWrapper.nativeElement.offsetWidth - this.activeItem.nativeElement.width) / 2}px`;
            this._renderer.setStyle(this.activeItem.nativeElement, 'left', left);
        }
    }
}
MdbLightboxModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbLightboxModalComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.ConfigurableFocusTrapFactory }, { token: DOCUMENT }, { token: forwardRef(() => MdbLightboxComponent) }], target: i0.ɵɵFactoryTarget.Component });
MdbLightboxModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: MdbLightboxModalComponent, selector: "mdb-lightbox-modal", host: { listeners: { "mousemove": "onHostMousemove()", "keyup": "onHostKeyup($event)", "click": "onHostClick($event.target)" } }, viewQueries: [{ propertyName: "activeItem", first: true, predicate: ["activeItem"], descendants: true }, { propertyName: "activeItemWrapper", first: true, predicate: ["activeItemWrapper"], descendants: true }, { propertyName: "galleryToolbar", first: true, predicate: ["galleryToolbar"], descendants: true }, { propertyName: "btnPrevious", first: true, predicate: ["btnPrevious"], descendants: true }, { propertyName: "btnNext", first: true, predicate: ["btnNext"], descendants: true }, { propertyName: "rightArrow", first: true, predicate: ["rightArrow"], descendants: true }, { propertyName: "leftArrow", first: true, predicate: ["leftArrow"], descendants: true }, { propertyName: "btnFullsreen", first: true, predicate: ["btnFullsreen"], descendants: true }, { propertyName: "btnZoom", first: true, predicate: ["btnZoom"], descendants: true }, { propertyName: "loader", first: true, predicate: ["loader"], descendants: true }], ngImport: i0, template: "<div #galleryToolbar class=\"lightbox-gallery-toolbar\">\n  <div #loader class=\"lightbox-gallery-loader\" style=\"opacity: 0\">\n    <div class=\"spinner-grow text-light\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n  <div class=\"lightbox-gallery-left-tools\">\n    <p class=\"lightbox-gallery-counter\">{{ index + 1 }} / {{ total }}</p>\n  </div>\n  <div class=\"lightbox-gallery-right-tools\">\n    <button\n      type=\"button\"\n      #btnFullsreen\n      class=\"lightbox-gallery-button lightbox-gallery-fullscreen-btn\"\n      [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n      aria-label=\"Toggle fullscreen\"\n      (click)=\"toggleFullscreen()\"\n    ></button>\n    <button\n      type=\"button\"\n      #btnZoom\n      class=\"lightbox-gallery-button lightbox-gallery-zoom-btn\"\n      [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n      aria-label=\"Zoom in\"\n      (click)=\"zoom()\"\n    ></button>\n    <button\n      type=\"button\"\n      class=\"lightbox-gallery-button lightbox-gallery-close-btn\"\n      [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n      aria-label=\"Close\"\n      (click)=\"close()\"\n    ></button>\n  </div>\n</div>\n\n<div class=\"lightbox-gallery-content\">\n  <div #activeItemWrapper class=\"lightbox-gallery-image\">\n    <img\n      #activeItem\n      [src]=\"activeLightboxItem.img || activeLightboxItem.el.nativeElement.src\"\n      [alt]=\"activeLightboxItem.el.nativeElement.alt\"\n      draggable=\"false\"\n      @fade\n      (load)=\"load()\"\n      (mousedown)=\"onMousedown($event)\"\n      (mouseup)=\"onMouseup($event)\"\n      (mousemove)=\"onMousemove($event)\"\n      (wheel)=\"onWheel($event)\"\n    />\n  </div>\n</div>\n\n<div #leftArrow class=\"lightbox-gallery-arrow-left\" style=\"opacity: 1\">\n  <button\n    type=\"button\"\n    #btnPrevious\n    aria-label=\"Previous\"\n    (click)=\"slide('left')\"\n    class=\"lightbox-gallery-button\"\n    [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n  ></button>\n</div>\n<div #rightArrow class=\"lightbox-gallery-arrow-right\" style=\"opacity: 1\">\n  <button\n    type=\"button\"\n    #btnNext\n    aria-label=\"Next\"\n    (click)=\"slide('right')\"\n    class=\"lightbox-gallery-button\"\n    [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n  ></button>\n</div>\n<div class=\"lightbox-gallery-caption-wrapper\">\n  <p class=\"lightbox-gallery-caption\">\n    {{ activeLightboxItem.caption || activeLightboxItem.el.nativeElement.alt }}\n  </p>\n</div>\n", directives: [{ type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], animations: [
        trigger('fade', [
            transition(':enter', [
                style({ opacity: 0 }),
                animate('1500ms', keyframes([
                    style({ opacity: 0, transform: 'scale3d(0.3, 0.3, 0.3)', offset: 0, easing: 'ease' }),
                    style({ opacity: 1, transform: 'scale3d(1, 1, 1)', offset: 0.5, easing: 'ease' }),
                ])),
            ]),
            transition(':leave', [
                style({ opacity: 1 }),
                animate('1500ms', keyframes([
                    style({ opacity: 1, offset: 0 }),
                    style({ opacity: 0, transform: 'scale3d(0.3, 0.3, 0.3)', offset: 0.5 }),
                    style({ opacity: 0, offset: 1 }),
                ])),
            ]),
        ]),
    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbLightboxModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mdb-lightbox-modal', changeDetection: ChangeDetectionStrategy.OnPush, animations: [
                        trigger('fade', [
                            transition(':enter', [
                                style({ opacity: 0 }),
                                animate('1500ms', keyframes([
                                    style({ opacity: 0, transform: 'scale3d(0.3, 0.3, 0.3)', offset: 0, easing: 'ease' }),
                                    style({ opacity: 1, transform: 'scale3d(1, 1, 1)', offset: 0.5, easing: 'ease' }),
                                ])),
                            ]),
                            transition(':leave', [
                                style({ opacity: 1 }),
                                animate('1500ms', keyframes([
                                    style({ opacity: 1, offset: 0 }),
                                    style({ opacity: 0, transform: 'scale3d(0.3, 0.3, 0.3)', offset: 0.5 }),
                                    style({ opacity: 0, offset: 1 }),
                                ])),
                            ]),
                        ]),
                    ], template: "<div #galleryToolbar class=\"lightbox-gallery-toolbar\">\n  <div #loader class=\"lightbox-gallery-loader\" style=\"opacity: 0\">\n    <div class=\"spinner-grow text-light\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n  <div class=\"lightbox-gallery-left-tools\">\n    <p class=\"lightbox-gallery-counter\">{{ index + 1 }} / {{ total }}</p>\n  </div>\n  <div class=\"lightbox-gallery-right-tools\">\n    <button\n      type=\"button\"\n      #btnFullsreen\n      class=\"lightbox-gallery-button lightbox-gallery-fullscreen-btn\"\n      [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n      aria-label=\"Toggle fullscreen\"\n      (click)=\"toggleFullscreen()\"\n    ></button>\n    <button\n      type=\"button\"\n      #btnZoom\n      class=\"lightbox-gallery-button lightbox-gallery-zoom-btn\"\n      [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n      aria-label=\"Zoom in\"\n      (click)=\"zoom()\"\n    ></button>\n    <button\n      type=\"button\"\n      class=\"lightbox-gallery-button lightbox-gallery-close-btn\"\n      [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n      aria-label=\"Close\"\n      (click)=\"close()\"\n    ></button>\n  </div>\n</div>\n\n<div class=\"lightbox-gallery-content\">\n  <div #activeItemWrapper class=\"lightbox-gallery-image\">\n    <img\n      #activeItem\n      [src]=\"activeLightboxItem.img || activeLightboxItem.el.nativeElement.src\"\n      [alt]=\"activeLightboxItem.el.nativeElement.alt\"\n      draggable=\"false\"\n      @fade\n      (load)=\"load()\"\n      (mousedown)=\"onMousedown($event)\"\n      (mouseup)=\"onMouseup($event)\"\n      (mousemove)=\"onMousemove($event)\"\n      (wheel)=\"onWheel($event)\"\n    />\n  </div>\n</div>\n\n<div #leftArrow class=\"lightbox-gallery-arrow-left\" style=\"opacity: 1\">\n  <button\n    type=\"button\"\n    #btnPrevious\n    aria-label=\"Previous\"\n    (click)=\"slide('left')\"\n    class=\"lightbox-gallery-button\"\n    [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n  ></button>\n</div>\n<div #rightArrow class=\"lightbox-gallery-arrow-right\" style=\"opacity: 1\">\n  <button\n    type=\"button\"\n    #btnNext\n    aria-label=\"Next\"\n    (click)=\"slide('right')\"\n    class=\"lightbox-gallery-button\"\n    [ngClass]=\"{ 'fontawesome-pro': lightbox.fontAwesome === 'pro' }\"\n  ></button>\n</div>\n<div class=\"lightbox-gallery-caption-wrapper\">\n  <p class=\"lightbox-gallery-caption\">\n    {{ activeLightboxItem.caption || activeLightboxItem.el.nativeElement.alt }}\n  </p>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.ConfigurableFocusTrapFactory }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i3.MdbLightboxComponent, decorators: [{
                    type: Inject,
                    args: [forwardRef(() => MdbLightboxComponent)]
                }] }]; }, propDecorators: { activeItem: [{
                type: ViewChild,
                args: ['activeItem']
            }], activeItemWrapper: [{
                type: ViewChild,
                args: ['activeItemWrapper']
            }], galleryToolbar: [{
                type: ViewChild,
                args: ['galleryToolbar']
            }], btnPrevious: [{
                type: ViewChild,
                args: ['btnPrevious']
            }], btnNext: [{
                type: ViewChild,
                args: ['btnNext']
            }], rightArrow: [{
                type: ViewChild,
                args: ['rightArrow']
            }], leftArrow: [{
                type: ViewChild,
                args: ['leftArrow']
            }], btnFullsreen: [{
                type: ViewChild,
                args: ['btnFullsreen']
            }], btnZoom: [{
                type: ViewChild,
                args: ['btnZoom']
            }], loader: [{
                type: ViewChild,
                args: ['loader']
            }], onHostMousemove: [{
                type: HostListener,
                args: ['mousemove']
            }], onHostKeyup: [{
                type: HostListener,
                args: ['keyup', ['$event']]
            }], onHostClick: [{
                type: HostListener,
                args: ['click', ['$event.target']]
            }] } });
//# sourceMappingURL=data:application/json;base64,