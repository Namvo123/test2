{"version":3,"file":"mdb-angular-calendar.mjs","sources":["../../../projects/mdb-angular-calendar/src/lib/calendar.utils.ts","../../../projects/mdb-angular-calendar/src/lib/calendar-event-modal.component.ts","../../../projects/mdb-angular-calendar/src/lib/calendar-event-modal.component.html","../../../projects/mdb-angular-calendar/src/lib/calendar-tools.component.ts","../../../projects/mdb-angular-calendar/src/lib/calendar-tools.component.html","../../../projects/mdb-angular-calendar/src/lib/calendar-month-view.component.ts","../../../projects/mdb-angular-calendar/src/lib/calendar-month-view.component.html","../../../projects/mdb-angular-calendar/src/lib/calendar-week-view.component.ts","../../../projects/mdb-angular-calendar/src/lib/calendar-week-view.component.html","../../../projects/mdb-angular-calendar/src/lib/calendar-list-view.component.ts","../../../projects/mdb-angular-calendar/src/lib/calendar-list-view.component.html","../../../projects/mdb-angular-calendar/src/lib/calendar.component.ts","../../../projects/mdb-angular-calendar/src/lib/calendar.component.html","../../../projects/mdb-angular-calendar/src/lib/calendar.module.ts","../../../projects/mdb-angular-calendar/src/public-api.ts","../../../projects/mdb-angular-calendar/src/mdb-angular-calendar.ts"],"sourcesContent":["import { MdbCalendarEvent } from './calendar.event.interface';\n\nconst MS_IN_DAY = 24 * 60 * 60 * 1000;\nconst MS_IN_HOUR = 1000 * 60 * 60;\n\nexport function getToday(): Date {\n  return new Date();\n}\n\nexport function getDate(date: Date): number {\n  return date.getDate();\n}\n\nexport function getDayNumber(date: Date): number {\n  return date.getDay();\n}\n\nexport function getMonth(date: Date): number {\n  return date.getMonth();\n}\n\nexport function getYear(date: Date): number {\n  return date.getFullYear();\n}\n\nexport function getDaysInMonth(date: Date): number {\n  return getMonthEnd(date).getDate();\n}\n\nexport function getMonthEnd(date: Date): Date {\n  return createDate(date.getFullYear(), date.getMonth() + 1, 0, 23, 59, 59, 999);\n}\n\nexport function differenceInDays(dateStart: Date, dateEnd: Date) {\n  return Math.floor((dateEnd.getTime() - dateStart.getTime()) / MS_IN_DAY);\n}\n\nexport function differenceInHours(dateStart: Date, dateEnd: Date) {\n  return Math.floor((dateEnd.getTime() - dateStart.getTime()) / MS_IN_HOUR);\n}\n\nexport function isSameDate(date1: Date, date2: Date): boolean {\n  date1.setHours(0, 0, 0, 0);\n  date2.setHours(0, 0, 0, 0);\n\n  return date1.getTime() === date2.getTime();\n}\n\nexport function getFirstDayOfWeek(year: number, month: number, mondayFirst: boolean): number {\n  const firstDayIndex = mondayFirst ? 1 : 0;\n  const sundayIndex = firstDayIndex > 0 ? 7 - firstDayIndex : 0;\n  const date = new Date(year, month);\n  const index = getDayNumber(date) + sundayIndex;\n  const newIndex = index >= 7 ? index - 7 : index;\n  return newIndex;\n}\n\nexport function addMonths(date: Date, months: number): Date {\n  const month = createDate(\n    date.getFullYear(),\n    date.getMonth() + months,\n    date.getDate(),\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds()\n  );\n  const dayOfPreviousMonth = getDate(date);\n  const dayOfNewMonth = getDate(month);\n\n  // Solution for edge cases, like moving from a month with a greater number\n  // of days than the destination month. For example, when we move from 31 Mar 2020 to\n  // February, createDate(2020, 2, 31) will return 2 Mar 2020, not the desired 29 Feb 2020.\n  // We need to use setDate(0) to move back to the last day of the previous month (29 Feb 2020)\n  if (dayOfPreviousMonth !== dayOfNewMonth) {\n    month.setDate(0);\n  }\n\n  return month;\n}\n\nexport function addDays(date: Date, days: number): Date {\n  return createDate(\n    date.getFullYear(),\n    date.getMonth(),\n    date.getDate() + days,\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds()\n  );\n}\n\nexport function addHours(date: Date, hours: number): Date {\n  const currentHour = date.getHours();\n  return new Date(date.setHours(currentHour + hours));\n}\n\nexport function addMinutes(date: Date, minutes: number): Date {\n  const currentMinutes = date.getMinutes();\n  return new Date(date.setMinutes(currentMinutes + minutes));\n}\n\nexport function startOfDay(date: Date): Date {\n  return new Date(date.setHours(0, 0, 0, 0));\n}\n\nexport function endOfDay(date: Date): Date {\n  return new Date(date.setHours(23, 59, 59, 999));\n}\n\nexport function createDate(\n  year: number,\n  month: number,\n  day: number,\n  hours: number,\n  minutes: number,\n  seconds: number,\n  milliseconds: number\n): Date {\n  const result = new Date(year, month, day, hours, minutes, seconds, milliseconds);\n\n  // In js native date years from 0 to 99 are treated as abbreviation\n  // for dates like 19xx\n  if (year >= 0 && year < 100) {\n    result.setFullYear(result.getFullYear() - 1900);\n  }\n  return result;\n}\n\nexport function format(dateToFormat: Date) {\n  let month: number | string = getMonth(new Date(dateToFormat)) + 1;\n  let day: number | string = getDate(new Date(dateToFormat));\n  let hours: number | string = new Date(dateToFormat).getHours();\n  let minutes: number | string = new Date(dateToFormat).getMinutes();\n\n  if (month < 10) {\n    month = '0' + month;\n  }\n\n  if (day < 10) {\n    day = '0' + day;\n  }\n\n  if (minutes < 10) {\n    minutes = '0' + minutes;\n  }\n\n  if (hours < 10) {\n    hours = '0' + hours;\n  }\n\n  let time = `${hours}:${minutes}`;\n\n  const year = getYear(new Date(dateToFormat));\n  const date = `${day}/${month}/${year}`;\n  const shouldReturnTime = time !== '00:00' && time !== '23:59';\n  const string = shouldReturnTime ? `${date} ${time}` : `${date}`;\n\n  return { day, month, year, time, string, date };\n}\n\nexport function convertDateTo24h(dateTime: string): string {\n  let [date, time, modifier] = dateTime.split(' ');\n  time = convertTimeTo24h(`${time} ${modifier}`);\n\n  return `${date} ${time}`;\n}\n\nexport function convertDateTo12h(dateTime: string): string {\n  let [date, time] = dateTime.split(' ');\n\n  if (time) {\n    time = convertTimeTo12h(time);\n  }\n\n  return time ? `${date} ${time}` : `${date}`;\n}\n\nexport function convertTimeTo24h(timeToFormat: string): string {\n  let [time, modifier] = timeToFormat.split(' ');\n  let [hours, minutes] = time.split(':');\n\n  if (hours === '12') {\n    hours = '00';\n  }\n\n  if (modifier === 'PM') {\n    hours = `${parseInt(hours, 10) + 12}`;\n  }\n\n  return `${hours}:${minutes}`;\n}\n\nexport function convertTimeTo12h(timeToFormat: string): string {\n  let hours;\n  let minutes;\n  let modifier = 'AM';\n\n  [hours, minutes] = timeToFormat.split(':');\n\n  if (hours === '00') {\n    hours = 12;\n  } else if (hours > 12) {\n    hours -= 12;\n    hours = hours < 10 ? '0' + hours : hours;\n    modifier = 'PM';\n  } else if (hours === 12) {\n    modifier = 'PM';\n  }\n\n  return `${hours}:${minutes} ${modifier}`;\n}\n\nexport function getEvents(\n  events: MdbCalendarEvent[],\n  startDate: Date,\n  endDate: Date,\n  hourEvent = false\n): MdbCalendarEvent[] {\n  if (!events) {\n    return;\n  }\n\n  let filteredEvents = filterEvents(events, startDate, endDate).sort((a, b) => {\n    const aStartDate = a.startDate as Date;\n    const bStartDate = b.startDate as Date;\n\n    return aStartDate.getTime() - bStartDate.getTime();\n  });\n\n  let result = mapEvents(filteredEvents, startDate, endDate);\n\n  if (hourEvent) {\n    return result.filter((event) => !event.allDay && !event.longEvent);\n  }\n\n  return result;\n}\n\nexport function filterEvents(events: any, startDate: Date, endDate: Date): MdbCalendarEvent[] {\n  return events.filter((event: any) => {\n    if (event.startDate >= startDate && event.endDate <= endDate) {\n      return true;\n    }\n\n    if (event.endDate >= startDate && event.endDate <= endDate) {\n      return true;\n    }\n\n    if (event.startDate <= startDate && event.endDate >= endDate) {\n      return true;\n    }\n\n    if (event.startDate >= startDate && event.startDate <= endDate) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nexport function mapEvents(\n  events: MdbCalendarEvent[],\n  startDate: Date,\n  endDate: Date\n): MdbCalendarEvent[] {\n  let order = 1;\n\n  events.forEach((event: MdbCalendarEvent) => {\n    const eventStart = (event.startDate as Date) >= startDate;\n\n    if (eventStart) {\n      event.order = order;\n      order += 1;\n    } else {\n      order = event.order + 1;\n    }\n  });\n\n  return events.map((event: MdbCalendarEvent) => {\n    const startData = format(event.startDate as Date);\n    const endData = format(event.endDate as Date);\n    const eventStartDate = event.startDate as Date;\n    const eventEndDate = event.endDate as Date;\n    const eventDuration = differenceInDays(eventStartDate, eventEndDate as Date);\n\n    return {\n      ...event,\n      startData: startData,\n      endData: endData,\n      eventStart: eventStartDate >= startDate,\n      eventEnd: event.endDate <= endDate,\n      oneDay:\n        startData.date == endData.date &&\n        eventEndDate.getTime() - eventStartDate.getTime() < MS_IN_DAY,\n      allDay:\n        eventEndDate.getTime() - eventStartDate.getTime() - eventDuration * MS_IN_DAY ==\n        MS_IN_DAY - 1,\n      longEvent: eventEndDate.getTime() - eventStartDate.getTime() >= MS_IN_DAY,\n    };\n  });\n}\n\nexport function generateEvent(selectionStartDate: Date, selectionEndDate?: Date): MdbCalendarEvent {\n  let startDate = selectionStartDate;\n  let endDate = selectionStartDate;\n\n  if (selectionEndDate) {\n    startDate = selectionStartDate < selectionEndDate ? selectionStartDate : selectionEndDate;\n    endDate = selectionStartDate > selectionEndDate ? selectionStartDate : selectionEndDate;\n  }\n\n  const eventDuration = differenceInDays(startDate, endDate);\n  const isAllDayEvent = endDate.getTime() - startDate.getTime() - eventDuration * MS_IN_DAY === 0;\n\n  if (isAllDayEvent) {\n    startDate = startOfDay(startDate);\n    endDate = endOfDay(endDate);\n  }\n\n  const newEvent = {\n    id: generateUid(),\n    summary: '',\n    startDate,\n    endDate,\n    startData: format(startDate),\n    endData: format(endDate),\n    description: '',\n    allDay: isAllDayEvent,\n    color: {\n      background: 'primary',\n    },\n  };\n\n  return newEvent;\n}\n\nexport function generateUid(): string {\n  const uid = Math.random().toString(36).substr(2, 9);\n  return `mdb-calendar-event-${uid}`;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\nimport { MdbCalendarEvent } from './calendar.event.interface';\nimport { convertTimeTo12h, generateEvent, getDate, getMonth, getYear } from './calendar.utils';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mdb-calendar-event-modal',\n  templateUrl: 'calendar-event-modal.component.html',\n})\nexport class MdbCalendarEventModalComponent implements OnInit {\n  options;\n  description = '';\n  mode: string;\n  event: any;\n  editable = true;\n  color = 'primary';\n  twelveHours = false;\n\n  eventForm: FormGroup;\n\n  constructor(public modalRef: MdbModalRef<MdbCalendarEventModalComponent>) {}\n\n  ngOnInit(): void {\n    const startData = this.event.startData;\n    const endData = this.event.endData;\n    let startTime = startData.time;\n    let endTime = endData.time;\n\n    if (this.twelveHours) {\n      startTime = convertTimeTo12h(startTime);\n      endTime = convertTimeTo12h(endTime);\n    }\n\n    this.eventForm = new FormGroup({\n      summary: new FormControl(\n        { value: this.event.summary, disabled: !this.editable },\n        { validators: Validators.required, updateOn: 'submit' }\n      ),\n      description: new FormControl({ value: this.event.description, disabled: !this.editable }),\n      allDay: new FormControl({ value: this.event.allDay, disabled: !this.editable }),\n      startDate: new FormControl(\n        {\n          value: new Date(`${startData.year}/${startData.month}/${startData.day}`),\n          disabled: !this.editable,\n        },\n        { validators: Validators.required, updateOn: 'submit' }\n      ),\n      endDate: new FormControl(\n        {\n          value: new Date(`${endData.year}/${endData.month}/${endData.day}`),\n          disabled: !this.editable,\n        },\n        { validators: Validators.required, updateOn: 'submit' }\n      ),\n      startTime: new FormControl({ value: startTime, disabled: !this.editable }),\n      endTime: new FormControl({ value: endTime, disabled: !this.editable }),\n      color: new FormControl({ value: this.event.color.background, disabled: !this.editable }),\n    });\n  }\n\n  onRemoveClick(): void {\n    this.modalRef.close('remove');\n  }\n\n  onSubmit(): void {\n    this.eventForm.markAllAsTouched();\n\n    if (this.mode === 'add' && this.eventForm.status === 'VALID') {\n      this.modalRef.close(this.parseEventData());\n    } else if (this.eventForm.status === 'VALID') {\n      this.modalRef.close(this.parseEventData());\n    }\n  }\n\n  parseEventData(): MdbCalendarEvent {\n    const newEvent = this.eventForm.value;\n    const summary = newEvent.summary;\n    const description = newEvent.description;\n    const allDay = newEvent.allDay;\n    const startDate = newEvent.startDate;\n    const endDate = newEvent.endDate;\n    const startTime = newEvent.startTime;\n    const endTime = newEvent.endTime;\n    const eventColor = newEvent.color;\n    let startDateTime = `${getYear(startDate)}/${getMonth(startDate) + 1}/${getDate(\n      startDate\n    )} ${startTime}`;\n    let endDateTime = `${getYear(endDate)}/${getMonth(endDate) + 1}/${getDate(endDate)} ${endTime}`;\n\n    const event = generateEvent(new Date(startDateTime), new Date(endDateTime));\n\n    return {\n      ...event,\n      summary,\n      description,\n      allDay,\n      color: {\n        background: eventColor,\n      },\n    };\n  }\n}\n","<form [formGroup]=\"eventForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\" id=\"{{event.id}}-modal\">{{ mode === 'edit' ? options.editEventModalCaption : options.addEventModalCaption }}</h5>\n    <button\n      type=\"button\"\n      class=\"btn-close\"\n      aria-label=\"Close\"\n      (click)=\"modalRef.close()\"\n    ></button>\n  </div>\n  <div class=\"modal-body\">\n    <mdb-form-control class=\"my-3\">\n      <input \n        mdbInput\n        mdbValidate\n        validateSuccess=\"false\"\n        required\n        type=\"text\"\n        id=\"eventModalSummary\"\n        formControlName=\"summary\"\n        class=\"form-control\"\n      />\n      <label mdbLabel class=\"form-label\" for=\"eventModalSummary\">{{ options.summaryCaption }}</label>\n    </mdb-form-control>\n    <mdb-form-control  class=\"my-3\">\n      <textarea mdbInput class=\"form-control\" id=\"eventModalDescription\" rows=\"2\" formControlName=\"description\"></textarea>\n      <label mdbLabel class=\"form-label\" for=\"eventModalDescription\">{{ options.descriptionCaption }}</label>\n    </mdb-form-control>\n    <div class=\"form-check mx-2\">\n      <input\n        mdbCheckbox\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        value=\"\"\n        id=\"eventModalAllDayCheckbox\"\n        formControlName=\"allDay\"\n      />\n      <label class=\"form-check-label\" for=\"eventModalAllDayCheckbox\">\n        {{ options.allDayCaption }}\n      </label>\n    </div>\n    <div class=\"row my-3\">\n      <div [ngClass]=\"eventForm.value.allDay ? 'col-12' : 'col-6'\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            mdbValidate\n            validateSuccess=\"false\"\n            required\n            formControlName=\"startDate\"\n            [mdbDatepicker]=\"datepickerStartDate\"\n            type=\"text\"\n            class=\"form-control\"\n            id=\"eventModalStartDate\"\n          />\n          <label mdbLabel for=\"eventModalStartDate\" class=\"form-label\">{{ options.startCaption }}</label>\n          <mdb-datepicker-toggle [mdbDatepicker]=\"datepickerStartDate\"></mdb-datepicker-toggle>\n          <mdb-datepicker #datepickerStartDate></mdb-datepicker>\n        </mdb-form-control>\n      </div>\n      <div *ngIf=\"!eventForm.value.allDay\" class=\"col-6\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            formControlName=\"startTime\"\n            type=\"text\"\n            id=\"eventModalStartTime\"\n            class=\"form-control\"\n            [mdbTimepicker]=\"timepickerStartTime\"\n            required\n          />\n          <label mdbLabel class=\"form-label\" for=\"eventModalStartTime\">{{ options.startCaption }}</label>\n          <mdb-timepicker-toggle [mdbTimepickerToggle]=\"timepickerStartTime\"></mdb-timepicker-toggle>\n          <mdb-timepicker #timepickerStartTime [format24]=\"!twelveHours\"></mdb-timepicker>\n        </mdb-form-control>\n      </div>\n    </div>\n    <div class=\"row my-3\">\n      <div [ngClass]=\"eventForm.value.allDay ? 'col-12' : 'col-6'\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            mdbValidate\n            validateSuccess=\"false\"\n            required\n            [mdbDatepicker]=\"datepickerEndDate\"\n            type=\"text\"\n            class=\"form-control\"\n            id=\"eventModalEndDate\"\n            formControlName=\"endDate\"\n          />\n          <label mdbLabel for=\"eventModalEndDate\" class=\"form-label\">{{ options.endCaption }}</label>\n          <mdb-datepicker-toggle [mdbDatepicker]=\"datepickerEndDate\"></mdb-datepicker-toggle>\n          <mdb-datepicker #datepickerEndDate></mdb-datepicker>\n        </mdb-form-control>\n      </div>\n      <div *ngIf=\"!eventForm.value.allDay\" class=\"col-6\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            formControlName=\"endTime\"\n            type=\"text\"\n            id=\"eventModalEndTime\"\n            class=\"form-control\"\n            [mdbTimepicker]=\"timepickerEndTime\"\n            required\n          />\n          <label mdbLabel class=\"form-label\" for=\"eventModalEndTime\">{{ options.endCaption }}</label>\n          <mdb-timepicker-toggle [mdbTimepickerToggle]=\"timepickerEndTime\"></mdb-timepicker-toggle>\n          <mdb-timepicker #timepickerEndTime [format24]=\"!twelveHours\"></mdb-timepicker>\n        </mdb-form-control>\n      </div>\n    </div>\n    <div class=\"text-center mt-3\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundPrimary\"\n          [checked]=\"true\"\n          value=\"primary\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundPrimary\">\n          <i class=\"fas fa-circle text-primary\"></i>\n        </label>\n      </div>\n      \n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundSecondary\"\n          value=\"secondary\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundSecondary\">\n          <i class=\"fas fa-circle text-secondary\"></i>\n        </label>\n      </div>\n      \n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundSuccess\"\n          value=\"success\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundSuccess\">\n          <i class=\"fas fa-circle text-success\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundDanger\"\n          value=\"danger\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundDanger\">\n          <i class=\"fas fa-circle text-danger\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundWarning\"\n          value=\"warning\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundWarning\">\n          <i class=\"fas fa-circle text-warning\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundInfo\"\n          value=\"info\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundInfo\">\n          <i class=\"fas fa-circle text-info\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundDark\"\n          value=\"dark\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundDark\">\n          <i class=\"fas fa-circle text-dark\"></i>\n        </label>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <ng-container *ngIf=\"mode !== 'edit'\">\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"modalRef.close()\">\n        {{ options.closeCaption }}\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary\" >{{ options.addCaption }}</button>\n    </ng-container>\n    <ng-container *ngIf=\"mode === 'edit'\">\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"onRemoveClick()\">\n        {{ options.deleteCaption }}\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary\">{{ options.editCaption }}</button>\n    </ng-container>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { addDays, getDate, getDayNumber, getMonth, getYear } from './calendar.utils';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mdb-tools-calendar',\n  templateUrl: './calendar-tools.component.html',\n  styles: [],\n})\nexport class MdbCalendarToolsComponent {\n  @Input() options;\n  @Input()\n  get activeDate(): Date {\n    return this._activeDate;\n  }\n  set activeDate(date: Date) {\n    this._activeDate = date;\n    this.setPeriod();\n  }\n  private _activeDate: Date;\n  @Input() mondayFirst;\n  @Input()\n  get activeView(): String {\n    return this._activeView;\n  }\n  set activeView(view: String) {\n    this._activeView = view;\n    this.setPeriod();\n  }\n  private _activeView: String;\n\n  @Output() viewChange: EventEmitter<string> = new EventEmitter();\n  @Output() previousBtnClick: EventEmitter<string> = new EventEmitter();\n  @Output() nextBtnClick: EventEmitter<string> = new EventEmitter();\n  @Output() todayBtnClick: EventEmitter<string> = new EventEmitter();\n\n  period;\n\n  constructor() {}\n\n  setPeriod(): void {\n    switch (this.activeView) {\n      case 'month':\n        this.period = `${\n          this.options.months[this.activeDate.getMonth()]\n        } ${this.activeDate.getFullYear()}`;\n        break;\n      default:\n        const sundayIndex = this.mondayFirst ? 1 : 0;\n        const firstDay = addDays(this.activeDate, -getDayNumber(this.activeDate) + sundayIndex);\n        const lastDay = addDays(firstDay, 6);\n\n        const periodStart = `${this.options.monthsShort[getMonth(firstDay)]} ${getDate(firstDay)}`;\n        const periodEnd = `${this.options.monthsShort[getMonth(lastDay)]} ${getDate(\n          lastDay\n        )}, ${getYear(lastDay)}`;\n\n        this.period = `${periodStart} - ${periodEnd}`;\n        break;\n    }\n  }\n\n  toggleView(view: string): void {\n    this.viewChange.emit(view);\n  }\n\n  handlePreviousBtnClick(): void {\n    this.previousBtnClick.emit();\n  }\n\n  handleNextBtnClick(): void {\n    this.nextBtnClick.emit();\n  }\n\n  handleTodayBtnClick(): void {\n    this.todayBtnClick.emit();\n  }\n}\n","<div class=\"calendar-tools\">\n  <div class=\"btn-group btn-group-sm shadow-0\">\n    <button class=\"btn btn-outline-primary\" (click)=\"handlePreviousBtnClick()\">\n      <i class=\"fas fa-chevron-left\"></i>\n    </button>\n    <button class=\"btn btn-outline-primary\" (click)=\"handleNextBtnClick()\">\n      <i class=\"fas fa-chevron-right\"></i>\n    </button>\n    <button class=\"btn btn-outline-primary\" (click)=\"handleTodayBtnClick()\">{{ options.todayCaption }}</button>\n  </div>\n  <span class=\"calendar-heading\">{{ period }}</span>\n  <div class=\"btn-group btn-group-sm shadow-0\">\n    <button class=\"btn btn-outline-primary\" (click)=\"toggleView('month')\">{{ options.monthCaption }}</button>\n    <button class=\"btn btn-outline-primary\" (click)=\"toggleView('week')\">{{ options.weekCaption }}</button>\n    <button class=\"btn btn-outline-primary\" (click)=\"toggleView('list')\">{{ options.listCaption }}</button>\n  </div>\n</div>","import {\n  EventEmitter,\n  Component,\n  Input,\n  OnInit,\n  Output,\n  ElementRef,\n  ViewChildren,\n  QueryList,\n  Renderer2,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  getFirstDayOfWeek,\n  getDaysInMonth,\n  getMonth,\n  addMonths,\n  createDate,\n  isSameDate,\n  getToday,\n  getDate,\n  getYear,\n  endOfDay,\n  startOfDay,\n  generateEvent,\n  getEvents,\n  differenceInDays,\n  addDays,\n  convertDateTo12h,\n} from './calendar.utils';\nimport { MdbCalendarEvent } from './calendar.event.interface';\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mdb-month-view-calendar',\n  templateUrl: './calendar-month-view.component.html',\n  styles: [],\n})\nexport class MdbCalendarMonthViewComponent implements OnInit, AfterViewInit {\n  @ViewChildren('dayEl') days: QueryList<ElementRef>;\n\n  @Input() readonly: boolean;\n  @Input() options: any;\n  @Input() mondayFirst: boolean;\n  @Input() twelveHours: boolean;\n  @Input()\n  get activeDate(): Date {\n    return this._activeDate;\n  }\n  set activeDate(date: Date) {\n    this._activeDate = date;\n    this.dates = this._generateDayView();\n  }\n  private _activeDate: Date;\n\n  @Input()\n  get events() {\n    return this._events;\n  }\n  set events(events: MdbCalendarEvent[]) {\n    this._events = events;\n    this.dates = this._generateDayView();\n  }\n  private _events: MdbCalendarEvent[];\n  @Output() dayClicked: EventEmitter<MdbCalendarEvent> = new EventEmitter();\n  @Output() eventClicked: EventEmitter<MdbCalendarEvent> = new EventEmitter();\n  @Output() eventDragged: EventEmitter<any> = new EventEmitter();\n\n  dates = [];\n  daysEl;\n  weekdays: string[];\n  isDragging = false;\n\n  dragStart: any;\n  dragEnd: any;\n\n  selectionStartDay: Date;\n  selectionEndDay: Date;\n\n  dragTargetDay;\n  hoveredEventId;\n  draggedEventId;\n\n  constructor(private _renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.weekdays = this._getWeekdays();\n    this.dates = this._generateDayView();\n  }\n\n  ngAfterViewInit() {\n    this.daysEl = this.days.toArray().map((el: ElementRef) => el.nativeElement);\n  }\n\n  onEventClick(event: MdbCalendarEvent): void {\n    if (this.readonly) {\n      return;\n    }\n\n    this.eventClicked.emit(event);\n  }\n\n  onDayClick(day: any): void {\n    if (this.readonly) {\n      return;\n    }\n\n    const newCalendarEvent = generateEvent(day.date);\n    this.dayClicked.emit(newCalendarEvent);\n  }\n\n  onMouseDown(event: MouseEvent, day): void {\n    if (this.readonly) {\n      return;\n    }\n\n    this.isDragging = true;\n    this.dragStart = this.daysEl.indexOf(event.target);\n    this.selectionStartDay = day.date;\n  }\n\n  onMouseUp(event: MouseEvent, day): void {\n    if (this.readonly) {\n      return;\n    }\n\n    this.isDragging = false;\n    this.dragEnd = this.daysEl.indexOf(event.target);\n\n    if (this.dragEnd !== 0) {\n      this.selectRange();\n    }\n\n    this.clearSelection();\n    this.selectionEndDay = day.date;\n\n    if (this.selectionStartDay === this.selectionEndDay) {\n      return;\n    }\n\n    const newCalendarEvent = generateEvent(this.selectionStartDay, this.selectionEndDay);\n    this.dayClicked.emit(newCalendarEvent);\n  }\n\n  onMouseMove(event: MouseEvent): void {\n    if (this.readonly) {\n      return;\n    }\n\n    event.preventDefault();\n    if (this.isDragging) {\n      this.dragEnd = this.daysEl.indexOf(event.target);\n      this.selectRange();\n    }\n  }\n\n  onEventDragStart(calendarEvent: MdbCalendarEvent): void {\n    this.draggedEventId = calendarEvent.id;\n    this.clearSelection();\n  }\n\n  onEventDragEnd(calendarEvent: MdbCalendarEvent): void {\n    this.draggedEventId = '';\n    this.hoveredEventId = '';\n\n    const daysDifference = differenceInDays(\n      calendarEvent.startDate as Date,\n      this.dragTargetDay.date\n    );\n    const newStartDate = addDays(calendarEvent.startDate as Date, daysDifference);\n    const newEndDate = addDays(calendarEvent.endDate as Date, daysDifference);\n\n    const newEvent = {\n      ...calendarEvent,\n      startDate: newStartDate,\n      endDate: newEndDate,\n      order: '',\n    };\n\n    this.eventDragged.emit(newEvent);\n  }\n\n  onDragEnter(event: DragEvent, day: any): void {\n    this._renderer.addClass(event.target, 'dragenter');\n    this.dragTargetDay = day;\n  }\n\n  onDragLeave(event: DragEvent): void {\n    this._renderer.removeClass(event.target, 'dragenter');\n  }\n\n  onDragOver(event: DragEvent): boolean {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    return false;\n  }\n\n  onMouseEnter(event: MdbCalendarEvent): void {\n    this.hoveredEventId = event.id;\n  }\n\n  onMouseLeave(): void {\n    this.hoveredEventId = '';\n  }\n\n  selectRange(): void {\n    this.clearSelection();\n    if (this.dragEnd + 1 < this.dragStart) {\n      this.daysEl\n        .slice(this.dragEnd, this.dragStart + 1)\n        .forEach((cell) => this._renderer.setStyle(cell, 'background-color', '#fafafa'));\n    } else {\n      this.daysEl\n        .slice(this.dragStart, this.dragEnd + 1)\n        .forEach((cell) => this._renderer.setStyle(cell, 'background-color', '#fafafa'));\n    }\n  }\n\n  clearSelection(): void {\n    this.daysEl.forEach((cell) => this._renderer.removeStyle(cell, 'background-color'));\n  }\n\n  convertDateTo12hFormat(date: string): string {\n    return convertDateTo12h(date);\n  }\n\n  _generateDayView(): any {\n    const dates = [];\n    const month = getMonth(this.activeDate);\n    const previousMonth = getMonth(addMonths(this.activeDate, -1));\n    const nextMonth = getMonth(addMonths(this.activeDate, 1));\n    const year = getYear(this.activeDate);\n    const firstDay = getFirstDayOfWeek(year, month, this.mondayFirst);\n    const daysInMonth = getDaysInMonth(this.activeDate);\n    const daysInPreviousMonth = getDaysInMonth(addMonths(this.activeDate, -1));\n    const daysInWeek = 7;\n\n    let dayNumber = 1;\n    let isCurrentMonth = false;\n    for (let i = 1; i < daysInWeek; i++) {\n      const week = [];\n      if (i === 1) {\n        // First week\n        const previousMonthDay = daysInPreviousMonth - firstDay + 1;\n        // Previous month\n        for (let j = previousMonthDay; j <= daysInPreviousMonth; j++) {\n          const date = createDate(year, previousMonth, j, 0, 0, 0, 0);\n\n          week.push({\n            date,\n            currentMonth: isCurrentMonth,\n            isToday: isSameDate(date, getToday()),\n            dayNumber: getDate(date),\n            event: getEvents(this.events, startOfDay(date), endOfDay(date), false),\n          });\n        }\n\n        isCurrentMonth = true;\n        // Current month\n        const daysLeft = daysInWeek - week.length;\n        for (let j = 0; j < daysLeft; j++) {\n          const date = createDate(year, month, dayNumber, 0, 0, 0, 0);\n\n          week.push({\n            date,\n            currentMonth: isCurrentMonth,\n            isToday: isSameDate(date, getToday()),\n            dayNumber: getDate(date),\n            event: getEvents(this.events, startOfDay(date), endOfDay(date), false),\n          });\n          dayNumber++;\n        }\n      } else {\n        // Rest of the weeks\n        for (let j = 1; j < 8; j++) {\n          if (dayNumber > daysInMonth) {\n            // Next month\n            dayNumber = 1;\n            isCurrentMonth = false;\n          }\n          const date = createDate(year, isCurrentMonth ? month : nextMonth, dayNumber, 0, 0, 0, 0);\n\n          week.push({\n            date,\n            currentMonth: isCurrentMonth,\n            isToday: isSameDate(date, getToday()),\n            dayNumber: getDate(date),\n            event: getEvents(this.events, startOfDay(date), endOfDay(date), false),\n          });\n          dayNumber++;\n        }\n      }\n      dates.push(week);\n    }\n    return dates;\n  }\n\n  private _getWeekdays(): string[] {\n    const startDay = this.mondayFirst ? 1 : 0;\n    const weekdays = this.options.weekdays;\n    const sortedWeekdays = weekdays.slice(startDay).concat(weekdays.slice(0, startDay));\n\n    return startDay !== 0 ? sortedWeekdays : weekdays;\n  }\n}\n","<table class=\"month\">\n  <thead>\n    <tr>\n      <th *ngFor=\"let weekDay of weekdays\">\n        {{ weekDay }}\n      </th>\n    </tr>\n  </thead>\n  <tbody cdkDropList>\n    <tr *ngFor=\"let date of dates\">\n      <td\n        #dayEl\n        *ngFor=\"let day of date; let dayIndex = index\"\n        [ngClass]=\"{'disabled': !day.currentMonth, 'today': day.isToday}\"\n        (click)=\"onDayClick(day)\"\n        (mousedown)=\"onMouseDown($event, day)\"\n        (mouseup)=\"onMouseUp($event, day)\" \n        (mouseenter)=\"onMouseMove($event)\"\n        (dragenter)=\"onDragEnter($event, day)\"\n        (dragover)=\"onDragOver($event)\"\n        (dragleave)=\"onDragLeave($event)\"\n      >\n        <div class=\"day-field\">{{ day.dayNumber }}</div>\n        <div class=\"events-wrapper\">\n          <ng-container *ngFor=\"let event of day.event; let i = index\">\n            <ng-container *ngIf=\"event.order > i + 1 && i === 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1); let index = index\"\n                [ngStyle]=\"{ order: index + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <ng-container *ngIf=\"event.order > i + 1 && i !== 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1 - day.event[i -1].order); let index = index\"\n                [ngStyle]=\"{ order: event.order - day.event[i - 1].order + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <div \n              draggable=\"true\"\n              *ngIf=\"event.allDay || event.longEvent\" \n              class=\"event bg-{{event.color.background}}\"\n              [ngClass]=\"{'event-long': !event.eventStart, 'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ color: event.color.foreground, order: event.order }\"\n              id=\"{{i === 0 ? event.id : ''}}\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                  - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\n              \"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >\n              {{ event.eventStart || dayIndex === 0 ? event.summary : '&nbsp;' }}\n            </div>\n            <div \n              draggable=\"true\"\n              *ngIf=\"!event.allDay && !event.longEvent\"  \n              class=\"event event-short text-{{event.color.background}}\"\n              [ngClass]=\"{'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ order: event.order }\"\n              id=\"{{i === 0 ? event.id : ''}}\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                   - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\n              \"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >\n              <i class=\"fas fa-circle pe-1 event-circle\"></i>\n              {{ event.summary }}\n            </div>\n          </ng-container>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>","import {\n  OnInit,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Renderer2,\n  ViewChildren,\n  QueryList,\n  ElementRef,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  convertDateTo12h,\n  differenceInDays,\n  differenceInHours,\n  generateEvent,\n  getEvents,\n  addDays,\n  addHours,\n  addMinutes,\n  endOfDay,\n  getDate,\n  getDayNumber,\n  getMonth,\n  getToday,\n  getYear,\n  isSameDate,\n  startOfDay,\n} from './calendar.utils';\nimport { MdbCalendarEvent } from './calendar.event.interface';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mdb-week-view-calendar',\n  templateUrl: './calendar-week-view.component.html',\n  styles: [],\n})\nexport class MdbCalendarWeekViewComponent implements OnInit, AfterViewInit {\n  @ViewChildren('hourEl') hours: QueryList<ElementRef>;\n\n  @Input() readonly: boolean;\n  @Input() options;\n  @Input() mondayFirst: boolean;\n  @Input() twelveHours: boolean;\n  @Input()\n  get activeDate(): Date {\n    return this._activeDate;\n  }\n  set activeDate(date: Date) {\n    this._activeDate = date;\n    this.weekView = this._generateWeekView();\n  }\n  private _activeDate: Date;\n  @Input()\n  get events() {\n    return this._events;\n  }\n  set events(events: MdbCalendarEvent[]) {\n    if (!events) {\n      return;\n    }\n    this._events = events;\n    this.weekView = this._generateWeekView();\n  }\n  private _events: MdbCalendarEvent[];\n\n  @Output() dayClicked: EventEmitter<MdbCalendarEvent> = new EventEmitter();\n  @Output() eventClicked: EventEmitter<MdbCalendarEvent> = new EventEmitter();\n  @Output() eventDragged: EventEmitter<any> = new EventEmitter();\n\n  weekView;\n  hoursEl;\n\n  isDragging = false;\n\n  dragStart: any;\n  dragEnd: any;\n\n  selectionStartDay: Date;\n  selectionEndDay: Date;\n\n  dragTargetDay;\n  hoveredEventId;\n  draggedEventId;\n\n  dayCells: HTMLElement[] = [];\n  columns: HTMLElement[] = [];\n\n  constructor(private _renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.weekView = this._generateWeekView();\n  }\n\n  onEventClick(event: MdbCalendarEvent): void {\n    if (this.readonly) {\n      return;\n    }\n\n    this.eventClicked.emit(event);\n  }\n\n  ngAfterViewInit(): void {\n    this.hoursEl = this.hours.toArray().map((el: ElementRef) => el.nativeElement);\n\n    for (let i = 1; i <= 7; i++) {\n      this.hoursEl.forEach((row: any) => {\n        this.columns.push(row.children[i]);\n      });\n    }\n  }\n\n  onDayClick(day: any): void {\n    if (this.readonly) {\n      return;\n    }\n\n    let startDate = addMinutes(new Date(day.date.getTime()), -59);\n    let endDate = day.date;\n\n    if (day.date.getHours() === 0) {\n      startDate = startOfDay(day.date);\n      endDate = '';\n    }\n\n    const newCalendarEvent = generateEvent(startDate, endDate);\n\n    this.dayClicked.emit(newCalendarEvent);\n  }\n\n  onMouseDown(event: MouseEvent, day: any): void {\n    if (this.readonly) {\n      return;\n    }\n\n    this.isDragging = true;\n    this.dragStart = this.columns.indexOf(event.target as HTMLElement);\n    this.selectionStartDay = day.date;\n  }\n\n  onMouseUp(event: MouseEvent, day: any): void {\n    if (this.readonly) {\n      return;\n    }\n\n    this.isDragging = false;\n    this.dragEnd = this.columns.indexOf(event.target as HTMLElement);\n    if (this.dragEnd !== 0) {\n      this.selectRange();\n    }\n\n    this.clearSelection();\n    this.selectionEndDay = day.date;\n\n    if (this.selectionStartDay === this.selectionEndDay) {\n      return;\n    }\n\n    const newCalendarEvent = generateEvent(\n      addMinutes(new Date(this.selectionStartDay.getTime()), -59),\n      addMinutes(new Date(this.selectionEndDay.getTime()), -59)\n    );\n\n    this.dayClicked.emit(newCalendarEvent);\n  }\n\n  onMouseMove(event: MouseEvent): void {\n    if (this.readonly) {\n      return;\n    }\n\n    event.preventDefault();\n    if (this.isDragging) {\n      this.dragEnd = this.columns.indexOf(event.target as HTMLElement);\n      this.selectRange();\n    }\n  }\n\n  onEventDragStart(calendarEvent: MdbCalendarEvent): void {\n    this.draggedEventId = calendarEvent.id;\n    this.clearSelection();\n  }\n\n  onEventDragEnd(calendarEvent: MdbCalendarEvent): void {\n    this.draggedEventId = '';\n    this.hoveredEventId = '';\n\n    const daysDifference = differenceInDays(\n      startOfDay(new Date(calendarEvent.startDate as Date)),\n      addDays(this.dragTargetDay.date, -1)\n    );\n    const newStartDate = addDays(calendarEvent.startDate as Date, daysDifference);\n    const newEndDate = addDays(calendarEvent.endDate as Date, daysDifference);\n\n    const newEvent = {\n      ...calendarEvent,\n      startDate: newStartDate,\n      endDate: newEndDate,\n      order: '',\n    };\n\n    this.eventDragged.emit(newEvent);\n  }\n\n  onHoursEventDragEnd(calendarEvent: MdbCalendarEvent): void {\n    this.draggedEventId = '';\n    this.hoveredEventId = '';\n\n    const daysDifference = differenceInHours(\n      calendarEvent.startDate as Date,\n      this.dragTargetDay.date\n    );\n    const newStartDate = addHours(calendarEvent.startDate as Date, daysDifference);\n    const newEndDate = addHours(calendarEvent.endDate as Date, daysDifference);\n\n    const newEvent = {\n      ...calendarEvent,\n      startDate: newStartDate,\n      endDate: newEndDate,\n      order: '',\n    };\n\n    this.eventDragged.emit(newEvent);\n  }\n\n  onDragEnter(event: DragEvent, day: any): void {\n    this._renderer.addClass(event.target, 'dragenter');\n    this.dragTargetDay = day;\n  }\n\n  onDragLeave(event: DragEvent): void {\n    this._renderer.removeClass(event.target, 'dragenter');\n  }\n\n  onDragOver(event: DragEvent): boolean {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    return false;\n  }\n\n  onMouseEnter(event: MdbCalendarEvent): void {\n    this.hoveredEventId = event.id;\n  }\n\n  onMouseLeave(): void {\n    this.hoveredEventId = '';\n  }\n\n  selectRange(): void {\n    this.clearSelection();\n    if (this.dragEnd + 1 < this.dragStart) {\n      this.columns\n        .slice(this.dragEnd, this.dragStart + 1)\n        .forEach((cell) => this._renderer.setStyle(cell, 'background-color', '#fafafa'));\n    } else {\n      this.columns.slice(this.dragStart, this.dragEnd + 1).forEach((cell) => {\n        this._renderer.setStyle(cell, 'background-color', '#fafafa');\n      });\n    }\n  }\n\n  convertDateTo12hFormat(date: string): string {\n    return convertDateTo12h(date);\n  }\n\n  clearSelection(): void {\n    this.columns.forEach((cell) => this._renderer.removeStyle(cell, 'background-color'));\n  }\n\n  _generateWeekView(): any {\n    const sundayIndex = this.mondayFirst ? 1 : 0;\n    const firstDay = addDays(this.activeDate, -getDayNumber(this.activeDate) + sundayIndex);\n    const lastDay = addDays(firstDay, 6);\n\n    const period = {\n      start: `${this.options.monthsShort[getMonth(firstDay)]} ${getDate(firstDay)}`,\n      end: `${this.options.monthsShort[getMonth(lastDay)]} ${getDate(lastDay)}, ${getYear(\n        lastDay\n      )}`,\n    };\n\n    const allDayRow = [];\n    const weekRows = [];\n    let row = [];\n    let date: Date;\n    let month: number | string;\n    let day: string;\n    let dayNumber: number | string;\n    let startDate: Date;\n    let endDate: Date;\n    let dayStart: Date;\n    let dayEnd: Date;\n\n    for (let i = 0; i < 24; i++) {\n      row = [];\n\n      for (let j = 0; j < 7; j++) {\n        date = addDays(firstDay, j);\n        month = getMonth(date) + 1;\n        day = this.options.weekdays[getDayNumber(date)];\n        dayNumber = getDate(date);\n        startDate = addHours(startOfDay(date), i);\n        endDate = addMinutes(startDate, 59.99);\n        dayStart = startOfDay(date);\n        dayEnd = endOfDay(date);\n\n        if (month < 10) {\n          month = '0' + month;\n        }\n\n        if (dayNumber < 10) {\n          dayNumber = '0' + dayNumber;\n        }\n\n        row.push({\n          date: startDate,\n          isToday: isSameDate(date, getToday()),\n          events: getEvents(this.events, startDate, endDate, true),\n        });\n\n        if (i === 1) {\n          allDayRow.push({\n            date: addDays(date, 1),\n            isToday: isSameDate(date, getToday()),\n            day: day,\n            dayNumber: dayNumber,\n            month: month,\n            events: getEvents(this.events, dayStart, dayEnd),\n          });\n        }\n      }\n      weekRows.push({ row });\n    }\n    return { allDayRow, weekRows, period };\n  }\n}\nfunction getHours(day: any): any {\n  throw new Error('Function not implemented.');\n}\n","<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th *ngFor=\"let day of weekView.allDayRow\">\n        {{ day.day }} {{ day.dayNumber }}/{{ day.month }}\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class=\"long-event-row\">\n      <th></th>\n      <td \n        *ngFor=\"let day of weekView.allDayRow; let dayIndex = index\"\n        [ngClass]=\"{'today': day.isToday}\"\n        (click)=\"onDayClick(day)\"\n        (mousedown)=\"onMouseDown($event, day)\"\n        (mouseup)=\"onMouseUp($event, day)\" \n        (mouseenter)=\"onMouseMove($event)\"\n        (dragenter)=\"onDragEnter($event, day)\"\n        (dragover)=\"onDragOver($event)\"\n        (dragleave)=\"onDragLeave($event)\"\n      >\n        <div class=\"events-wrapper\">\n          <ng-container *ngFor=\"let event of day.events; let i = index\">\n            <ng-container *ngIf=\"event.order > i + 1 && i === 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1); let index = index\"\n                [ngStyle]=\"{ order: index + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <ng-container *ngIf=\"event.order > i + 1 && i !== 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1 - day.events[i - 1].order); let index = index\"\n                [ngStyle]=\"{ order: event.order - day.events[i - 1].order + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <div \n              draggable=\"true\"\n              class=\"event bg-{{event.color.background}}\"\n              [ngClass]=\"{'event-long': !event.eventStart, 'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ color: event.color.foreground, order: event.order }\"\n              *ngIf=\"event.allDay || event.longEvent\"\n              id=\"{{i === 0 ? event.id : ''}}\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                  - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >    \n              {{ event.eventStart || dayIndex === 0 ? event.summary : '&nbsp;' }}\n            </div>\n          </ng-container>\n          <ng-container *ngFor=\"let event of day.events\">\n            <div\n              draggable=\"true\" \n              class=\"event event-short\"\n              *ngIf=\"!event.allDay && !event.longEvent\"\n              [ngClass]=\"{'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ order: event.order }\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                  - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >\n              <i class=\"fas fa-circle pe-1 event-circle text-{{ event.color.background}}\"></i>\n              {{ event.summary }}\n            </div>\n          </ng-container>\n        </div>\n      </td>\n    </tr>\n     \n    <tr #hourEl *ngFor=\"let row of weekView.weekRows; let i = index\">\n      <th class=\"hour-field\" *ngIf=\"twelveHours\">\n        {{ i === 0 ? '12' : i < 12 ? i : i - 12 === 0 ? '12' : i - 12 }}:00 {{ i < 12 ? 'am' : 'pm'}}\n      </th>\n      <th class=\"hour-field\" *ngIf=\"!twelveHours\">\n        {{ i }}:00 \n      </th>\n      <td *ngFor=\"let date of row.row\"\n        (click)=\"onDayClick(date)\"\n        (mousedown)=\"onMouseDown($event, date)\"\n        (mouseup)=\"onMouseUp($event, date)\" \n        (mouseenter)=\"onMouseMove($event)\"\n        (dragenter)=\"onDragEnter($event, date)\"\n        (dragover)=\"onDragOver($event)\"\n        (dragleave)=\"onDragLeave($event)\"\n      >\n        <div\n          draggable=\"true\"\n          class=\"event event-short\"\n          *ngFor=\"let event of date.events\"\n          [ngClass]=\"{'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n          html=\"true\"\n          mdbTooltip=\"\n            <h6><strong>{{event.summary}}</strong></h6>\n            <p><small><em>{{event.description}}</em></small></p>\n            <p class='me-0'><small>\n              <i class='fas fa-calendar-alt pe-1'></i>\n              {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n              - \n              {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n            </small></p>\"\n          [offset]=15\n          (click)=\"onEventClick(event); $event.stopPropagation()\"\n          (dragstart)=\"onEventDragStart(event)\"\n          (dragend)=\"onHoursEventDragEnd(event)\"\n          (mouseenter)=\"onMouseEnter(event)\"\n          (mouseleave)=\"onMouseLeave()\"\n        >\n          <i class=\"fas fa-circle event-circle pe-1 text-{{ event.color.background }}\"></i>\n          {{event.summary}}\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>","import { AfterContentInit, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MdbCalendarEvent } from './calendar.event.interface';\nimport {\n  addDays,\n  convertDateTo12h,\n  convertTimeTo12h,\n  getDate,\n  getDayNumber,\n  getEvents,\n  getMonth,\n  getYear,\n} from './calendar.utils';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mdb-list-view-calendar',\n  templateUrl: './calendar-list-view.component.html',\n  styles: [],\n})\nexport class MdbCalendarListViewComponent implements AfterContentInit {\n  @Input() readonly: boolean;\n  @Input() options: any;\n  @Input() mondayFirst: boolean;\n  @Input() twelveHours: boolean;\n  @Input()\n  get activeDate(): Date {\n    return this._activeDate;\n  }\n  set activeDate(date: Date) {\n    this._activeDate = date;\n    this.listView = this.createListView();\n  }\n  private _activeDate: Date;\n  @Input()\n  get events() {\n    return this._events;\n  }\n  set events(events: MdbCalendarEvent[]) {\n    this._events = events;\n    this.listView = this.createListView();\n  }\n  private _events: MdbCalendarEvent[];\n\n  @Output() period: EventEmitter<any> = new EventEmitter();\n  @Output() eventClicked: EventEmitter<MdbCalendarEvent> = new EventEmitter();\n\n  listView: any;\n\n  constructor() {}\n\n  ngAfterContentInit(): void {\n    this.listView = this.createListView();\n  }\n\n  onEventClick(event: MdbCalendarEvent): void {\n    if (this.readonly) {\n      return;\n    }\n\n    this.eventClicked.emit(event);\n  }\n\n  convertDateTo12hFormat(date: string): string {\n    return convertDateTo12h(date);\n  }\n\n  convertTimeTo12hFormat(date: string): string {\n    return convertTimeTo12h(date);\n  }\n\n  createListView(): any {\n    const sundayIndex = this.mondayFirst ? 1 : 0;\n    const firstDay = addDays(this.activeDate, -getDayNumber(this.activeDate) + sundayIndex);\n    const lastDay = addDays(firstDay, 5);\n    const period = {\n      start: `${getDate(firstDay)} ${this.options.monthsShort[getMonth(firstDay)]}, ${getYear(\n        firstDay\n      )}`,\n      end: `${getDate(lastDay)} ${this.options.monthsShort[getMonth(lastDay)]}, ${getYear(\n        lastDay\n      )}`,\n    };\n\n    const eventsInPeriod = getEvents(this.events, firstDay, lastDay);\n    this.period.emit(period);\n    return { eventsInPeriod, period };\n  }\n}\n","<table class=\"list\">\n  <thead>\n    <tr></tr>\n  </thead>\n  <tbody>\n    <tr *ngIf=\"!listView.eventsInPeriod.length\">\n      <th>{{ options.noEventsCaption}}</th>\n    </tr>\n    <ng-container *ngFor=\"let event of listView.eventsInPeriod\">\n      <tr>\n        <th [ngSwitch]=\"true\">\n          <ng-container *ngSwitchCase=\"event.allDay && event.oneDay\">\n            {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string }}\n          </ng-container>\n          <ng-container *ngSwitchCase=\"!event.allDay && !event.oneDay && event.startData.string !== event.endData.string\">\n            {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string }} \n            - \n            {{ twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }} \n          </ng-container>\n          <ng-container *ngSwitchCase=\"event.allDay && event.longEvent\">\n            {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string }}\n            - \n            {{ twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            {{ event.startData.day }}/{{ event.startData.month }}/{{ event.startData.year }}\n            <br>\n            {{ twelveHours ? convertTimeTo12hFormat(event.startData.time) : event.startData.time }} \n            - \n            {{ twelveHours ? convertTimeTo12hFormat(event.endData.time) : event.endData.time}} \n          </ng-container>\n        </th>\n      </tr>\n      <tr>\n        <td (click)=\"onEventClick(event)\">\n          <i class=\"pe-2 fas fa-circle text-{{ event.color.background}}\"></i>\n          <strong>{{ event.summary }}</strong>\n          <p class=\"mb-0\" *ngIf=\"event.description\">\n            <small>\n              {{ event.description }}\n            </small>\n          </p>\n        </td>\n      </tr>\n    </ng-container>\n  </tbody>\n</table>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MdbModalRef, MdbModalService } from 'mdb-angular-ui-kit/modal';\nimport { MdbCalendarEvent } from './calendar.event.interface';\nimport { addDays, addMonths } from './calendar.utils';\nimport { MdbCalendarEventModalComponent } from './calendar-event-modal.component';\nimport { take } from 'rxjs/operators';\nimport { MdbCalendarOptions } from './calendar.options.interface';\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mdb-calendar',\n  templateUrl: './calendar.component.html',\n  styles: [],\n})\nexport class MdbCalendarComponent implements OnInit {\n  defaultOptions: MdbCalendarOptions = {\n    weekdays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n    monthsShort: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ],\n    todayCaption: 'today',\n    monthCaption: 'month',\n    weekCaption: 'week',\n    listCaption: 'list',\n    allDayCaption: 'All day event',\n    noEventsCaption: 'No events\t',\n    summaryCaption: 'Summary',\n    descriptionCaption: 'Description',\n    startCaption: 'Start',\n    endCaption: 'End',\n    addCaption: 'Add',\n    deleteCaption: 'Remove',\n    editCaption: 'Edit',\n    closeCaption: 'Close',\n    addEventModalCaption: 'Add an event',\n    editEventModalCaption: 'Edit an event',\n  };\n\n  @Input() mondayFirst = false;\n  @Input()\n  get defaultView(): string {\n    return this._defaultView;\n  }\n  set defaultView(view: string) {\n    this._defaultView = view;\n  }\n  private _defaultView = 'month';\n\n  @Input() twelveHours = false;\n  @Input() defaultDate = new Date();\n  @Input() readonly = false;\n  @Input() options: any;\n  @Input() events: MdbCalendarEvent[];\n\n  @Output() prev: EventEmitter<any> = new EventEmitter();\n  @Output() next: EventEmitter<any> = new EventEmitter();\n  @Output() today: EventEmitter<any> = new EventEmitter();\n  @Output() viewChanged: EventEmitter<string> = new EventEmitter();\n  @Output() eventAdded: EventEmitter<MdbCalendarEvent> = new EventEmitter();\n  @Output() eventEdited: EventEmitter<MdbCalendarEvent> = new EventEmitter();\n  @Output() eventDeleted: EventEmitter<MdbCalendarEvent> = new EventEmitter();\n\n  modalRef: MdbModalRef<MdbCalendarEventModalComponent>;\n\n  view: string;\n  activeDate = new Date();\n\n  constructor(private modalService: MdbModalService) {}\n\n  ngOnInit(): void {\n    this.options = this.options\n      ? Object.assign(this.defaultOptions, this.options)\n      : this.defaultOptions;\n\n    this.activeDate = this.defaultDate;\n    this.view = this.defaultView;\n  }\n\n  changeView(view: string): void {\n    this.view = view;\n    this.viewChanged.emit(view);\n  }\n\n  nextPeriod(): void {\n    switch (this.view) {\n      case 'month':\n        this._nextMonth();\n        break;\n      default:\n        this._nextWeek();\n        break;\n    }\n    this.next.emit();\n  }\n\n  prevPeriod(): void {\n    switch (this.view) {\n      case 'month':\n        this._previousMonth();\n        break;\n      default:\n        this._previousWeek();\n        break;\n    }\n    this.prev.emit();\n  }\n\n  todayPeriod(): void {\n    this.activeDate = new Date();\n    this.today.emit();\n  }\n\n  addEvent(newEvent: MdbCalendarEvent): void {\n    const config = {\n      data: {\n        options: this.options,\n        twelveHours: this.twelveHours,\n        event: newEvent,\n      },\n    };\n\n    this.modalRef = this.modalService.open(MdbCalendarEventModalComponent, config);\n    this.modalRef.onClose.pipe(take(1)).subscribe((event: MdbCalendarEvent) => {\n      if (!event) {\n        return;\n      }\n      this.events = [...this.events, event];\n      this.eventAdded.emit(event);\n    });\n  }\n\n  openEditModal(event: MdbCalendarEvent): void {\n    const config = {\n      data: {\n        options: this.options,\n        mode: 'edit',\n        twelveHours: this.twelveHours,\n        event: event,\n      },\n    };\n\n    this.modalRef = this.modalService.open(MdbCalendarEventModalComponent, config);\n    this.modalRef.onClose.pipe(take(1)).subscribe((newEvent: MdbCalendarEvent | string) => {\n      if (newEvent == 'remove') {\n        this.removeEvent(event);\n      } else if (newEvent) {\n        const eventIndex = this.events.findIndex((el) => el.id === event.id);\n        this.events[eventIndex] = newEvent as MdbCalendarEvent;\n        this.events = [...this.events];\n        this.eventEdited.emit(newEvent as MdbCalendarEvent);\n      }\n    });\n  }\n\n  editEvent(event): void {\n    const eventIndex = this.events.findIndex((el) => el.id === event.id);\n    this.events[eventIndex] = event;\n    this.events = [...this.events];\n  }\n\n  removeEvent(event): void {\n    const eventIndex = this.events.findIndex((el) => el.id === event.id);\n    this.eventDeleted.emit(this.events[eventIndex]);\n    this.events.splice(eventIndex, 1);\n    this.events = [...this.events];\n  }\n\n  removeEvents(): void {\n    this.events = [];\n    this.events = [...this.events];\n  }\n\n  _nextMonth(): void {\n    this.activeDate = addMonths(this.activeDate, 1);\n  }\n\n  _previousMonth(): void {\n    this.activeDate = addMonths(this.activeDate, -1);\n  }\n\n  _nextWeek(): void {\n    this.activeDate = addDays(this.activeDate, 7);\n  }\n\n  _previousWeek(): void {\n    this.activeDate = addDays(this.activeDate, -7);\n  }\n}\n","<div class=\"calendar\">\n  <mdb-tools-calendar\n    [options]=\"options\"\n    [activeDate]=\"activeDate\"\n    [activeView]=\"view\"\n    [mondayFirst]=\"mondayFirst\"\n    (viewChange)=\"changeView($event)\"\n    (previousBtnClick)=\"prevPeriod()\"\n    (nextBtnClick)=\"nextPeriod()\"\n    (todayBtnClick)=\"todayPeriod()\"\n  ></mdb-tools-calendar>\n  <mdb-month-view-calendar\n    [activeDate]=\"activeDate\"\n    [events]=\"events\"\n    [options]=\"options\"\n    [readonly]=\"readonly\"\n    [mondayFirst]=\"mondayFirst\"\n    [twelveHours]=\"twelveHours\"\n    *ngIf=\"view === 'month'\"\n    (dayClicked)=\"addEvent($event)\"\n    (eventClicked)=\"openEditModal($event)\"\n    (eventDragged)=\"editEvent($event)\"\n  >\n  </mdb-month-view-calendar>\n  <mdb-week-view-calendar\n    [options]=\"options\"\n    [activeDate]=\"activeDate\"\n    [events]=\"events\"\n    [readonly]=\"readonly\"\n    [mondayFirst]=\"mondayFirst\"\n    [twelveHours]=\"twelveHours\"\n    *ngIf=\"view === 'week'\"\n    (dayClicked)=\"addEvent($event)\"\n    (eventClicked)=\"openEditModal($event)\"\n    (eventDragged)=\"editEvent($event)\"\n  >\n  </mdb-week-view-calendar>\n  <mdb-list-view-calendar \n    [options]=\"options\"\n    [activeDate]=\"activeDate\"\n    [events]=\"events\"\n    [readonly]=\"readonly\"\n    [mondayFirst]=\"mondayFirst\"\n    [twelveHours]=\"twelveHours\"\n    *ngIf=\"view === 'list'\"\n    (eventClicked)=\"openEditModal($event)\"\n  >\n  </mdb-list-view-calendar>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MdbCalendarToolsComponent } from './calendar-tools.component';\nimport { MdbCalendarComponent } from './calendar.component';\nimport { MdbCalendarMonthViewComponent } from './calendar-month-view.component';\nimport { MdbCalendarWeekViewComponent } from './calendar-week-view.component';\nimport { MdbCalendarListViewComponent } from './calendar-list-view.component';\nimport { MdbCalendarEventModalComponent } from './calendar-event-modal.component';\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\nimport { MdbDatepickerModule } from 'mdb-angular-ui-kit/datepicker';\nimport { MdbTimepickerModule } from 'mdb-angular-ui-kit/timepicker';\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\nimport { MdbValidationModule } from 'mdb-angular-ui-kit/validation';\n\n@NgModule({\n  declarations: [\n    MdbCalendarComponent,\n    MdbCalendarToolsComponent,\n    MdbCalendarMonthViewComponent,\n    MdbCalendarWeekViewComponent,\n    MdbCalendarListViewComponent,\n    MdbCalendarEventModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    MdbFormsModule,\n    MdbDatepickerModule,\n    MdbTimepickerModule,\n    MdbTooltipModule,\n    ReactiveFormsModule,\n    MdbModalModule,\n    MdbValidationModule,\n  ],\n  exports: [\n    MdbCalendarComponent,\n    MdbCalendarToolsComponent,\n    MdbCalendarMonthViewComponent,\n    MdbCalendarWeekViewComponent,\n    MdbCalendarListViewComponent,\n    MdbCalendarEventModalComponent,\n  ],\n})\nexport class MdbCalendarModule {}\n","/*\n * Public API Surface of mdb-angular-calendar\n */\n\nexport * from './lib/calendar.component';\nexport * from './lib/calendar.module';\nexport { startOfDay, endOfDay } from './lib/calendar.utils';\nexport { MdbCalendarEvent } from './lib/calendar.event.interface';\nexport { MdbCalendarOptions } from './lib/calendar.options.interface';\nexport { MdbCalendarToolsComponent } from './lib/calendar-tools.component';\nexport { MdbCalendarMonthViewComponent } from './lib/calendar-month-view.component';\nexport { MdbCalendarWeekViewComponent } from './lib/calendar-week-view.component';\nexport { MdbCalendarListViewComponent } from './lib/calendar-list-view.component';\nexport { MdbCalendarEventModalComponent } from './lib/calendar-event-modal.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}