import { Component } from '@angular/core';
import { FormGroup, FormControl, Validators } from '@angular/forms';
import { convertTimeTo12h, generateEvent, getDate, getMonth, getYear } from './calendar.utils';
import * as i0 from "@angular/core";
import * as i1 from "mdb-angular-ui-kit/modal";
import * as i2 from "mdb-angular-ui-kit/forms";
import * as i3 from "mdb-angular-ui-kit/datepicker";
import * as i4 from "mdb-angular-ui-kit/timepicker";
import * as i5 from "@angular/forms";
import * as i6 from "mdb-angular-ui-kit/validation";
import * as i7 from "@angular/common";
export class MdbCalendarEventModalComponent {
    constructor(modalRef) {
        this.modalRef = modalRef;
        this.description = '';
        this.editable = true;
        this.color = 'primary';
        this.twelveHours = false;
    }
    ngOnInit() {
        const startData = this.event.startData;
        const endData = this.event.endData;
        let startTime = startData.time;
        let endTime = endData.time;
        if (this.twelveHours) {
            startTime = convertTimeTo12h(startTime);
            endTime = convertTimeTo12h(endTime);
        }
        this.eventForm = new FormGroup({
            summary: new FormControl({ value: this.event.summary, disabled: !this.editable }, { validators: Validators.required, updateOn: 'submit' }),
            description: new FormControl({ value: this.event.description, disabled: !this.editable }),
            allDay: new FormControl({ value: this.event.allDay, disabled: !this.editable }),
            startDate: new FormControl({
                value: new Date(`${startData.year}/${startData.month}/${startData.day}`),
                disabled: !this.editable,
            }, { validators: Validators.required, updateOn: 'submit' }),
            endDate: new FormControl({
                value: new Date(`${endData.year}/${endData.month}/${endData.day}`),
                disabled: !this.editable,
            }, { validators: Validators.required, updateOn: 'submit' }),
            startTime: new FormControl({ value: startTime, disabled: !this.editable }),
            endTime: new FormControl({ value: endTime, disabled: !this.editable }),
            color: new FormControl({ value: this.event.color.background, disabled: !this.editable }),
        });
    }
    onRemoveClick() {
        this.modalRef.close('remove');
    }
    onSubmit() {
        this.eventForm.markAllAsTouched();
        if (this.mode === 'add' && this.eventForm.status === 'VALID') {
            this.modalRef.close(this.parseEventData());
        }
        else if (this.eventForm.status === 'VALID') {
            this.modalRef.close(this.parseEventData());
        }
    }
    parseEventData() {
        const newEvent = this.eventForm.value;
        const summary = newEvent.summary;
        const description = newEvent.description;
        const allDay = newEvent.allDay;
        const startDate = newEvent.startDate;
        const endDate = newEvent.endDate;
        const startTime = newEvent.startTime;
        const endTime = newEvent.endTime;
        const eventColor = newEvent.color;
        let startDateTime = `${getYear(startDate)}/${getMonth(startDate) + 1}/${getDate(startDate)} ${startTime}`;
        let endDateTime = `${getYear(endDate)}/${getMonth(endDate) + 1}/${getDate(endDate)} ${endTime}`;
        const event = generateEvent(new Date(startDateTime), new Date(endDateTime));
        return {
            ...event,
            summary,
            description,
            allDay,
            color: {
                background: eventColor,
            },
        };
    }
}
MdbCalendarEventModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MdbCalendarEventModalComponent, deps: [{ token: i1.MdbModalRef }], target: i0.ɵɵFactoryTarget.Component });
MdbCalendarEventModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.3", type: MdbCalendarEventModalComponent, selector: "mdb-calendar-event-modal", ngImport: i0, template: "<form [formGroup]=\"eventForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\" id=\"{{event.id}}-modal\">{{ mode === 'edit' ? options.editEventModalCaption : options.addEventModalCaption }}</h5>\n    <button\n      type=\"button\"\n      class=\"btn-close\"\n      aria-label=\"Close\"\n      (click)=\"modalRef.close()\"\n    ></button>\n  </div>\n  <div class=\"modal-body\">\n    <mdb-form-control class=\"my-3\">\n      <input \n        mdbInput\n        mdbValidate\n        validateSuccess=\"false\"\n        required\n        type=\"text\"\n        id=\"eventModalSummary\"\n        formControlName=\"summary\"\n        class=\"form-control\"\n      />\n      <label mdbLabel class=\"form-label\" for=\"eventModalSummary\">{{ options.summaryCaption }}</label>\n    </mdb-form-control>\n    <mdb-form-control  class=\"my-3\">\n      <textarea mdbInput class=\"form-control\" id=\"eventModalDescription\" rows=\"2\" formControlName=\"description\"></textarea>\n      <label mdbLabel class=\"form-label\" for=\"eventModalDescription\">{{ options.descriptionCaption }}</label>\n    </mdb-form-control>\n    <div class=\"form-check mx-2\">\n      <input\n        mdbCheckbox\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        value=\"\"\n        id=\"eventModalAllDayCheckbox\"\n        formControlName=\"allDay\"\n      />\n      <label class=\"form-check-label\" for=\"eventModalAllDayCheckbox\">\n        {{ options.allDayCaption }}\n      </label>\n    </div>\n    <div class=\"row my-3\">\n      <div [ngClass]=\"eventForm.value.allDay ? 'col-12' : 'col-6'\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            mdbValidate\n            validateSuccess=\"false\"\n            required\n            formControlName=\"startDate\"\n            [mdbDatepicker]=\"datepickerStartDate\"\n            type=\"text\"\n            class=\"form-control\"\n            id=\"eventModalStartDate\"\n          />\n          <label mdbLabel for=\"eventModalStartDate\" class=\"form-label\">{{ options.startCaption }}</label>\n          <mdb-datepicker-toggle [mdbDatepicker]=\"datepickerStartDate\"></mdb-datepicker-toggle>\n          <mdb-datepicker #datepickerStartDate></mdb-datepicker>\n        </mdb-form-control>\n      </div>\n      <div *ngIf=\"!eventForm.value.allDay\" class=\"col-6\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            formControlName=\"startTime\"\n            type=\"text\"\n            id=\"eventModalStartTime\"\n            class=\"form-control\"\n            [mdbTimepicker]=\"timepickerStartTime\"\n            required\n          />\n          <label mdbLabel class=\"form-label\" for=\"eventModalStartTime\">{{ options.startCaption }}</label>\n          <mdb-timepicker-toggle [mdbTimepickerToggle]=\"timepickerStartTime\"></mdb-timepicker-toggle>\n          <mdb-timepicker #timepickerStartTime [format24]=\"!twelveHours\"></mdb-timepicker>\n        </mdb-form-control>\n      </div>\n    </div>\n    <div class=\"row my-3\">\n      <div [ngClass]=\"eventForm.value.allDay ? 'col-12' : 'col-6'\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            mdbValidate\n            validateSuccess=\"false\"\n            required\n            [mdbDatepicker]=\"datepickerEndDate\"\n            type=\"text\"\n            class=\"form-control\"\n            id=\"eventModalEndDate\"\n            formControlName=\"endDate\"\n          />\n          <label mdbLabel for=\"eventModalEndDate\" class=\"form-label\">{{ options.endCaption }}</label>\n          <mdb-datepicker-toggle [mdbDatepicker]=\"datepickerEndDate\"></mdb-datepicker-toggle>\n          <mdb-datepicker #datepickerEndDate></mdb-datepicker>\n        </mdb-form-control>\n      </div>\n      <div *ngIf=\"!eventForm.value.allDay\" class=\"col-6\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            formControlName=\"endTime\"\n            type=\"text\"\n            id=\"eventModalEndTime\"\n            class=\"form-control\"\n            [mdbTimepicker]=\"timepickerEndTime\"\n            required\n          />\n          <label mdbLabel class=\"form-label\" for=\"eventModalEndTime\">{{ options.endCaption }}</label>\n          <mdb-timepicker-toggle [mdbTimepickerToggle]=\"timepickerEndTime\"></mdb-timepicker-toggle>\n          <mdb-timepicker #timepickerEndTime [format24]=\"!twelveHours\"></mdb-timepicker>\n        </mdb-form-control>\n      </div>\n    </div>\n    <div class=\"text-center mt-3\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundPrimary\"\n          [checked]=\"true\"\n          value=\"primary\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundPrimary\">\n          <i class=\"fas fa-circle text-primary\"></i>\n        </label>\n      </div>\n      \n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundSecondary\"\n          value=\"secondary\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundSecondary\">\n          <i class=\"fas fa-circle text-secondary\"></i>\n        </label>\n      </div>\n      \n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundSuccess\"\n          value=\"success\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundSuccess\">\n          <i class=\"fas fa-circle text-success\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundDanger\"\n          value=\"danger\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundDanger\">\n          <i class=\"fas fa-circle text-danger\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundWarning\"\n          value=\"warning\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundWarning\">\n          <i class=\"fas fa-circle text-warning\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundInfo\"\n          value=\"info\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundInfo\">\n          <i class=\"fas fa-circle text-info\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundDark\"\n          value=\"dark\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundDark\">\n          <i class=\"fas fa-circle text-dark\"></i>\n        </label>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <ng-container *ngIf=\"mode !== 'edit'\">\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"modalRef.close()\">\n        {{ options.closeCaption }}\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary\" >{{ options.addCaption }}</button>\n    </ng-container>\n    <ng-container *ngIf=\"mode === 'edit'\">\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"onRemoveClick()\">\n        {{ options.deleteCaption }}\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary\">{{ options.editCaption }}</button>\n    </ng-container>\n  </div>\n</form>\n", components: [{ type: i2.MdbFormControlComponent, selector: "mdb-form-control" }, { type: i3.MdbDatepickerToggleComponent, selector: "mdb-datepicker-toggle", inputs: ["disabled", "icon", "mdbDatepicker"] }, { type: i3.MdbDatepickerComponent, selector: "mdb-datepicker", inputs: ["disabled", "inline", "format", "filter", "openOnInputClick", "options", "startDate", "startDay", "startView", "minDate", "maxDate"], outputs: ["dateChanged", "viewChanged", "clearButtonClicked", "cancelButtonClicked", "confirmButtonClicked", "opened", "closed"], exportAs: ["mdbDatepicker"] }, { type: i4.MdbTimepickerToggleComponent, selector: "mdb-timepicker-toggle", inputs: ["mdbTimepickerToggle", "icon", "disabled"] }, { type: i4.MdbTimepickerComponent, selector: "mdb-timepicker", inputs: ["autoClose", "format12", "appendValidationInfo", "bodyID", "closeModalOnMinutesClick", "disabled", "footerID", "format24", "headID", "increment", "inline", "maxTime", "minTime", "modalID", "overflowHidden", "pickerID", "switchHoursToMinutesOnClick", "options"], outputs: ["timeChange", "closed", "opened"], exportAs: ["mdbTimePicker"] }], directives: [{ type: i5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i2.MdbInputDirective, selector: "[mdbInput]", inputs: ["disabled", "readonly", "value"], exportAs: ["mdbInput"] }, { type: i6.MdbValidateDirective, selector: "[mdbValidate]", inputs: ["mdbValidate", "validate", "validateSuccess", "validateError"] }, { type: i5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { type: i2.MdbLabelDirective, selector: "[mdbLabel]", exportAs: ["mdbLabel"] }, { type: i5.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { type: i7.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.MdbDatepickerInputDirective, selector: "input[mdbDatepicker]", inputs: ["disabled", "mdbDatepicker"], exportAs: ["mdbDatepickerInput"] }, { type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.MdbTimepickerDirective, selector: "[mdbTimepicker]", inputs: ["mdbTimepicker", "value"] }, { type: i5.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MdbCalendarEventModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mdb-calendar-event-modal', template: "<form [formGroup]=\"eventForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\" id=\"{{event.id}}-modal\">{{ mode === 'edit' ? options.editEventModalCaption : options.addEventModalCaption }}</h5>\n    <button\n      type=\"button\"\n      class=\"btn-close\"\n      aria-label=\"Close\"\n      (click)=\"modalRef.close()\"\n    ></button>\n  </div>\n  <div class=\"modal-body\">\n    <mdb-form-control class=\"my-3\">\n      <input \n        mdbInput\n        mdbValidate\n        validateSuccess=\"false\"\n        required\n        type=\"text\"\n        id=\"eventModalSummary\"\n        formControlName=\"summary\"\n        class=\"form-control\"\n      />\n      <label mdbLabel class=\"form-label\" for=\"eventModalSummary\">{{ options.summaryCaption }}</label>\n    </mdb-form-control>\n    <mdb-form-control  class=\"my-3\">\n      <textarea mdbInput class=\"form-control\" id=\"eventModalDescription\" rows=\"2\" formControlName=\"description\"></textarea>\n      <label mdbLabel class=\"form-label\" for=\"eventModalDescription\">{{ options.descriptionCaption }}</label>\n    </mdb-form-control>\n    <div class=\"form-check mx-2\">\n      <input\n        mdbCheckbox\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        value=\"\"\n        id=\"eventModalAllDayCheckbox\"\n        formControlName=\"allDay\"\n      />\n      <label class=\"form-check-label\" for=\"eventModalAllDayCheckbox\">\n        {{ options.allDayCaption }}\n      </label>\n    </div>\n    <div class=\"row my-3\">\n      <div [ngClass]=\"eventForm.value.allDay ? 'col-12' : 'col-6'\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            mdbValidate\n            validateSuccess=\"false\"\n            required\n            formControlName=\"startDate\"\n            [mdbDatepicker]=\"datepickerStartDate\"\n            type=\"text\"\n            class=\"form-control\"\n            id=\"eventModalStartDate\"\n          />\n          <label mdbLabel for=\"eventModalStartDate\" class=\"form-label\">{{ options.startCaption }}</label>\n          <mdb-datepicker-toggle [mdbDatepicker]=\"datepickerStartDate\"></mdb-datepicker-toggle>\n          <mdb-datepicker #datepickerStartDate></mdb-datepicker>\n        </mdb-form-control>\n      </div>\n      <div *ngIf=\"!eventForm.value.allDay\" class=\"col-6\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            formControlName=\"startTime\"\n            type=\"text\"\n            id=\"eventModalStartTime\"\n            class=\"form-control\"\n            [mdbTimepicker]=\"timepickerStartTime\"\n            required\n          />\n          <label mdbLabel class=\"form-label\" for=\"eventModalStartTime\">{{ options.startCaption }}</label>\n          <mdb-timepicker-toggle [mdbTimepickerToggle]=\"timepickerStartTime\"></mdb-timepicker-toggle>\n          <mdb-timepicker #timepickerStartTime [format24]=\"!twelveHours\"></mdb-timepicker>\n        </mdb-form-control>\n      </div>\n    </div>\n    <div class=\"row my-3\">\n      <div [ngClass]=\"eventForm.value.allDay ? 'col-12' : 'col-6'\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            mdbValidate\n            validateSuccess=\"false\"\n            required\n            [mdbDatepicker]=\"datepickerEndDate\"\n            type=\"text\"\n            class=\"form-control\"\n            id=\"eventModalEndDate\"\n            formControlName=\"endDate\"\n          />\n          <label mdbLabel for=\"eventModalEndDate\" class=\"form-label\">{{ options.endCaption }}</label>\n          <mdb-datepicker-toggle [mdbDatepicker]=\"datepickerEndDate\"></mdb-datepicker-toggle>\n          <mdb-datepicker #datepickerEndDate></mdb-datepicker>\n        </mdb-form-control>\n      </div>\n      <div *ngIf=\"!eventForm.value.allDay\" class=\"col-6\">\n        <mdb-form-control>\n          <input\n            mdbInput\n            formControlName=\"endTime\"\n            type=\"text\"\n            id=\"eventModalEndTime\"\n            class=\"form-control\"\n            [mdbTimepicker]=\"timepickerEndTime\"\n            required\n          />\n          <label mdbLabel class=\"form-label\" for=\"eventModalEndTime\">{{ options.endCaption }}</label>\n          <mdb-timepicker-toggle [mdbTimepickerToggle]=\"timepickerEndTime\"></mdb-timepicker-toggle>\n          <mdb-timepicker #timepickerEndTime [format24]=\"!twelveHours\"></mdb-timepicker>\n        </mdb-form-control>\n      </div>\n    </div>\n    <div class=\"text-center mt-3\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundPrimary\"\n          [checked]=\"true\"\n          value=\"primary\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundPrimary\">\n          <i class=\"fas fa-circle text-primary\"></i>\n        </label>\n      </div>\n      \n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundSecondary\"\n          value=\"secondary\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundSecondary\">\n          <i class=\"fas fa-circle text-secondary\"></i>\n        </label>\n      </div>\n      \n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundSuccess\"\n          value=\"success\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundSuccess\">\n          <i class=\"fas fa-circle text-success\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundDanger\"\n          value=\"danger\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundDanger\">\n          <i class=\"fas fa-circle text-danger\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundWarning\"\n          value=\"warning\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundWarning\">\n          <i class=\"fas fa-circle text-warning\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundInfo\"\n          value=\"info\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundInfo\">\n          <i class=\"fas fa-circle text-info\"></i>\n        </label>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <input\n          mdbRadio\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"eventModalRadioBackgroundDark\"\n          value=\"dark\"\n          formControlName=\"color\"\n        />\n        <label class=\"form-check-label\" for=\"eventModalRadioBackgroundDark\">\n          <i class=\"fas fa-circle text-dark\"></i>\n        </label>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <ng-container *ngIf=\"mode !== 'edit'\">\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"modalRef.close()\">\n        {{ options.closeCaption }}\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary\" >{{ options.addCaption }}</button>\n    </ng-container>\n    <ng-container *ngIf=\"mode === 'edit'\">\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"onRemoveClick()\">\n        {{ options.deleteCaption }}\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary\">{{ options.editCaption }}</button>\n    </ng-container>\n  </div>\n</form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.MdbModalRef }]; } });
//# sourceMappingURL=data:application/json;base64,