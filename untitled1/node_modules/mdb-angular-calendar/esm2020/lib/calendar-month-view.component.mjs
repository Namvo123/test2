import { EventEmitter, Component, Input, Output, ViewChildren, } from '@angular/core';
import { getFirstDayOfWeek, getDaysInMonth, getMonth, addMonths, createDate, isSameDate, getToday, getDate, getYear, endOfDay, startOfDay, generateEvent, getEvents, differenceInDays, addDays, convertDateTo12h, } from './calendar.utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "mdb-angular-ui-kit/tooltip";
export class MdbCalendarMonthViewComponent {
    constructor(_renderer) {
        this._renderer = _renderer;
        this.dayClicked = new EventEmitter();
        this.eventClicked = new EventEmitter();
        this.eventDragged = new EventEmitter();
        this.dates = [];
        this.isDragging = false;
    }
    get activeDate() {
        return this._activeDate;
    }
    set activeDate(date) {
        this._activeDate = date;
        this.dates = this._generateDayView();
    }
    get events() {
        return this._events;
    }
    set events(events) {
        this._events = events;
        this.dates = this._generateDayView();
    }
    ngOnInit() {
        this.weekdays = this._getWeekdays();
        this.dates = this._generateDayView();
    }
    ngAfterViewInit() {
        this.daysEl = this.days.toArray().map((el) => el.nativeElement);
    }
    onEventClick(event) {
        if (this.readonly) {
            return;
        }
        this.eventClicked.emit(event);
    }
    onDayClick(day) {
        if (this.readonly) {
            return;
        }
        const newCalendarEvent = generateEvent(day.date);
        this.dayClicked.emit(newCalendarEvent);
    }
    onMouseDown(event, day) {
        if (this.readonly) {
            return;
        }
        this.isDragging = true;
        this.dragStart = this.daysEl.indexOf(event.target);
        this.selectionStartDay = day.date;
    }
    onMouseUp(event, day) {
        if (this.readonly) {
            return;
        }
        this.isDragging = false;
        this.dragEnd = this.daysEl.indexOf(event.target);
        if (this.dragEnd !== 0) {
            this.selectRange();
        }
        this.clearSelection();
        this.selectionEndDay = day.date;
        if (this.selectionStartDay === this.selectionEndDay) {
            return;
        }
        const newCalendarEvent = generateEvent(this.selectionStartDay, this.selectionEndDay);
        this.dayClicked.emit(newCalendarEvent);
    }
    onMouseMove(event) {
        if (this.readonly) {
            return;
        }
        event.preventDefault();
        if (this.isDragging) {
            this.dragEnd = this.daysEl.indexOf(event.target);
            this.selectRange();
        }
    }
    onEventDragStart(calendarEvent) {
        this.draggedEventId = calendarEvent.id;
        this.clearSelection();
    }
    onEventDragEnd(calendarEvent) {
        this.draggedEventId = '';
        this.hoveredEventId = '';
        const daysDifference = differenceInDays(calendarEvent.startDate, this.dragTargetDay.date);
        const newStartDate = addDays(calendarEvent.startDate, daysDifference);
        const newEndDate = addDays(calendarEvent.endDate, daysDifference);
        const newEvent = {
            ...calendarEvent,
            startDate: newStartDate,
            endDate: newEndDate,
            order: '',
        };
        this.eventDragged.emit(newEvent);
    }
    onDragEnter(event, day) {
        this._renderer.addClass(event.target, 'dragenter');
        this.dragTargetDay = day;
    }
    onDragLeave(event) {
        this._renderer.removeClass(event.target, 'dragenter');
    }
    onDragOver(event) {
        if (event.preventDefault) {
            event.preventDefault();
        }
        return false;
    }
    onMouseEnter(event) {
        this.hoveredEventId = event.id;
    }
    onMouseLeave() {
        this.hoveredEventId = '';
    }
    selectRange() {
        this.clearSelection();
        if (this.dragEnd + 1 < this.dragStart) {
            this.daysEl
                .slice(this.dragEnd, this.dragStart + 1)
                .forEach((cell) => this._renderer.setStyle(cell, 'background-color', '#fafafa'));
        }
        else {
            this.daysEl
                .slice(this.dragStart, this.dragEnd + 1)
                .forEach((cell) => this._renderer.setStyle(cell, 'background-color', '#fafafa'));
        }
    }
    clearSelection() {
        this.daysEl.forEach((cell) => this._renderer.removeStyle(cell, 'background-color'));
    }
    convertDateTo12hFormat(date) {
        return convertDateTo12h(date);
    }
    _generateDayView() {
        const dates = [];
        const month = getMonth(this.activeDate);
        const previousMonth = getMonth(addMonths(this.activeDate, -1));
        const nextMonth = getMonth(addMonths(this.activeDate, 1));
        const year = getYear(this.activeDate);
        const firstDay = getFirstDayOfWeek(year, month, this.mondayFirst);
        const daysInMonth = getDaysInMonth(this.activeDate);
        const daysInPreviousMonth = getDaysInMonth(addMonths(this.activeDate, -1));
        const daysInWeek = 7;
        let dayNumber = 1;
        let isCurrentMonth = false;
        for (let i = 1; i < daysInWeek; i++) {
            const week = [];
            if (i === 1) {
                // First week
                const previousMonthDay = daysInPreviousMonth - firstDay + 1;
                // Previous month
                for (let j = previousMonthDay; j <= daysInPreviousMonth; j++) {
                    const date = createDate(year, previousMonth, j, 0, 0, 0, 0);
                    week.push({
                        date,
                        currentMonth: isCurrentMonth,
                        isToday: isSameDate(date, getToday()),
                        dayNumber: getDate(date),
                        event: getEvents(this.events, startOfDay(date), endOfDay(date), false),
                    });
                }
                isCurrentMonth = true;
                // Current month
                const daysLeft = daysInWeek - week.length;
                for (let j = 0; j < daysLeft; j++) {
                    const date = createDate(year, month, dayNumber, 0, 0, 0, 0);
                    week.push({
                        date,
                        currentMonth: isCurrentMonth,
                        isToday: isSameDate(date, getToday()),
                        dayNumber: getDate(date),
                        event: getEvents(this.events, startOfDay(date), endOfDay(date), false),
                    });
                    dayNumber++;
                }
            }
            else {
                // Rest of the weeks
                for (let j = 1; j < 8; j++) {
                    if (dayNumber > daysInMonth) {
                        // Next month
                        dayNumber = 1;
                        isCurrentMonth = false;
                    }
                    const date = createDate(year, isCurrentMonth ? month : nextMonth, dayNumber, 0, 0, 0, 0);
                    week.push({
                        date,
                        currentMonth: isCurrentMonth,
                        isToday: isSameDate(date, getToday()),
                        dayNumber: getDate(date),
                        event: getEvents(this.events, startOfDay(date), endOfDay(date), false),
                    });
                    dayNumber++;
                }
            }
            dates.push(week);
        }
        return dates;
    }
    _getWeekdays() {
        const startDay = this.mondayFirst ? 1 : 0;
        const weekdays = this.options.weekdays;
        const sortedWeekdays = weekdays.slice(startDay).concat(weekdays.slice(0, startDay));
        return startDay !== 0 ? sortedWeekdays : weekdays;
    }
}
MdbCalendarMonthViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MdbCalendarMonthViewComponent, deps: [{ token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
MdbCalendarMonthViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.3", type: MdbCalendarMonthViewComponent, selector: "mdb-month-view-calendar", inputs: { readonly: "readonly", options: "options", mondayFirst: "mondayFirst", twelveHours: "twelveHours", activeDate: "activeDate", events: "events" }, outputs: { dayClicked: "dayClicked", eventClicked: "eventClicked", eventDragged: "eventDragged" }, viewQueries: [{ propertyName: "days", predicate: ["dayEl"], descendants: true }], ngImport: i0, template: "<table class=\"month\">\n  <thead>\n    <tr>\n      <th *ngFor=\"let weekDay of weekdays\">\n        {{ weekDay }}\n      </th>\n    </tr>\n  </thead>\n  <tbody cdkDropList>\n    <tr *ngFor=\"let date of dates\">\n      <td\n        #dayEl\n        *ngFor=\"let day of date; let dayIndex = index\"\n        [ngClass]=\"{'disabled': !day.currentMonth, 'today': day.isToday}\"\n        (click)=\"onDayClick(day)\"\n        (mousedown)=\"onMouseDown($event, day)\"\n        (mouseup)=\"onMouseUp($event, day)\" \n        (mouseenter)=\"onMouseMove($event)\"\n        (dragenter)=\"onDragEnter($event, day)\"\n        (dragover)=\"onDragOver($event)\"\n        (dragleave)=\"onDragLeave($event)\"\n      >\n        <div class=\"day-field\">{{ day.dayNumber }}</div>\n        <div class=\"events-wrapper\">\n          <ng-container *ngFor=\"let event of day.event; let i = index\">\n            <ng-container *ngIf=\"event.order > i + 1 && i === 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1); let index = index\"\n                [ngStyle]=\"{ order: index + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <ng-container *ngIf=\"event.order > i + 1 && i !== 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1 - day.event[i -1].order); let index = index\"\n                [ngStyle]=\"{ order: event.order - day.event[i - 1].order + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <div \n              draggable=\"true\"\n              *ngIf=\"event.allDay || event.longEvent\" \n              class=\"event bg-{{event.color.background}}\"\n              [ngClass]=\"{'event-long': !event.eventStart, 'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ color: event.color.foreground, order: event.order }\"\n              id=\"{{i === 0 ? event.id : ''}}\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                  - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\n              \"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >\n              {{ event.eventStart || dayIndex === 0 ? event.summary : '&nbsp;' }}\n            </div>\n            <div \n              draggable=\"true\"\n              *ngIf=\"!event.allDay && !event.longEvent\"  \n              class=\"event event-short text-{{event.color.background}}\"\n              [ngClass]=\"{'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ order: event.order }\"\n              id=\"{{i === 0 ? event.id : ''}}\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                   - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\n              \"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >\n              <i class=\"fas fa-circle pe-1 event-circle\"></i>\n              {{ event.summary }}\n            </div>\n          </ng-container>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>", directives: [{ type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i2.MdbTooltipDirective, selector: "[mdbTooltip]", inputs: ["mdbTooltip", "tooltipDisabled", "placement", "html", "animation", "trigger", "delayShow", "delayHide", "offset"], outputs: ["tooltipShow", "tooltipShown", "tooltipHide", "tooltipHidden"], exportAs: ["mdbTooltip"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MdbCalendarMonthViewComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mdb-month-view-calendar', styles: [], template: "<table class=\"month\">\n  <thead>\n    <tr>\n      <th *ngFor=\"let weekDay of weekdays\">\n        {{ weekDay }}\n      </th>\n    </tr>\n  </thead>\n  <tbody cdkDropList>\n    <tr *ngFor=\"let date of dates\">\n      <td\n        #dayEl\n        *ngFor=\"let day of date; let dayIndex = index\"\n        [ngClass]=\"{'disabled': !day.currentMonth, 'today': day.isToday}\"\n        (click)=\"onDayClick(day)\"\n        (mousedown)=\"onMouseDown($event, day)\"\n        (mouseup)=\"onMouseUp($event, day)\" \n        (mouseenter)=\"onMouseMove($event)\"\n        (dragenter)=\"onDragEnter($event, day)\"\n        (dragover)=\"onDragOver($event)\"\n        (dragleave)=\"onDragLeave($event)\"\n      >\n        <div class=\"day-field\">{{ day.dayNumber }}</div>\n        <div class=\"events-wrapper\">\n          <ng-container *ngFor=\"let event of day.event; let i = index\">\n            <ng-container *ngIf=\"event.order > i + 1 && i === 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1); let index = index\"\n                [ngStyle]=\"{ order: index + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <ng-container *ngIf=\"event.order > i + 1 && i !== 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1 - day.event[i -1].order); let index = index\"\n                [ngStyle]=\"{ order: event.order - day.event[i - 1].order + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <div \n              draggable=\"true\"\n              *ngIf=\"event.allDay || event.longEvent\" \n              class=\"event bg-{{event.color.background}}\"\n              [ngClass]=\"{'event-long': !event.eventStart, 'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ color: event.color.foreground, order: event.order }\"\n              id=\"{{i === 0 ? event.id : ''}}\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                  - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\n              \"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >\n              {{ event.eventStart || dayIndex === 0 ? event.summary : '&nbsp;' }}\n            </div>\n            <div \n              draggable=\"true\"\n              *ngIf=\"!event.allDay && !event.longEvent\"  \n              class=\"event event-short text-{{event.color.background}}\"\n              [ngClass]=\"{'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ order: event.order }\"\n              id=\"{{i === 0 ? event.id : ''}}\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                   - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\n              \"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >\n              <i class=\"fas fa-circle pe-1 event-circle\"></i>\n              {{ event.summary }}\n            </div>\n          </ng-container>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>" }]
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }]; }, propDecorators: { days: [{
                type: ViewChildren,
                args: ['dayEl']
            }], readonly: [{
                type: Input
            }], options: [{
                type: Input
            }], mondayFirst: [{
                type: Input
            }], twelveHours: [{
                type: Input
            }], activeDate: [{
                type: Input
            }], events: [{
                type: Input
            }], dayClicked: [{
                type: Output
            }], eventClicked: [{
                type: Output
            }], eventDragged: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,