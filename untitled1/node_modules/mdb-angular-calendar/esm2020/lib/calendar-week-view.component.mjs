import { Component, Input, Output, EventEmitter, ViewChildren, } from '@angular/core';
import { convertDateTo12h, differenceInDays, differenceInHours, generateEvent, getEvents, addDays, addHours, addMinutes, endOfDay, getDate, getDayNumber, getMonth, getToday, getYear, isSameDate, startOfDay, } from './calendar.utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "mdb-angular-ui-kit/tooltip";
export class MdbCalendarWeekViewComponent {
    constructor(_renderer) {
        this._renderer = _renderer;
        this.dayClicked = new EventEmitter();
        this.eventClicked = new EventEmitter();
        this.eventDragged = new EventEmitter();
        this.isDragging = false;
        this.dayCells = [];
        this.columns = [];
    }
    get activeDate() {
        return this._activeDate;
    }
    set activeDate(date) {
        this._activeDate = date;
        this.weekView = this._generateWeekView();
    }
    get events() {
        return this._events;
    }
    set events(events) {
        if (!events) {
            return;
        }
        this._events = events;
        this.weekView = this._generateWeekView();
    }
    ngOnInit() {
        this.weekView = this._generateWeekView();
    }
    onEventClick(event) {
        if (this.readonly) {
            return;
        }
        this.eventClicked.emit(event);
    }
    ngAfterViewInit() {
        this.hoursEl = this.hours.toArray().map((el) => el.nativeElement);
        for (let i = 1; i <= 7; i++) {
            this.hoursEl.forEach((row) => {
                this.columns.push(row.children[i]);
            });
        }
    }
    onDayClick(day) {
        if (this.readonly) {
            return;
        }
        let startDate = addMinutes(new Date(day.date.getTime()), -59);
        let endDate = day.date;
        if (day.date.getHours() === 0) {
            startDate = startOfDay(day.date);
            endDate = '';
        }
        const newCalendarEvent = generateEvent(startDate, endDate);
        this.dayClicked.emit(newCalendarEvent);
    }
    onMouseDown(event, day) {
        if (this.readonly) {
            return;
        }
        this.isDragging = true;
        this.dragStart = this.columns.indexOf(event.target);
        this.selectionStartDay = day.date;
    }
    onMouseUp(event, day) {
        if (this.readonly) {
            return;
        }
        this.isDragging = false;
        this.dragEnd = this.columns.indexOf(event.target);
        if (this.dragEnd !== 0) {
            this.selectRange();
        }
        this.clearSelection();
        this.selectionEndDay = day.date;
        if (this.selectionStartDay === this.selectionEndDay) {
            return;
        }
        const newCalendarEvent = generateEvent(addMinutes(new Date(this.selectionStartDay.getTime()), -59), addMinutes(new Date(this.selectionEndDay.getTime()), -59));
        this.dayClicked.emit(newCalendarEvent);
    }
    onMouseMove(event) {
        if (this.readonly) {
            return;
        }
        event.preventDefault();
        if (this.isDragging) {
            this.dragEnd = this.columns.indexOf(event.target);
            this.selectRange();
        }
    }
    onEventDragStart(calendarEvent) {
        this.draggedEventId = calendarEvent.id;
        this.clearSelection();
    }
    onEventDragEnd(calendarEvent) {
        this.draggedEventId = '';
        this.hoveredEventId = '';
        const daysDifference = differenceInDays(startOfDay(new Date(calendarEvent.startDate)), addDays(this.dragTargetDay.date, -1));
        const newStartDate = addDays(calendarEvent.startDate, daysDifference);
        const newEndDate = addDays(calendarEvent.endDate, daysDifference);
        const newEvent = {
            ...calendarEvent,
            startDate: newStartDate,
            endDate: newEndDate,
            order: '',
        };
        this.eventDragged.emit(newEvent);
    }
    onHoursEventDragEnd(calendarEvent) {
        this.draggedEventId = '';
        this.hoveredEventId = '';
        const daysDifference = differenceInHours(calendarEvent.startDate, this.dragTargetDay.date);
        const newStartDate = addHours(calendarEvent.startDate, daysDifference);
        const newEndDate = addHours(calendarEvent.endDate, daysDifference);
        const newEvent = {
            ...calendarEvent,
            startDate: newStartDate,
            endDate: newEndDate,
            order: '',
        };
        this.eventDragged.emit(newEvent);
    }
    onDragEnter(event, day) {
        this._renderer.addClass(event.target, 'dragenter');
        this.dragTargetDay = day;
    }
    onDragLeave(event) {
        this._renderer.removeClass(event.target, 'dragenter');
    }
    onDragOver(event) {
        if (event.preventDefault) {
            event.preventDefault();
        }
        return false;
    }
    onMouseEnter(event) {
        this.hoveredEventId = event.id;
    }
    onMouseLeave() {
        this.hoveredEventId = '';
    }
    selectRange() {
        this.clearSelection();
        if (this.dragEnd + 1 < this.dragStart) {
            this.columns
                .slice(this.dragEnd, this.dragStart + 1)
                .forEach((cell) => this._renderer.setStyle(cell, 'background-color', '#fafafa'));
        }
        else {
            this.columns.slice(this.dragStart, this.dragEnd + 1).forEach((cell) => {
                this._renderer.setStyle(cell, 'background-color', '#fafafa');
            });
        }
    }
    convertDateTo12hFormat(date) {
        return convertDateTo12h(date);
    }
    clearSelection() {
        this.columns.forEach((cell) => this._renderer.removeStyle(cell, 'background-color'));
    }
    _generateWeekView() {
        const sundayIndex = this.mondayFirst ? 1 : 0;
        const firstDay = addDays(this.activeDate, -getDayNumber(this.activeDate) + sundayIndex);
        const lastDay = addDays(firstDay, 6);
        const period = {
            start: `${this.options.monthsShort[getMonth(firstDay)]} ${getDate(firstDay)}`,
            end: `${this.options.monthsShort[getMonth(lastDay)]} ${getDate(lastDay)}, ${getYear(lastDay)}`,
        };
        const allDayRow = [];
        const weekRows = [];
        let row = [];
        let date;
        let month;
        let day;
        let dayNumber;
        let startDate;
        let endDate;
        let dayStart;
        let dayEnd;
        for (let i = 0; i < 24; i++) {
            row = [];
            for (let j = 0; j < 7; j++) {
                date = addDays(firstDay, j);
                month = getMonth(date) + 1;
                day = this.options.weekdays[getDayNumber(date)];
                dayNumber = getDate(date);
                startDate = addHours(startOfDay(date), i);
                endDate = addMinutes(startDate, 59.99);
                dayStart = startOfDay(date);
                dayEnd = endOfDay(date);
                if (month < 10) {
                    month = '0' + month;
                }
                if (dayNumber < 10) {
                    dayNumber = '0' + dayNumber;
                }
                row.push({
                    date: startDate,
                    isToday: isSameDate(date, getToday()),
                    events: getEvents(this.events, startDate, endDate, true),
                });
                if (i === 1) {
                    allDayRow.push({
                        date: addDays(date, 1),
                        isToday: isSameDate(date, getToday()),
                        day: day,
                        dayNumber: dayNumber,
                        month: month,
                        events: getEvents(this.events, dayStart, dayEnd),
                    });
                }
            }
            weekRows.push({ row });
        }
        return { allDayRow, weekRows, period };
    }
}
MdbCalendarWeekViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MdbCalendarWeekViewComponent, deps: [{ token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
MdbCalendarWeekViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.3", type: MdbCalendarWeekViewComponent, selector: "mdb-week-view-calendar", inputs: { readonly: "readonly", options: "options", mondayFirst: "mondayFirst", twelveHours: "twelveHours", activeDate: "activeDate", events: "events" }, outputs: { dayClicked: "dayClicked", eventClicked: "eventClicked", eventDragged: "eventDragged" }, viewQueries: [{ propertyName: "hours", predicate: ["hourEl"], descendants: true }], ngImport: i0, template: "<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th *ngFor=\"let day of weekView.allDayRow\">\n        {{ day.day }} {{ day.dayNumber }}/{{ day.month }}\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class=\"long-event-row\">\n      <th></th>\n      <td \n        *ngFor=\"let day of weekView.allDayRow; let dayIndex = index\"\n        [ngClass]=\"{'today': day.isToday}\"\n        (click)=\"onDayClick(day)\"\n        (mousedown)=\"onMouseDown($event, day)\"\n        (mouseup)=\"onMouseUp($event, day)\" \n        (mouseenter)=\"onMouseMove($event)\"\n        (dragenter)=\"onDragEnter($event, day)\"\n        (dragover)=\"onDragOver($event)\"\n        (dragleave)=\"onDragLeave($event)\"\n      >\n        <div class=\"events-wrapper\">\n          <ng-container *ngFor=\"let event of day.events; let i = index\">\n            <ng-container *ngIf=\"event.order > i + 1 && i === 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1); let index = index\"\n                [ngStyle]=\"{ order: index + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <ng-container *ngIf=\"event.order > i + 1 && i !== 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1 - day.events[i - 1].order); let index = index\"\n                [ngStyle]=\"{ order: event.order - day.events[i - 1].order + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <div \n              draggable=\"true\"\n              class=\"event bg-{{event.color.background}}\"\n              [ngClass]=\"{'event-long': !event.eventStart, 'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ color: event.color.foreground, order: event.order }\"\n              *ngIf=\"event.allDay || event.longEvent\"\n              id=\"{{i === 0 ? event.id : ''}}\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                  - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >    \n              {{ event.eventStart || dayIndex === 0 ? event.summary : '&nbsp;' }}\n            </div>\n          </ng-container>\n          <ng-container *ngFor=\"let event of day.events\">\n            <div\n              draggable=\"true\" \n              class=\"event event-short\"\n              *ngIf=\"!event.allDay && !event.longEvent\"\n              [ngClass]=\"{'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ order: event.order }\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                  - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >\n              <i class=\"fas fa-circle pe-1 event-circle text-{{ event.color.background}}\"></i>\n              {{ event.summary }}\n            </div>\n          </ng-container>\n        </div>\n      </td>\n    </tr>\n     \n    <tr #hourEl *ngFor=\"let row of weekView.weekRows; let i = index\">\n      <th class=\"hour-field\" *ngIf=\"twelveHours\">\n        {{ i === 0 ? '12' : i < 12 ? i : i - 12 === 0 ? '12' : i - 12 }}:00 {{ i < 12 ? 'am' : 'pm'}}\n      </th>\n      <th class=\"hour-field\" *ngIf=\"!twelveHours\">\n        {{ i }}:00 \n      </th>\n      <td *ngFor=\"let date of row.row\"\n        (click)=\"onDayClick(date)\"\n        (mousedown)=\"onMouseDown($event, date)\"\n        (mouseup)=\"onMouseUp($event, date)\" \n        (mouseenter)=\"onMouseMove($event)\"\n        (dragenter)=\"onDragEnter($event, date)\"\n        (dragover)=\"onDragOver($event)\"\n        (dragleave)=\"onDragLeave($event)\"\n      >\n        <div\n          draggable=\"true\"\n          class=\"event event-short\"\n          *ngFor=\"let event of date.events\"\n          [ngClass]=\"{'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n          html=\"true\"\n          mdbTooltip=\"\n            <h6><strong>{{event.summary}}</strong></h6>\n            <p><small><em>{{event.description}}</em></small></p>\n            <p class='me-0'><small>\n              <i class='fas fa-calendar-alt pe-1'></i>\n              {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n              - \n              {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n            </small></p>\"\n          [offset]=15\n          (click)=\"onEventClick(event); $event.stopPropagation()\"\n          (dragstart)=\"onEventDragStart(event)\"\n          (dragend)=\"onHoursEventDragEnd(event)\"\n          (mouseenter)=\"onMouseEnter(event)\"\n          (mouseleave)=\"onMouseLeave()\"\n        >\n          <i class=\"fas fa-circle event-circle pe-1 text-{{ event.color.background }}\"></i>\n          {{event.summary}}\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>", directives: [{ type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i2.MdbTooltipDirective, selector: "[mdbTooltip]", inputs: ["mdbTooltip", "tooltipDisabled", "placement", "html", "animation", "trigger", "delayShow", "delayHide", "offset"], outputs: ["tooltipShow", "tooltipShown", "tooltipHide", "tooltipHidden"], exportAs: ["mdbTooltip"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MdbCalendarWeekViewComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mdb-week-view-calendar', styles: [], template: "<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th *ngFor=\"let day of weekView.allDayRow\">\n        {{ day.day }} {{ day.dayNumber }}/{{ day.month }}\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class=\"long-event-row\">\n      <th></th>\n      <td \n        *ngFor=\"let day of weekView.allDayRow; let dayIndex = index\"\n        [ngClass]=\"{'today': day.isToday}\"\n        (click)=\"onDayClick(day)\"\n        (mousedown)=\"onMouseDown($event, day)\"\n        (mouseup)=\"onMouseUp($event, day)\" \n        (mouseenter)=\"onMouseMove($event)\"\n        (dragenter)=\"onDragEnter($event, day)\"\n        (dragover)=\"onDragOver($event)\"\n        (dragleave)=\"onDragLeave($event)\"\n      >\n        <div class=\"events-wrapper\">\n          <ng-container *ngFor=\"let event of day.events; let i = index\">\n            <ng-container *ngIf=\"event.order > i + 1 && i === 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1); let index = index\"\n                [ngStyle]=\"{ order: index + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <ng-container *ngIf=\"event.order > i + 1 && i !== 0\">\n              <div \n                class=\"fake-event\"\n                *ngFor=\"let fakeEvent of [].constructor(event.order - 1 - day.events[i - 1].order); let index = index\"\n                [ngStyle]=\"{ order: event.order - day.events[i - 1].order + 1 }\"\n              >\n                &nbsp;\n              </div>\n            </ng-container>\n            <div \n              draggable=\"true\"\n              class=\"event bg-{{event.color.background}}\"\n              [ngClass]=\"{'event-long': !event.eventStart, 'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ color: event.color.foreground, order: event.order }\"\n              *ngIf=\"event.allDay || event.longEvent\"\n              id=\"{{i === 0 ? event.id : ''}}\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                  - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >    \n              {{ event.eventStart || dayIndex === 0 ? event.summary : '&nbsp;' }}\n            </div>\n          </ng-container>\n          <ng-container *ngFor=\"let event of day.events\">\n            <div\n              draggable=\"true\" \n              class=\"event event-short\"\n              *ngIf=\"!event.allDay && !event.longEvent\"\n              [ngClass]=\"{'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n              [ngStyle]=\"{ order: event.order }\"\n              html=\"true\"\n              mdbTooltip=\"\n                <h6><strong>{{event.summary}}</strong></h6>\n                <p><small><em>{{event.description}}</em></small></p>\n                <p class='me-0'><small>\n                  <i class='fas fa-calendar-alt pe-1'></i>\n                  {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n                  - \n                  {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n                </small></p>\"\n              [offset]=15\n              (click)=\"onEventClick(event); $event.stopPropagation()\"\n              (dragstart)=\"onEventDragStart(event)\"\n              (dragend)=\"onEventDragEnd(event)\"\n              (mouseenter)=\"onMouseEnter(event)\"\n              (mouseleave)=\"onMouseLeave()\"\n            >\n              <i class=\"fas fa-circle pe-1 event-circle text-{{ event.color.background}}\"></i>\n              {{ event.summary }}\n            </div>\n          </ng-container>\n        </div>\n      </td>\n    </tr>\n     \n    <tr #hourEl *ngFor=\"let row of weekView.weekRows; let i = index\">\n      <th class=\"hour-field\" *ngIf=\"twelveHours\">\n        {{ i === 0 ? '12' : i < 12 ? i : i - 12 === 0 ? '12' : i - 12 }}:00 {{ i < 12 ? 'am' : 'pm'}}\n      </th>\n      <th class=\"hour-field\" *ngIf=\"!twelveHours\">\n        {{ i }}:00 \n      </th>\n      <td *ngFor=\"let date of row.row\"\n        (click)=\"onDayClick(date)\"\n        (mousedown)=\"onMouseDown($event, date)\"\n        (mouseup)=\"onMouseUp($event, date)\" \n        (mouseenter)=\"onMouseMove($event)\"\n        (dragenter)=\"onDragEnter($event, date)\"\n        (dragover)=\"onDragOver($event)\"\n        (dragleave)=\"onDragLeave($event)\"\n      >\n        <div\n          draggable=\"true\"\n          class=\"event event-short\"\n          *ngFor=\"let event of date.events\"\n          [ngClass]=\"{'event-readonly': readonly, 'active' : hoveredEventId === event.id, 'dragging' : draggedEventId === event.id}\"\n          html=\"true\"\n          mdbTooltip=\"\n            <h6><strong>{{event.summary}}</strong></h6>\n            <p><small><em>{{event.description}}</em></small></p>\n            <p class='me-0'><small>\n              <i class='fas fa-calendar-alt pe-1'></i>\n              {{ twelveHours ? convertDateTo12hFormat(event.startData.string) : event.startData.string}}\n              - \n              {{twelveHours ? convertDateTo12hFormat(event.endData.string) : event.endData.string }}\n            </small></p>\"\n          [offset]=15\n          (click)=\"onEventClick(event); $event.stopPropagation()\"\n          (dragstart)=\"onEventDragStart(event)\"\n          (dragend)=\"onHoursEventDragEnd(event)\"\n          (mouseenter)=\"onMouseEnter(event)\"\n          (mouseleave)=\"onMouseLeave()\"\n        >\n          <i class=\"fas fa-circle event-circle pe-1 text-{{ event.color.background }}\"></i>\n          {{event.summary}}\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>" }]
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }]; }, propDecorators: { hours: [{
                type: ViewChildren,
                args: ['hourEl']
            }], readonly: [{
                type: Input
            }], options: [{
                type: Input
            }], mondayFirst: [{
                type: Input
            }], twelveHours: [{
                type: Input
            }], activeDate: [{
                type: Input
            }], events: [{
                type: Input
            }], dayClicked: [{
                type: Output
            }], eventClicked: [{
                type: Output
            }], eventDragged: [{
                type: Output
            }] } });
function getHours(day) {
    throw new Error('Function not implemented.');
}
//# sourceMappingURL=data:application/json;base64,