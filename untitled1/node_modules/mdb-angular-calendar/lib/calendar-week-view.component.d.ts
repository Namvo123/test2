import { OnInit, EventEmitter, Renderer2, QueryList, ElementRef, AfterViewInit } from '@angular/core';
import { MdbCalendarEvent } from './calendar.event.interface';
import * as i0 from "@angular/core";
export declare class MdbCalendarWeekViewComponent implements OnInit, AfterViewInit {
    private _renderer;
    hours: QueryList<ElementRef>;
    readonly: boolean;
    options: any;
    mondayFirst: boolean;
    twelveHours: boolean;
    get activeDate(): Date;
    set activeDate(date: Date);
    private _activeDate;
    get events(): MdbCalendarEvent[];
    set events(events: MdbCalendarEvent[]);
    private _events;
    dayClicked: EventEmitter<MdbCalendarEvent>;
    eventClicked: EventEmitter<MdbCalendarEvent>;
    eventDragged: EventEmitter<any>;
    weekView: any;
    hoursEl: any;
    isDragging: boolean;
    dragStart: any;
    dragEnd: any;
    selectionStartDay: Date;
    selectionEndDay: Date;
    dragTargetDay: any;
    hoveredEventId: any;
    draggedEventId: any;
    dayCells: HTMLElement[];
    columns: HTMLElement[];
    constructor(_renderer: Renderer2);
    ngOnInit(): void;
    onEventClick(event: MdbCalendarEvent): void;
    ngAfterViewInit(): void;
    onDayClick(day: any): void;
    onMouseDown(event: MouseEvent, day: any): void;
    onMouseUp(event: MouseEvent, day: any): void;
    onMouseMove(event: MouseEvent): void;
    onEventDragStart(calendarEvent: MdbCalendarEvent): void;
    onEventDragEnd(calendarEvent: MdbCalendarEvent): void;
    onHoursEventDragEnd(calendarEvent: MdbCalendarEvent): void;
    onDragEnter(event: DragEvent, day: any): void;
    onDragLeave(event: DragEvent): void;
    onDragOver(event: DragEvent): boolean;
    onMouseEnter(event: MdbCalendarEvent): void;
    onMouseLeave(): void;
    selectRange(): void;
    convertDateTo12hFormat(date: string): string;
    clearSelection(): void;
    _generateWeekView(): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbCalendarWeekViewComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdbCalendarWeekViewComponent, "mdb-week-view-calendar", never, { "readonly": "readonly"; "options": "options"; "mondayFirst": "mondayFirst"; "twelveHours": "twelveHours"; "activeDate": "activeDate"; "events": "events"; }, { "dayClicked": "dayClicked"; "eventClicked": "eventClicked"; "eventDragged": "eventDragged"; }, never, never>;
}
