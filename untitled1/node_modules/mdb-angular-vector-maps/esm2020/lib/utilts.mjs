export const parseToHTML = (string) => {
    const parser = new DOMParser();
    const node = parser.parseFromString(string, 'text/html');
    return node.body;
};
export const getElementCenter = (rect) => {
    return {
        x: rect.width / 2,
        y: rect.height / 2,
    };
};
export const getEventCoordinates = (e) => {
    if (e.touches) {
        const [touch] = e.touches;
        return {
            x: touch.clientX,
            y: touch.clientY,
        };
    }
    return {
        x: e.clientX,
        y: e.clientY,
    };
};
export const getVector = (points) => {
    const [point1, point2] = points.map((point) => ({ x: point.clientX, y: point.clientY }));
    return {
        center: { x: point1.x + (point2.x - point1.x) / 2, y: point1.y + (point2.y - point1.y) / 2 },
        length: Math.sqrt((point2.x - point1.x) ** 2 + (point2.y - point1.y) ** 2),
    };
};
export const getDisplacement = (position, prev) => {
    return {
        x: position.x - prev.x,
        y: position.y - prev.y,
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbWRiLWFuZ3VsYXItdmVjdG9yLW1hcHMvc3JjL2xpYi91dGlsdHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQUMsTUFBYyxFQUFFLEVBQUU7SUFDNUMsTUFBTSxNQUFNLEdBQUcsSUFBSSxTQUFTLEVBQUUsQ0FBQztJQUUvQixNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUV6RCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDbkIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxJQUFTLEVBQUUsRUFBRTtJQUM1QyxPQUFPO1FBQ0wsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQztRQUNqQixDQUFDLEVBQUUsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDO0tBQ25CLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLENBQU0sRUFBRSxFQUFFO0lBQzVDLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRTtRQUNiLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDO1FBRTFCLE9BQU87WUFDTCxDQUFDLEVBQUUsS0FBSyxDQUFDLE9BQU87WUFDaEIsQ0FBQyxFQUFFLEtBQUssQ0FBQyxPQUFPO1NBQ2pCLENBQUM7S0FDSDtJQUVELE9BQU87UUFDTCxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU87UUFDWixDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU87S0FDYixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQUMsTUFBVyxFQUFFLEVBQUU7SUFDdkMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFekYsT0FBTztRQUNMLE1BQU0sRUFBRSxFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQzVGLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzNFLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsQ0FBQyxRQUFhLEVBQUUsSUFBUyxFQUFFLEVBQUU7SUFDMUQsT0FBTztRQUNMLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ3RCLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0tBQ3ZCLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFyc2VUb0hUTUwgPSAoc3RyaW5nOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgcGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuXG4gIGNvbnN0IG5vZGUgPSBwYXJzZXIucGFyc2VGcm9tU3RyaW5nKHN0cmluZywgJ3RleHQvaHRtbCcpO1xuXG4gIHJldHVybiBub2RlLmJvZHk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0RWxlbWVudENlbnRlciA9IChyZWN0OiBhbnkpID0+IHtcbiAgcmV0dXJuIHtcbiAgICB4OiByZWN0LndpZHRoIC8gMixcbiAgICB5OiByZWN0LmhlaWdodCAvIDIsXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0RXZlbnRDb29yZGluYXRlcyA9IChlOiBhbnkpID0+IHtcbiAgaWYgKGUudG91Y2hlcykge1xuICAgIGNvbnN0IFt0b3VjaF0gPSBlLnRvdWNoZXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgeDogdG91Y2guY2xpZW50WCxcbiAgICAgIHk6IHRvdWNoLmNsaWVudFksXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgeDogZS5jbGllbnRYLFxuICAgIHk6IGUuY2xpZW50WSxcbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRWZWN0b3IgPSAocG9pbnRzOiBhbnkpID0+IHtcbiAgY29uc3QgW3BvaW50MSwgcG9pbnQyXSA9IHBvaW50cy5tYXAoKHBvaW50KSA9PiAoeyB4OiBwb2ludC5jbGllbnRYLCB5OiBwb2ludC5jbGllbnRZIH0pKTtcblxuICByZXR1cm4ge1xuICAgIGNlbnRlcjogeyB4OiBwb2ludDEueCArIChwb2ludDIueCAtIHBvaW50MS54KSAvIDIsIHk6IHBvaW50MS55ICsgKHBvaW50Mi55IC0gcG9pbnQxLnkpIC8gMiB9LFxuICAgIGxlbmd0aDogTWF0aC5zcXJ0KChwb2ludDIueCAtIHBvaW50MS54KSAqKiAyICsgKHBvaW50Mi55IC0gcG9pbnQxLnkpICoqIDIpLFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGdldERpc3BsYWNlbWVudCA9IChwb3NpdGlvbjogYW55LCBwcmV2OiBhbnkpID0+IHtcbiAgcmV0dXJuIHtcbiAgICB4OiBwb3NpdGlvbi54IC0gcHJldi54LFxuICAgIHk6IHBvc2l0aW9uLnkgLSBwcmV2LnksXG4gIH07XG59O1xuIl19