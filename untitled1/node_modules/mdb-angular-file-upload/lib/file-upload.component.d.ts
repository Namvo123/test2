import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import * as i0 from "@angular/core";
export interface MdbFileUploadError {
    type: string;
    message: string;
}
interface FilePreview {
    file: File;
    name: string;
    extension: string;
    isImage: boolean;
    imageSrc?: string | ArrayBuffer;
}
interface DefaultPreview {
    name: string;
    extension: string;
    isImage: boolean;
    imageSrc?: string;
}
export declare class MdbFileUploadComponent implements OnInit, OnDestroy {
    private _cdRef;
    input: ElementRef<HTMLInputElement>;
    previews: ElementRef<HTMLElement>;
    wrapper: boolean;
    maxFileSize: number;
    defaultPreview: string | null;
    height: number | null;
    disabled: boolean;
    acceptedExtensions: string | null;
    multiple: boolean;
    defaultMsg: string;
    mainError: string;
    maxSizeError: string;
    formatError: string;
    quantityError: string;
    previewMsg: string;
    removeBtn: string;
    removeBtnDisabled: boolean;
    maxFileQuantity: number;
    uploadError: EventEmitter<MdbFileUploadError[]>;
    fileAdded: EventEmitter<File[]>;
    fileRemoved: EventEmitter<File>;
    _errors: MdbFileUploadError[];
    _files: File[];
    _previews: FilePreview[];
    _defaultPreview: DefaultPreview | null;
    reset(): void;
    _showMainError: boolean;
    private _imageFileExtensions;
    private _destroy$;
    constructor(_cdRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private _setupDefaultPreview;
    private _setupDragEvents;
    _handleChangeEvent(event: any): void;
    private _handleFileUpload;
    private _validateFiles;
    _checkFileSize(file: File): void;
    _checkAcceptedExtensions(file: File): void;
    private _handleSingleFileUpload;
    private _handleMultipleFileUpload;
    private _createPreview;
    _removeFile(preview: FilePreview): void;
    _removeDefaultPreview(): void;
    _handlePreviewsClick(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbFileUploadComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdbFileUploadComponent, "mdb-file-upload", never, { "maxFileSize": "maxFileSize"; "defaultPreview": "defaultPreview"; "height": "height"; "disabled": "disabled"; "acceptedExtensions": "acceptedExtensions"; "multiple": "multiple"; "defaultMsg": "defaultMsg"; "mainError": "mainError"; "maxSizeError": "maxSizeError"; "formatError": "formatError"; "quantityError": "quantityError"; "previewMsg": "previewMsg"; "removeBtn": "removeBtn"; "removeBtnDisabled": "removeBtnDisabled"; "maxFileQuantity": "maxFileQuantity"; }, { "uploadError": "uploadError"; "fileAdded": "fileAdded"; "fileRemoved": "fileRemoved"; }, never, never>;
}
export {};
