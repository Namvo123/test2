import { BooleanInput, NumberInput } from '@angular/cdk/coercion';
import { Overlay, OverlayPositionBuilder } from '@angular/cdk/overlay';
import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import * as i0 from "@angular/core";
export interface MdbMentionChange {
    trigger: string;
    searchTerm: string;
}
export interface MdbMentionQuery {
}
export declare class MdbMentionDirective implements OnInit, OnDestroy {
    private _overlay;
    private _overlayPositionBuilder;
    private _elementRef;
    private _renderer;
    private _overlayRef;
    placement: 'top' | 'bottom' | 'left' | 'right';
    trigger: string | string[];
    get outputKey(): string;
    set outputKey(value: string);
    private _outputKey;
    get visibleItems(): number;
    set visibleItems(value: NumberInput);
    private _visibleItems;
    get disableFilter(): boolean;
    set disableFilter(value: BooleanInput);
    private _disableFilter;
    get showListOnTrigger(): boolean;
    set showListOnTrigger(value: BooleanInput);
    private _showListOnTrigger;
    get asyncError(): boolean;
    set asyncError(value: BooleanInput);
    private _asyncError;
    get showImg(): boolean;
    set showImg(value: BooleanInput);
    private _showImg;
    get noResultText(): string;
    set noResultText(value: string);
    private _noResultText;
    get items(): any[];
    set items(value: any[]);
    private _items;
    get queryBy(): string;
    set queryBy(value: string);
    private _queryBy;
    get showNoResultText(): boolean;
    set showNoResultText(value: BooleanInput);
    private _showNoResultText;
    readonly mentionChange: EventEmitter<MdbMentionChange>;
    readonly mentionClose: EventEmitter<void>;
    readonly mentionOpen: EventEmitter<void>;
    readonly mentionSelect: EventEmitter<any>;
    private _mentionRef;
    private _open;
    private _caretPositionIndex;
    private _isTriggerValid;
    private _presentTrigger;
    mentionValue: string;
    private readonly _destroy$;
    constructor(_overlay: Overlay, _overlayPositionBuilder: OverlayPositionBuilder, _elementRef: ElementRef, _renderer: Renderer2);
    ngOnInit(): void;
    private _getPosition;
    private _createOverlayConfig;
    private _createOverlay;
    private _listenToOutSideClick;
    private _handleOptionClick;
    private _setDataForDropdown;
    private _updateMentionString;
    private _toggleDropdown;
    private _handleDropdownByCaret;
    private _bindTriggerEvents;
    private _setHostValue;
    private _filter;
    open(): void;
    close(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbMentionDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdbMentionDirective, "input[mdbMention], textarea[mdbMention]", ["mdbMention"], { "placement": "placement"; "trigger": "trigger"; "outputKey": "outputKey"; "visibleItems": "visibleItems"; "disableFilter": "disableFilter"; "showListOnTrigger": "showListOnTrigger"; "asyncError": "asyncError"; "showImg": "showImg"; "noResultText": "noResultText"; "items": "items"; "queryBy": "queryBy"; "showNoResultText": "showNoResultText"; }, { "mentionChange": "mentionChange"; "mentionClose": "mentionClose"; "mentionOpen": "mentionOpen"; "mentionSelect": "mentionSelect"; }, never>;
}
