import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class MdbMentionItemComponent {
    constructor() {
        this.optionHeight = 35;
        this.showImg = false;
        this.mentionValue = '';
        this.active = false;
    }
    setActiveStyles() {
        if (!this.active) {
            this.active = true;
        }
    }
    setInactiveStyles() {
        if (this.active) {
            this.active = false;
        }
    }
    highlightMatchingLetters(itemName) {
        const matchingLetters = new RegExp(`(?<captureGroup>${this.mentionValue})`, 'gi');
        return itemName.replace(matchingLetters, '<strong>$<captureGroup></strong>');
    }
}
MdbMentionItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbMentionItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MdbMentionItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: MdbMentionItemComponent, selector: "mention-item", inputs: { item: "item", queryBy: "queryBy", optionHeight: "optionHeight", showImg: "showImg", mentionValue: "mentionValue" }, ngImport: i0, template: "<li #mentionItem\n    [ngStyle]=\"{'height': optionHeight + 'px'}\"\n    [ngClass]=\"{'active': active}\"\n    class=\"mention-item\">\n    <span\n    [innerHTML]=\"highlightMatchingLetters(item[queryBy])\"\n    ></span>\n    <img *ngIf=\"item.image && item.image !== '' && showImg\" [src]=\"item.image\" class=\"mention-item-image rounded-circle\">\n</li>", directives: [{ type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbMentionItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mention-item', styles: [], template: "<li #mentionItem\n    [ngStyle]=\"{'height': optionHeight + 'px'}\"\n    [ngClass]=\"{'active': active}\"\n    class=\"mention-item\">\n    <span\n    [innerHTML]=\"highlightMatchingLetters(item[queryBy])\"\n    ></span>\n    <img *ngIf=\"item.image && item.image !== '' && showImg\" [src]=\"item.image\" class=\"mention-item-image rounded-circle\">\n</li>" }]
        }], ctorParameters: function () { return []; }, propDecorators: { item: [{
                type: Input
            }], queryBy: [{
                type: Input
            }], optionHeight: [{
                type: Input
            }], showImg: [{
                type: Input
            }], mentionValue: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudGlvbi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL21kYi1hbmd1bGFyLW1lbnRpb24vc3JjL2xpYi9tZW50aW9uLWl0ZW0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vcHJvamVjdHMvbWRiLWFuZ3VsYXItbWVudGlvbi9zcmMvbGliL21lbnRpb24taXRlbS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBUWpELE1BQU0sT0FBTyx1QkFBdUI7SUFDbEM7UUFHUyxpQkFBWSxHQUFHLEVBQUUsQ0FBQztRQUNsQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBRWhCLGlCQUFZLEdBQUcsRUFBRSxDQUFDO1FBQzNCLFdBQU0sR0FBRyxLQUFLLENBQUM7SUFQQSxDQUFDO0lBU2hCLGVBQWU7UUFDYixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNoQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztTQUNwQjtJQUNILENBQUM7SUFFRCxpQkFBaUI7UUFDZixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztTQUNyQjtJQUNILENBQUM7SUFFRCx3QkFBd0IsQ0FBQyxRQUFRO1FBQy9CLE1BQU0sZUFBZSxHQUFHLElBQUksTUFBTSxDQUFDLG1CQUFtQixJQUFJLENBQUMsWUFBWSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFbEYsT0FBTyxRQUFRLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxrQ0FBa0MsQ0FBQyxDQUFDO0lBQy9FLENBQUM7O29IQTFCVSx1QkFBdUI7d0dBQXZCLHVCQUF1QixrTENScEMsc1dBUUs7MkZEQVEsdUJBQXVCO2tCQU5uQyxTQUFTOytCQUVFLGNBQWMsVUFFaEIsRUFBRTswRUFJRCxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csT0FBTztzQkFBZixLQUFLO2dCQUNHLFlBQVk7c0JBQXBCLEtBQUs7Z0JBQ0csT0FBTztzQkFBZixLQUFLO2dCQUVHLFlBQVk7c0JBQXBCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L2NvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ21lbnRpb24taXRlbScsXG4gIHRlbXBsYXRlVXJsOiBgbWVudGlvbi1pdGVtLmNvbXBvbmVudC5odG1sYCxcbiAgc3R5bGVzOiBbXSxcbn0pXG5leHBvcnQgY2xhc3MgTWRiTWVudGlvbkl0ZW1Db21wb25lbnQge1xuICBjb25zdHJ1Y3RvcigpIHt9XG4gIEBJbnB1dCgpIGl0ZW06IGFueTtcbiAgQElucHV0KCkgcXVlcnlCeTogc3RyaW5nO1xuICBASW5wdXQoKSBvcHRpb25IZWlnaHQgPSAzNTtcbiAgQElucHV0KCkgc2hvd0ltZyA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIG1lbnRpb25WYWx1ZSA9ICcnO1xuICBhY3RpdmUgPSBmYWxzZTtcblxuICBzZXRBY3RpdmVTdHlsZXMoKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmFjdGl2ZSkge1xuICAgICAgdGhpcy5hY3RpdmUgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHNldEluYWN0aXZlU3R5bGVzKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmFjdGl2ZSkge1xuICAgICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBoaWdobGlnaHRNYXRjaGluZ0xldHRlcnMoaXRlbU5hbWUpIHtcbiAgICBjb25zdCBtYXRjaGluZ0xldHRlcnMgPSBuZXcgUmVnRXhwKGAoPzxjYXB0dXJlR3JvdXA+JHt0aGlzLm1lbnRpb25WYWx1ZX0pYCwgJ2dpJyk7XG5cbiAgICByZXR1cm4gaXRlbU5hbWUucmVwbGFjZShtYXRjaGluZ0xldHRlcnMsICc8c3Ryb25nPiQ8Y2FwdHVyZUdyb3VwPjwvc3Ryb25nPicpO1xuICB9XG59XG4iLCI8bGkgI21lbnRpb25JdGVtXG4gICAgW25nU3R5bGVdPVwieydoZWlnaHQnOiBvcHRpb25IZWlnaHQgKyAncHgnfVwiXG4gICAgW25nQ2xhc3NdPVwieydhY3RpdmUnOiBhY3RpdmV9XCJcbiAgICBjbGFzcz1cIm1lbnRpb24taXRlbVwiPlxuICAgIDxzcGFuXG4gICAgW2lubmVySFRNTF09XCJoaWdobGlnaHRNYXRjaGluZ0xldHRlcnMoaXRlbVtxdWVyeUJ5XSlcIlxuICAgID48L3NwYW4+XG4gICAgPGltZyAqbmdJZj1cIml0ZW0uaW1hZ2UgJiYgaXRlbS5pbWFnZSAhPT0gJycgJiYgc2hvd0ltZ1wiIFtzcmNdPVwiaXRlbS5pbWFnZVwiIGNsYXNzPVwibWVudGlvbi1pdGVtLWltYWdlIHJvdW5kZWQtY2lyY2xlXCI+XG48L2xpPiJdfQ==