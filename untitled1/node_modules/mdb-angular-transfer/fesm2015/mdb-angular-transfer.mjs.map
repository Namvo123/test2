{"version":3,"file":"mdb-angular-transfer.mjs","sources":["../../../projects/mdb-angular-transfer/src/lib/transfer-container.component.ts","../../../projects/mdb-angular-transfer/src/lib/transfer-container.component.html","../../../projects/mdb-angular-transfer/src/lib/transfer.component.ts","../../../projects/mdb-angular-transfer/src/lib/transfer.component.html","../../../projects/mdb-angular-transfer/src/lib/transfer.module.ts","../../../projects/mdb-angular-transfer/src/public-api.ts","../../../projects/mdb-angular-transfer/src/mdb-angular-transfer.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { MdbTransferData } from './transfer.interface';\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mdb-transfer-container',\n  templateUrl: './transfer-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MdbTransferContainerComponent implements AfterViewInit {\n  @Input()\n  get dataType(): string {\n    return this._dataType;\n  }\n  set dataType(type: string) {\n    this._dataType = type;\n  }\n  private _dataType: string;\n\n  @Input()\n  get data(): Array<MdbTransferData> {\n    return this._data;\n  }\n  set data(data: Array<MdbTransferData>) {\n    this._data = data;\n    this.filteredData = data;\n    this.updateData();\n  }\n  private _data: Array<MdbTransferData> = [];\n\n  @Input()\n  get pagination(): boolean {\n    return this._pagination;\n  }\n  set pagination(isTrue: BooleanInput) {\n    this._pagination = coerceBooleanProperty(isTrue);\n    this.updateData();\n  }\n  private _pagination = false;\n\n  @Input()\n  get elementsPerPage(): number {\n    return this._elementsPerPage;\n  }\n  set elementsPerPage(value: number) {\n    this._elementsPerPage = value;\n  }\n  private _elementsPerPage = 5;\n\n  @Input()\n  get search(): boolean {\n    return this._search;\n  }\n  set search(isTrue: BooleanInput) {\n    this._search = coerceBooleanProperty(isTrue);\n  }\n  private _search: boolean;\n\n  @Output() readonly onSearchOutput: EventEmitter<void> = new EventEmitter();\n  @Output() readonly onSelect: EventEmitter<void> = new EventEmitter();\n\n  selectAllChecked: boolean = false;\n  paginationPage = 1;\n  formatedData: Array<MdbTransferData> = [];\n  filteredData: Array<MdbTransferData> = [];\n  searchId = this.generateUID();\n  selectAllCheckboxId = this.generateUID();\n\n  constructor(private _cdRef: ChangeDetectorRef) {}\n\n  get selectedItemsNumebr(): number {\n    return [\n      ...this.data.filter((item) => {\n        return item.checked;\n      }),\n    ].length;\n  }\n\n  get isSeletedAll(): boolean {\n    return this.data.every((el) => {\n      return el.checked || el.disabled;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.data.forEach((el) => {\n      el.id = this.generateUID();\n    });\n    this.updateData();\n  }\n\n  toggleSelectAll(): void {\n    if (this.isSeletedAll) {\n      this.data.forEach((el) => {\n        if (!el.disabled) {\n          el.checked = false;\n        }\n      });\n    } else {\n      this.data.forEach((el) => {\n        if (!el.disabled) {\n          el.checked = true;\n        }\n      });\n    }\n\n    if (!this.isSeletedAll) {\n      this.selectAllChecked = false;\n    }\n    this.onSelect.emit();\n  }\n\n  toggleSelect(item: MdbTransferData): void {\n    const element = this.data.find((el) => el === item);\n    element.checked = !element.checked;\n\n    if (!this.isSeletedAll) {\n      this.selectAllChecked = false;\n    } else {\n      this.selectAllChecked = true;\n    }\n    this._cdRef.detectChanges();\n    this.onSelect.emit();\n  }\n\n  changePaginationPage(direction: string): void {\n    const lastPage = Math.ceil(this.filteredData.length / this.elementsPerPage);\n\n    if (direction === 'next' && this.paginationPage < lastPage) {\n      this.paginationPage += 1;\n    } else if (direction === 'previous' && this.paginationPage > 1) {\n      this.paginationPage -= 1;\n    }\n\n    this.updateData();\n  }\n\n  private _paginateData(data: Array<MdbTransferData>): Array<MdbTransferData> {\n    const startIndex = (this.paginationPage - 1) * this.elementsPerPage;\n    const endIndex = startIndex + this.elementsPerPage;\n\n    return data.slice(startIndex, endIndex);\n  }\n\n  updateData(): void {\n    let updatedData = this.data;\n\n    if (this.pagination) {\n      updatedData = this._paginateData(this.filteredData);\n    } else {\n      updatedData = this.filteredData;\n    }\n\n    this.formatedData = updatedData;\n    this._cdRef.markForCheck();\n  }\n\n  onSearch(searchKey: String): void {\n    const filteredData = this.data.filter((item) => {\n      const lowerText = item.data.toLowerCase();\n      const lowerKey = searchKey.toLowerCase();\n      return lowerText.includes(lowerKey) ? item : false;\n    });\n    this.filteredData = filteredData;\n    this.updateData();\n    this.onSearchOutput.emit();\n  }\n\n  generateUID(): string {\n    const uid = Math.random().toString(36).substr(2, 9);\n    return `mdb-transfer-${uid}`;\n  }\n}\n","<div class=\"transfer-container-header\">\n  <div class=\"transfer-header-select-all-container\">\n    <input\n      #selectAllChekcbox\n      mdbCheckbox\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      value=\"\"\n      id=\"{{selectAllCheckboxId}}\"\n      [(ngModel)]=\"selectAllChecked\"\n      (click)=\"toggleSelectAll()\"\n    />\n    <label \n      style=\"text-transform: capitalize\"\n      class=\"form-check-label\"\n      for=\"{{selectAllChekcbox.id}}\"\n    >\n      {{dataType}}\n    </label>\n  </div>\n  <span class=\"transfer-header-quantity\">\n    <span class=\"current-checked\">{{selectedItemsNumebr}}</span>\n    <span>/</span>\n    <span class=\"transfer-header-full-quantity\">{{data.length}}</span>\n  </span>\n</div>\n<mdb-form-control *ngIf=\"search\" class=\"transfer-search-outline\">\n  <input \n    #searchInput\n    mdbInput\n    type=\"text\"\n    id=\"mdb-transfer-search-{{searchId}}\"\n    class=\"form-control\"\n    (input)=\"onSearch($event.target.value)\"\n  />\n  <label \n    mdbLabel\n    class=\"form-label\"\n    for=\"{{searchInput.id}}\"\n  >\n    Search\n  </label>\n</mdb-form-control>\n<ul class=\"transfer-body\" [ngClass]=\"{'transfer-body-no-data': formatedData.length === 0}\">\n  <div *ngIf=\"data.length === 0\" class=\"transfer-body-no-data\">\n    <i class=\"far fa-folder-open transfer-no-data-mdb-icon\"></i>\n    <span>No Data</span>\n  </div>\n  <ng-container *ngIf=\"formatedData.length > 0\">\n    <li *ngFor=\"let item of formatedData\" class=\"transfer-body-item\">\n      <div class=\"form-check\">\n        <input\n          #itemCheckbox\n          mdbCheckbox\n          class=\"form-check-input transfer-body-item-text form-check-label transfer-body-item-checkbox\"\n          type=\"checkbox\"\n          value=\"\"\n          id=\"{{item.id}}\"\n          [ngClass]=\"{'transfer-body-item-checkbox-disabled': item.disabled}\"\n          [disabled]=\"item.disabled\"\n          [checked]=\"item.checked\"\n          (click)=\"toggleSelect(item)\"\n        />\n        <label \n          class=\"form-check-label transfer-body-item-text\"\n          for=\"{{item.id}}\"\n          [ngClass]=\"{'transfer-body-item-text-disabled': item.disabled}\"\n        >\n          {{ item.data }}\n        </label>\n      </div>\n    </li>\n  </ng-container>\n</ul>\n<div *ngIf=\"pagination\" class=\"transfer-footer\">\n  <button \n    class=\"btn btn-outline-primary btn-floating btn-sm transfer-footer-arrow\"\n    (click)=\"changePaginationPage('previous')\"  \n  >\n    <i class=\"fas fa-angle-left\"></i>\n  </button>\n  <span class=\"transfer-footer-current-page\">{{paginationPage}}</span>\n  <button \n    class=\"btn btn-outline-primary btn-floating btn-sm transfer-footer-arrow\"\n    (click)=\"changePaginationPage('next')\"  \n  >\n    <i class=\"fas fa-angle-right\"></i>\n  </button>\n</div>","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { MdbTransferContainerComponent } from './transfer-container.component';\nimport { MdbTransferData } from './transfer.interface';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mdb-transfer',\n  templateUrl: 'transfer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MdbTransferComponent {\n  @ViewChild('transferSourceContainer') transferSourceContainer: MdbTransferContainerComponent;\n  @ViewChild('transferTargetContainer') transferTargetContainer: MdbTransferContainerComponent;\n\n  @HostBinding('class') class = 'transfer';\n\n  @Input()\n  get dataSource(): Array<MdbTransferData> {\n    return this._dataSource;\n  }\n  set dataSource(data: Array<MdbTransferData>) {\n    this._dataSource = data;\n  }\n  private _dataSource: Array<MdbTransferData> = [];\n\n  @Input()\n  get dataTarget(): Array<MdbTransferData> {\n    return this._dataTarget;\n  }\n  set dataTarget(data: Array<MdbTransferData>) {\n    this._dataTarget = data;\n  }\n  private _dataTarget: Array<MdbTransferData> = [];\n\n  @Input()\n  get oneWay(): boolean {\n    return this._oneWay;\n  }\n  set oneWay(isTrue: BooleanInput) {\n    this._oneWay = coerceBooleanProperty(isTrue);\n  }\n  private _oneWay = false;\n\n  @Input()\n  get pagination(): boolean {\n    return this._pagination;\n  }\n  set pagination(isTrue: BooleanInput) {\n    this._pagination = coerceBooleanProperty(isTrue);\n  }\n  private _pagination = false;\n\n  @Input()\n  get elementsPerPage(): number {\n    return this._elementsPerPage;\n  }\n  set elementsPerPage(value: number) {\n    this._elementsPerPage = value;\n  }\n  private _elementsPerPage = 5;\n\n  @Input()\n  get search(): boolean {\n    return this._search;\n  }\n  set search(isTrue: BooleanInput) {\n    this._search = coerceBooleanProperty(isTrue);\n  }\n  private _search = false;\n\n  @Output() readonly onChange: EventEmitter<void> = new EventEmitter();\n  @Output() readonly onSearch: EventEmitter<void> = new EventEmitter();\n  @Output() readonly onSelect: EventEmitter<void> = new EventEmitter();\n\n  constructor() {}\n\n  transferData(transferTo: string): void {\n    switch (transferTo) {\n      case 'source':\n        this.sendToSource();\n        break;\n      case 'target':\n        this.sentToTarget();\n        break;\n      default:\n        break;\n    }\n    this._updateTransferContainers();\n  }\n\n  sendToSource(): void {\n    const dataToTransfer = [\n      ...this.dataTarget.filter((data) => {\n        return data.checked;\n      }),\n    ];\n\n    this.dataSource = [...this.dataSource, ...dataToTransfer];\n\n    this.dataTarget = [\n      ...this.dataTarget.filter((data) => {\n        return !data.checked;\n      }),\n    ];\n\n    dataToTransfer.forEach((data) => {\n      data.checked = false;\n    });\n  }\n\n  sentToTarget(): void {\n    const dataToTransfer = [\n      ...this.dataSource.filter((data) => {\n        return data.checked;\n      }),\n    ];\n\n    this.dataTarget = [...this.dataTarget, ...dataToTransfer];\n\n    this.dataSource = [\n      ...this.dataSource.filter((data) => {\n        return !data.checked;\n      }),\n    ];\n\n    dataToTransfer.forEach((data) => {\n      data.checked = false;\n    });\n  }\n\n  private _updateTransferContainers(): void {\n    this.transferSourceContainer.updateData();\n    this.transferTargetContainer.updateData();\n    this.onChange.emit();\n  }\n}\n","  <mdb-transfer-container \n    #transferSourceContainer\n    [dataType]=\"'source'\"\n    class=\"transfer-source-container transfer-container\"\n    [data]=\"dataSource\"\n    [pagination]=\"pagination\"\n    [elementsPerPage]=\"elementsPerPage\"\n    [search]=\"search\"\n    (onSearchOutput)=\"onSearch.emit()\"\n    (onSelect)=\"onSelect.emit()\"\n  ></mdb-transfer-container>\n  <div class=\"transfer-arrows-container transfer-container\">\n    <button \n      class=\"btn btn-primary transfer-arrows-arrow\"\n      (click)=\"transferData('source')\"\n      [attr.disabled]=\"oneWay ? 'true' : null\"\n    >\n      &lt;\n    </button>\n    <button\n      class=\"btn btn-primary transfer-arrows-arrow\"\n      (click)=\"transferData('target')\"\n    >\n      &gt;\n    </button>\n  </div>\n  <mdb-transfer-container\n    #transferTargetContainer\n    [dataType]=\"'target'\"\n    class=\"transfer-target-container transfer-container\"\n    [data]=\"dataTarget\"\n    [pagination]=\"pagination\"\n    [elementsPerPage]=\"elementsPerPage\"\n    [search]=\"search\"\n  ></mdb-transfer-container>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MdbTransferComponent } from './transfer.component';\nimport { MdbTransferContainerComponent } from './transfer-container.component';\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\n\n@NgModule({\n  declarations: [MdbTransferComponent, MdbTransferContainerComponent],\n  imports: [CommonModule, FormsModule, MdbFormsModule],\n  exports: [MdbTransferComponent],\n})\nexport class MdbTransferModule {}\n","/*\n * Public API Surface of mdb-angular-transfer\n */\n\nexport * from './lib/transfer.component';\nexport * from './lib/transfer.module';\nexport * from './lib/transfer.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.MdbTransferContainerComponent"],"mappings":"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"}