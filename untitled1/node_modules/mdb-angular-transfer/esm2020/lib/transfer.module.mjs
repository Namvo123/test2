import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MdbTransferComponent } from './transfer.component';
import { MdbTransferContainerComponent } from './transfer-container.component';
import { MdbFormsModule } from 'mdb-angular-ui-kit/forms';
import * as i0 from "@angular/core";
export class MdbTransferModule {
}
MdbTransferModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbTransferModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
MdbTransferModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbTransferModule, declarations: [MdbTransferComponent, MdbTransferContainerComponent], imports: [CommonModule, FormsModule, MdbFormsModule], exports: [MdbTransferComponent] });
MdbTransferModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbTransferModule, imports: [[CommonModule, FormsModule, MdbFormsModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbTransferModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [MdbTransferComponent, MdbTransferContainerComponent],
                    imports: [CommonModule, FormsModule, MdbFormsModule],
                    exports: [MdbTransferComponent],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbWRiLWFuZ3VsYXItdHJhbnNmZXIvc3JjL2xpYi90cmFuc2Zlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzVELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7QUFPMUQsTUFBTSxPQUFPLGlCQUFpQjs7OEdBQWpCLGlCQUFpQjsrR0FBakIsaUJBQWlCLGlCQUpiLG9CQUFvQixFQUFFLDZCQUE2QixhQUN4RCxZQUFZLEVBQUUsV0FBVyxFQUFFLGNBQWMsYUFDekMsb0JBQW9COytHQUVuQixpQkFBaUIsWUFIbkIsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLGNBQWMsQ0FBQzsyRkFHekMsaUJBQWlCO2tCQUw3QixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLG9CQUFvQixFQUFFLDZCQUE2QixDQUFDO29CQUNuRSxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLGNBQWMsQ0FBQztvQkFDcEQsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUM7aUJBQ2hDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE1kYlRyYW5zZmVyQ29tcG9uZW50IH0gZnJvbSAnLi90cmFuc2Zlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWRiVHJhbnNmZXJDb250YWluZXJDb21wb25lbnQgfSBmcm9tICcuL3RyYW5zZmVyLWNvbnRhaW5lci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWRiRm9ybXNNb2R1bGUgfSBmcm9tICdtZGItYW5ndWxhci11aS1raXQvZm9ybXMnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtNZGJUcmFuc2ZlckNvbXBvbmVudCwgTWRiVHJhbnNmZXJDb250YWluZXJDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3Jtc01vZHVsZSwgTWRiRm9ybXNNb2R1bGVdLFxuICBleHBvcnRzOiBbTWRiVHJhbnNmZXJDb21wb25lbnRdLFxufSlcbmV4cG9ydCBjbGFzcyBNZGJUcmFuc2Zlck1vZHVsZSB7fVxuIl19