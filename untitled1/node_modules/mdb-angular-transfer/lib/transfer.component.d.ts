import { BooleanInput } from '@angular/cdk/coercion';
import { EventEmitter } from '@angular/core';
import { MdbTransferContainerComponent } from './transfer-container.component';
import { MdbTransferData } from './transfer.interface';
import * as i0 from "@angular/core";
export declare class MdbTransferComponent {
    transferSourceContainer: MdbTransferContainerComponent;
    transferTargetContainer: MdbTransferContainerComponent;
    class: string;
    get dataSource(): Array<MdbTransferData>;
    set dataSource(data: Array<MdbTransferData>);
    private _dataSource;
    get dataTarget(): Array<MdbTransferData>;
    set dataTarget(data: Array<MdbTransferData>);
    private _dataTarget;
    get oneWay(): boolean;
    set oneWay(isTrue: BooleanInput);
    private _oneWay;
    get pagination(): boolean;
    set pagination(isTrue: BooleanInput);
    private _pagination;
    get elementsPerPage(): number;
    set elementsPerPage(value: number);
    private _elementsPerPage;
    get search(): boolean;
    set search(isTrue: BooleanInput);
    private _search;
    readonly onChange: EventEmitter<void>;
    readonly onSearch: EventEmitter<void>;
    readonly onSelect: EventEmitter<void>;
    constructor();
    transferData(transferTo: string): void;
    sendToSource(): void;
    sentToTarget(): void;
    private _updateTransferContainers;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbTransferComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdbTransferComponent, "mdb-transfer", never, { "dataSource": "dataSource"; "dataTarget": "dataTarget"; "oneWay": "oneWay"; "pagination": "pagination"; "elementsPerPage": "elementsPerPage"; "search": "search"; }, { "onChange": "onChange"; "onSearch": "onSearch"; "onSelect": "onSelect"; }, never, never>;
}
