import { BooleanInput } from '@angular/cdk/coercion';
import { AfterViewInit, ChangeDetectorRef, EventEmitter } from '@angular/core';
import { MdbTransferData } from './transfer.interface';
import * as i0 from "@angular/core";
export declare class MdbTransferContainerComponent implements AfterViewInit {
    private _cdRef;
    get dataType(): string;
    set dataType(type: string);
    private _dataType;
    get data(): Array<MdbTransferData>;
    set data(data: Array<MdbTransferData>);
    private _data;
    get pagination(): boolean;
    set pagination(isTrue: BooleanInput);
    private _pagination;
    get elementsPerPage(): number;
    set elementsPerPage(value: number);
    private _elementsPerPage;
    get search(): boolean;
    set search(isTrue: BooleanInput);
    private _search;
    readonly onSearchOutput: EventEmitter<void>;
    readonly onSelect: EventEmitter<void>;
    selectAllChecked: boolean;
    paginationPage: number;
    formatedData: Array<MdbTransferData>;
    filteredData: Array<MdbTransferData>;
    searchId: string;
    selectAllCheckboxId: string;
    constructor(_cdRef: ChangeDetectorRef);
    get selectedItemsNumebr(): number;
    get isSeletedAll(): boolean;
    ngAfterViewInit(): void;
    toggleSelectAll(): void;
    toggleSelect(item: MdbTransferData): void;
    changePaginationPage(direction: string): void;
    private _paginateData;
    updateData(): void;
    onSearch(searchKey: String): void;
    generateUID(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbTransferContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdbTransferContainerComponent, "mdb-transfer-container", never, { "dataType": "dataType"; "data": "data"; "pagination": "pagination"; "elementsPerPage": "elementsPerPage"; "search": "search"; }, { "onSearchOutput": "onSearchOutput"; "onSelect": "onSelect"; }, never, never>;
}
