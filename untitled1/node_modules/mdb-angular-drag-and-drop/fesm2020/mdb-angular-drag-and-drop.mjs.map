{"version":3,"file":"mdb-angular-drag-and-drop.mjs","sources":["../../../projects/mdb-angular-drag-and-drop/src/lib/utilities.ts","../../../projects/mdb-angular-drag-and-drop/src/lib/draggable.directive.ts","../../../projects/mdb-angular-drag-and-drop/src/lib/sortable-container.directive.ts","../../../projects/mdb-angular-drag-and-drop/src/lib/drag-and-drop.module.ts","../../../projects/mdb-angular-drag-and-drop/src/public-api.ts","../../../projects/mdb-angular-drag-and-drop/src/mdb-angular-drag-and-drop.ts"],"sourcesContent":["export function moveItemToNewContainer(\n  previousContainer: any[],\n  newContainer: any[],\n  previousIndex: number,\n  newIndex: number\n) {\n  if (previousContainer.length > 0) {\n    const item = previousContainer.splice(previousIndex, 1)[0];\n    newContainer.splice(newIndex, 0, item);\n  }\n}\n\nexport function copyItemToNewContainer(\n  previousContainer: any[],\n  newContainer: any[],\n  previousIndex: number,\n  newIndex: number\n) {\n  if (previousContainer.length > 0) {\n    const item = previousContainer[previousIndex];\n    newContainer.splice(newIndex, 0, item);\n  }\n}\n\nexport function moveItemsInContainer(container: any[], previousIndex: number, newIndex: number) {\n  const item = container[previousIndex];\n  container.splice(previousIndex, 1);\n  container.splice(newIndex, 0, item);\n}\n\nexport function getElementRect(element: HTMLElement): any {\n  const elementRect = element.getBoundingClientRect();\n\n  return {\n    top: elementRect.top,\n    right: elementRect.right,\n    bottom: elementRect.bottom,\n    left: elementRect.left,\n    width: elementRect.width,\n    height: elementRect.height,\n  };\n}\n\nexport function cloneNode(node: HTMLElement): HTMLElement {\n  const clone = node.cloneNode(true) as HTMLElement;\n  clone.removeAttribute('id');\n  return clone;\n}\n\nexport function destroyNode(node: Node | null) {\n  if (node && node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}\n","import {\n  Directive,\n  Input,\n  EventEmitter,\n  Output,\n  NgZone,\n  ElementRef,\n  OnInit,\n  Optional,\n  SkipSelf,\n  Inject,\n  InjectionToken,\n  OnDestroy,\n  HostBinding,\n} from '@angular/core';\nimport { fromEvent, merge, Subject, Observable } from 'rxjs';\nimport { takeUntil, tap, first, filter, switchMap } from 'rxjs/operators';\nimport { Position, Boundaries } from './types';\nimport { MdbSortableContainerDirective } from './sortable-container.directive';\nimport { cloneNode, destroyNode } from './utilities';\n\nexport const MDB_DRAGGABLE_PARENT = new InjectionToken<{}>('MDB_DRAGGABLE_PARENT');\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbDraggable]',\n  providers: [{ provide: MDB_DRAGGABLE_PARENT, useExisting: MdbDraggableDirective }],\n})\nexport class MdbDraggableDirective implements OnInit, OnDestroy {\n  @Input() copy = false;\n  @Input() data: any;\n\n  @HostBinding('class.draggable-disabled')\n  @Input()\n  disabled = false;\n  @Input()\n  get boundaryElement() {\n    return this._boundaryElement;\n  }\n  set boundaryElement(value: any) {\n    if (typeof value === 'string') {\n      this._boundaryElement = this._getHtmlElement(value);\n    } else {\n      this._boundaryElement = value;\n    }\n  }\n  private _boundaryElement: HTMLElement;\n  @Input()\n  get handle() {\n    return this._handle;\n  }\n  set handle(value: any) {\n    if (typeof value === 'string') {\n      this._handle = this._getHtmlElement(value);\n    } else {\n      this._handle = value;\n    }\n  }\n  private _handle: HTMLElement;\n\n  @Input() lockAxis: 'x' | 'y' | null = null;\n  @Input() autoScroll = false;\n  @Input() scrollSpeed = 25;\n  @Input() scrollSensitivity = 30;\n  @Input() delay = 0;\n  @Input() threshold = 0;\n\n  @Output() dragStart = new EventEmitter<HTMLElement>();\n  @Output() dragEnd = new EventEmitter<HTMLElement>();\n\n  // @HostBinding('class.draggable') draggable = true;\n  @HostBinding('class.draggable-dragging')\n  get isMoving() {\n    return this._isMoving;\n  }\n\n  private _placeholder: HTMLElement;\n  private _helper: HTMLElement;\n  private _tempElement: HTMLElement;\n\n  private _hostPosition: Position = { x: 0, y: 0 };\n  private _startPosition: Position = { x: 0, y: 0 };\n  private _startTransform: Position = { x: 0, y: 0 };\n  private _pickUpPosition: Position;\n\n  private _draggingStartTime: number;\n\n  private _isDragging = false;\n  private _isMoving = false;\n\n  private _pointerDown$: Observable<any>;\n  private _pointerMove$: Observable<any>;\n  private _pointerUp$: Observable<any>;\n\n  private _boundaries: Boundaries | null = null;\n\n  private _destroy$ = new Subject<void>();\n\n  _sortableContainer: MdbSortableContainerDirective | null = null;\n  _originalContainer: MdbSortableContainerDirective | null = null;\n  private _originalContainerRect: any;\n  private _startIndex: number;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Optional()\n    @SkipSelf()\n    @Inject(MDB_DRAGGABLE_PARENT)\n    private _draggableParent?: MdbDraggableDirective\n  ) {}\n\n  ngOnInit(): void {\n    const target = this.handle ? this.handle : this._elementRef.nativeElement;\n    this._setupEvents(target);\n    this._subscribeToEvents();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private _setupEvents(element: HTMLElement) {\n    this._pointerDown$ = merge(\n      fromEvent(element, 'mousedown', { passive: false }),\n      fromEvent(element, 'touchstart', { passive: false })\n    );\n\n    this._pointerMove$ = merge(\n      fromEvent(document, 'mousemove', { passive: false }),\n      fromEvent(document, 'touchmove', { passive: false })\n    );\n\n    this._pointerUp$ = merge(\n      fromEvent(document, 'mouseup', { passive: false }),\n      fromEvent(document, 'touchend', { passive: false })\n    );\n  }\n\n  _getHost(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  _getPlaceholder(): HTMLElement {\n    return this._placeholder;\n  }\n\n  private _subscribeToEvents() {\n    this._ngZone.runOutsideAngular(() => {\n      const drag$ = this._pointerDown$.pipe(\n        filter((startEvent: any) => startEvent.button !== 2 && !this.disabled),\n        switchMap((event: any) => {\n          this._handleDragStart(event);\n          return this._pointerMove$.pipe(\n            tap((moveEvent: any) => {\n              this._handleDragMove(moveEvent);\n            }),\n            takeUntil(this._pointerUp$)\n          );\n        }),\n        takeUntil(this._destroy$)\n      );\n\n      const drop$ = this._pointerDown$.pipe(\n        switchMap(() => {\n          return this._pointerUp$.pipe(\n            first(),\n            tap(() => {\n              this._handleDragEnd();\n            })\n          );\n        }),\n        takeUntil(this._destroy$)\n      );\n\n      drag$.subscribe();\n      drop$.subscribe();\n    });\n  }\n\n  private _handleDragStart(event: any): void {\n    if (this._isDragging || this._isMoving) {\n      return;\n    }\n\n    if (this._draggableParent) {\n      event.stopPropagation();\n    }\n\n    this._isDragging = true;\n    this._draggingStartTime = Date.now();\n\n    const hostRect = this._elementRef.nativeElement.getBoundingClientRect();\n\n    this._pickUpPosition = this._getPosition(event);\n    this._startPosition.x = this._pickUpPosition.x - hostRect.left;\n    this._startPosition.y = this._pickUpPosition.y - hostRect.top;\n\n    if (this._boundaryElement) {\n      this._measureBoundaries();\n    }\n\n    if (this._sortableContainer) {\n      this._sortableContainer._onDragStart();\n      this._originalContainer = this._sortableContainer;\n      this._originalContainerRect = this._originalContainer.element.getBoundingClientRect();\n      this._startIndex = this._sortableContainer._getDraggableIndex(this);\n    }\n  }\n\n  private _getHtmlElement(selector: string): HTMLElement {\n    return document.querySelector(selector);\n  }\n\n  private _measureBoundaries() {\n    const viewRect = this._boundaryElement.getBoundingClientRect();\n    const hostRect = this._elementRef.nativeElement.getBoundingClientRect();\n\n    this._boundaries = {\n      minX: viewRect.left - hostRect.left + this._hostPosition.x,\n      maxX: viewRect.right - hostRect.right + this._hostPosition.x,\n      minY: viewRect.top - hostRect.top + this._hostPosition.y,\n      maxY: viewRect.bottom - hostRect.bottom + this._hostPosition.y,\n    };\n  }\n\n  private _handleDragMove(event: any): void {\n    const currentPosition = this._getPosition(event);\n    const distanceX = Math.abs(currentPosition.x - this._pickUpPosition.x);\n    const distanceY = Math.abs(currentPosition.y - this._pickUpPosition.y);\n\n    if (!this._isMoving) {\n      const isOverThreshold = distanceX + distanceY >= this.threshold;\n\n      if (this._pickUpPosition && isOverThreshold) {\n        const isAfterDelay = Date.now() - this._draggingStartTime >= this.delay;\n\n        if (!isAfterDelay) {\n          return;\n        }\n\n        event.preventDefault();\n\n        this._ngZone.run(() => {\n          this._isMoving = true;\n        });\n\n        if (this._sortableContainer) {\n          this._ngZone.run(() => {\n            this._initSortableElements();\n          });\n        }\n      }\n\n      return;\n    }\n\n    event.preventDefault();\n\n    this._hostPosition.x = currentPosition.x - this._pickUpPosition.x + this._startTransform.x;\n    this._hostPosition.y = currentPosition.y - this._pickUpPosition.y + this._startTransform.y;\n\n    if (this._boundaries) {\n      this._applyBoundaries(this._boundaries);\n    }\n\n    if (this.lockAxis === 'x') {\n      this._hostPosition.x = 0;\n    }\n\n    if (this.lockAxis === 'y') {\n      this._hostPosition.y = 0;\n    }\n\n    if (this.autoScroll && !this._sortableContainer) {\n      this._updateScrollPosition();\n    }\n\n    if (this._sortableContainer) {\n      const originalContainer = this._originalContainer;\n      const currentContainer = this._sortableContainer;\n      const { x, y } = currentPosition;\n\n      let newContainer = originalContainer._getContainerFromCoordinates(this, x, y);\n\n      const isPointerOverOriginalContainer =\n        !newContainer &&\n        this._sortableContainer !== originalContainer &&\n        originalContainer._isPointerOverItem(this._originalContainerRect, x, y);\n\n      if (isPointerOverOriginalContainer) {\n        newContainer = originalContainer;\n      }\n\n      if (newContainer && newContainer !== this._sortableContainer) {\n        currentContainer._handleItemLeave(this);\n        newContainer._handleItemEnter(this, currentPosition.x, currentPosition.y);\n\n        this._sortableContainer = newContainer;\n      }\n\n      if (!this.copy) {\n        originalContainer._initSortingEvents(this);\n      }\n\n      this._updatePosition(\n        this._helper,\n        currentPosition.x - this._startPosition.x,\n        currentPosition.y - this._startPosition.y\n      );\n    } else {\n      this._updatePosition(\n        this._elementRef.nativeElement,\n        this._hostPosition.x,\n        this._hostPosition.y\n      );\n    }\n  }\n\n  private _initSortableElements() {\n    const tempElement = this._createTempElement();\n    const host = this._elementRef.nativeElement;\n    const hostParent = this._elementRef.nativeElement.parentNode;\n\n    hostParent.insertBefore(tempElement, host);\n\n    const placeholder = (this._placeholder = this._createPlaceholder());\n    const helper = (this._helper = this._createHelper());\n\n    this._elementRef.nativeElement.style.display = 'none';\n    document.body.appendChild(hostParent.replaceChild(placeholder, host));\n    document.body.appendChild(helper);\n  }\n\n  private _createTempElement(): HTMLElement {\n    const tempElement = (this._tempElement = this._tempElement || document.createElement('div'));\n    tempElement.style.display = 'none';\n\n    return tempElement;\n  }\n\n  private _getPosition(event: any) {\n    const point = this._isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n    const scrollPosition = this._getDocumentScrollPosition();\n\n    return {\n      x: point.pageX - scrollPosition.left,\n      y: point.pageY - scrollPosition.top,\n    };\n  }\n\n  private _isTouchEvent(event: MouseEvent | TouchEvent): boolean {\n    return event.type.startsWith('touch');\n  }\n\n  private _getDocumentScrollPosition() {\n    const documentElement = document.documentElement;\n    const body = document.body;\n\n    const top = documentElement.scrollTop || body.scrollTop;\n    const left = documentElement.scrollLeft || body.scrollLeft;\n\n    return { top, left };\n  }\n\n  private _applyBoundaries(boundaries: Boundaries) {\n    this._hostPosition.x = Math.max(boundaries.minX, this._hostPosition.x);\n    this._hostPosition.x = Math.min(boundaries.maxX, this._hostPosition.x);\n    this._hostPosition.y = Math.max(boundaries.minY, this._hostPosition.y);\n    this._hostPosition.y = Math.min(boundaries.maxY, this._hostPosition.y);\n  }\n\n  private _updateScrollPosition() {\n    const hostRect = this._elementRef.nativeElement.getBoundingClientRect();\n\n    const height = document.documentElement.clientHeight;\n    const width = document.documentElement.clientWidth;\n\n    if (hostRect.top < this.scrollSensitivity) {\n      document.documentElement.scrollTop -= this.scrollSpeed;\n    }\n\n    if (hostRect.top + hostRect.height > height - this.scrollSensitivity) {\n      document.documentElement.scrollTop += this.scrollSpeed;\n    }\n\n    if (hostRect.left < this.scrollSensitivity) {\n      document.documentElement.scrollLeft -= this.scrollSpeed;\n    }\n\n    if (hostRect.left + hostRect.width > width - this.scrollSensitivity) {\n      document.documentElement.scrollLeft += this.scrollSpeed;\n    }\n  }\n\n  private _updatePosition(element: HTMLElement, x: number, y: number) {\n    const position = this._getTransform(x, y);\n    element.style.transform = position;\n  }\n\n  private _getTransform(x: number, y: number): string {\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n  }\n\n  private _handleDragEnd(): void {\n    if (!this._isMoving) {\n      return;\n    }\n\n    if (this._sortableContainer) {\n      const placeholderRect = this._placeholder.getBoundingClientRect();\n      this._helper.classList.add('draggable-animating');\n      this._updatePosition(this._helper, placeholderRect.left, placeholderRect.top);\n\n      setTimeout(() => {\n        this._elementRef.nativeElement.style.display = '';\n        this._tempElement.parentNode.replaceChild(\n          this._elementRef.nativeElement,\n          this._tempElement\n        );\n        this._destroyHelper();\n        this._destroyPlaceholder();\n\n        this._ngZone.run(() => {\n          const previousIndex = this._startIndex;\n          const newIndex = this._sortableContainer._getDraggableIndex(this);\n          const previousContainer = this._originalContainer;\n          const newContainer = this._sortableContainer;\n\n          this._sortableContainer._onDragEnd();\n          this._originalContainer._onDragEnd();\n          this._originalContainer._emitDropEvent(\n            this,\n            previousContainer,\n            newContainer,\n            previousIndex,\n            newIndex\n          );\n          this._sortableContainer = this._originalContainer;\n        });\n      }, 351);\n    } else {\n      this._startTransform.x = this._hostPosition.x;\n      this._startTransform.y = this._hostPosition.y;\n    }\n\n    this._ngZone.run(() => {\n      this._isMoving = false;\n      this._isDragging = false;\n    });\n  }\n\n  private _destroyHelper() {\n    if (this._helper) {\n      destroyNode(this._helper);\n    }\n\n    this._helper = null;\n  }\n\n  private _destroyPlaceholder() {\n    if (this._placeholder) {\n      destroyNode(this._placeholder);\n    }\n\n    this._placeholder = null;\n  }\n\n  private _createPlaceholder(): HTMLElement {\n    const placeholder = cloneNode(this._elementRef.nativeElement);\n    placeholder.style.visibility = 'hidden';\n    placeholder.classList.add('draggable-placeholder');\n    return placeholder;\n  }\n\n  private _createHelper(): HTMLElement {\n    const helper = cloneNode(this._elementRef.nativeElement);\n    const hostRect = this._elementRef.nativeElement.getBoundingClientRect();\n\n    if (this.copy) {\n      helper.style.opacity = '0.5';\n    }\n\n    helper.style.pointerEvents = 'none';\n    helper.style.position = 'fixed';\n    helper.style.top = '0';\n    helper.style.left = '0';\n    helper.style.margin = '0';\n    helper.style.width = `${hostRect.width}px`;\n    helper.style.height = `${hostRect.height}px`;\n    helper.style.transform = this._getTransform(hostRect.left, hostRect.top);\n    helper.classList.add('draggable-helper');\n\n    return helper;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Output,\n  EventEmitter,\n  Input,\n  InjectionToken,\n} from '@angular/core';\nimport { getElementRect } from './utilities';\nimport { MdbDraggableDirective } from './draggable.directive';\nimport { CachedDraggable } from './types';\n\nexport const MDB_SORTABLE_CONTAINER = new InjectionToken<MdbSortableContainerDirective>(\n  'MdbSortableContainer'\n);\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbSortableContainer]',\n  exportAs: 'mdbSortableContainer',\n  providers: [{ provide: MDB_SORTABLE_CONTAINER, useExisting: MdbSortableContainerDirective }],\n})\nexport class MdbSortableContainerDirective implements AfterContentInit {\n  @ContentChildren(MdbDraggableDirective) private draggables: QueryList<MdbDraggableDirective>;\n\n  @Input() autoScroll = false;\n  @Input()\n  get containers(): any {\n    return this._containers;\n  }\n  set containers(containersArray: any) {\n    this._containers = containersArray.map((container: any) => {\n      if (typeof container === 'string') {\n        return MdbSortableContainerDirective._sortableContainers.find(\n          (sortableContainer) => sortableContainer.id === container\n        );\n      }\n\n      return container;\n    });\n  }\n  private _containers: any[] = [];\n  @Input() data: any[];\n  @Input() enterPredicate: (item: MdbDraggableDirective) => boolean = () => true;\n  @Input() id: string;\n  @Input() sortingDisabled = false;\n\n  @Output() itemDrop = new EventEmitter<any>();\n\n  private static _sortableContainers: MdbSortableContainerDirective[] = [];\n\n  private _draggables: MdbDraggableDirective[];\n\n  private _inactiveItems: CachedDraggable[] = [];\n  private _cachedDraggables: CachedDraggable[] = [];\n\n  _activeItem: CachedDraggable;\n\n  private _eventsInitialized = false;\n\n  private _mouseEnterHandler = this._handleMouseEnter.bind(this);\n\n  currentIndex: number;\n  newIndex: number;\n\n  get element(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  constructor(private _elementRef: ElementRef) {\n    MdbSortableContainerDirective._sortableContainers.push(this);\n  }\n\n  ngAfterContentInit() {\n    this.draggables.forEach((draggable) => (draggable._sortableContainer = this));\n    this._draggables = Array.from(this.draggables);\n\n    this.draggables.changes.subscribe(() => {\n      this.draggables.forEach((draggable) => (draggable._sortableContainer = this));\n      this._draggables = Array.from(this.draggables);\n    });\n  }\n\n  _onDragStart() {\n    this.draggables.forEach((draggable) => (draggable._sortableContainer = this));\n    this._draggables = Array.from(this.draggables);\n    this._cacheDraggables();\n  }\n\n  _onDragEnd() {\n    this._removeSortingEvents();\n    this._eventsInitialized = false;\n  }\n\n  _emitDropEvent(\n    item: MdbDraggableDirective,\n    previousContainer: MdbSortableContainerDirective,\n    newContainer: MdbSortableContainerDirective,\n    previousIndex: number,\n    newIndex: number\n  ) {\n    this.itemDrop.emit({\n      item: item,\n      previousContainer: previousContainer,\n      newContainer: newContainer,\n      previousIndex: previousIndex,\n      newIndex: newIndex,\n    });\n  }\n\n  private _cacheDraggables() {\n    this._cachedDraggables = this._draggables.map(\n      (draggable: MdbDraggableDirective, index: number) => {\n        const element = draggable._getHost();\n\n        return {\n          element: element,\n          instance: draggable,\n          offsetLeft: element.offsetLeft,\n          offsetTop: element.offsetTop,\n          translateX: 0,\n          translateY: 0,\n          index: index,\n          rect: getElementRect(element),\n        };\n      }\n    );\n  }\n\n  _isPointerOverItem(rect: any, x: number, y: number) {\n    const { top, bottom, left, right } = rect;\n    const offset = 1;\n\n    return (\n      y + offset >= Math.floor(top) &&\n      y - offset <= Math.floor(bottom) &&\n      x + offset >= Math.floor(left) &&\n      x - offset <= Math.floor(right)\n    );\n  }\n\n  _initSortingEvents(item: MdbDraggableDirective) {\n    if (!this._eventsInitialized) {\n      this._setEvents(item);\n      this._eventsInitialized = true;\n    }\n  }\n\n  _removeSortingEvents() {\n    this._draggables.forEach((item) => {\n      const element = item._getHost();\n      element.removeEventListener('mouseenter', this._mouseEnterHandler);\n      element.style.transform = '';\n      element.style.transition = '';\n    });\n  }\n\n  _handleItemEnter(item: MdbDraggableDirective, x: number, y: number) {\n    this._eventsInitialized = false;\n    this._cacheDraggables();\n\n    const newIndex = this._getItemIndexFromCoordinates(x, y);\n    const placeholder = item._getPlaceholder();\n    let overItem = this._draggables[newIndex];\n\n    let offsetLeft: number;\n    let offsetTop: number;\n\n    if (overItem) {\n      const overItemElement = overItem._getHost();\n      offsetLeft = overItemElement.offsetLeft;\n      offsetTop = overItemElement.offsetTop;\n      overItemElement.parentNode.insertBefore(placeholder, overItemElement);\n      this._draggables.splice(newIndex, 0, item);\n    } else {\n      this.element.appendChild(placeholder);\n      this._draggables.push(item);\n    }\n\n    placeholder.style.transform = '';\n    this._cacheDraggables();\n\n    if (overItem) {\n      this._cachedDraggables[newIndex].offsetLeft = offsetLeft;\n      this._cachedDraggables[newIndex].offsetTop = offsetTop;\n    } else {\n      const lastIndex = this._cachedDraggables.length - 1;\n      this._cachedDraggables[lastIndex].offsetLeft = placeholder.offsetLeft;\n      this._cachedDraggables[lastIndex].offsetTop = placeholder.offsetTop;\n    }\n\n    this._initSortingEvents(item);\n  }\n\n  _handleItemLeave(item: MdbDraggableDirective) {\n    const currentIndex = this._draggables.indexOf(item);\n    this._draggables.splice(currentIndex, 1);\n    this._removeSortingEvents();\n  }\n\n  private _getItemIndexFromCoordinates(x: number, y: number) {\n    return this._cachedDraggables.findIndex((draggable) =>\n      this._isPointerOverItem(draggable.rect, x, y)\n    );\n  }\n\n  _getContainerFromCoordinates(item: MdbDraggableDirective, x: number, y: number) {\n    return this.containers.find((container) => {\n      if (container._canAcceptEnteringItem(item)) {\n        return false;\n      }\n\n      const elementFromPoint = document.elementFromPoint(x, y);\n\n      if (!elementFromPoint) {\n        return false;\n      }\n\n      return container.element === elementFromPoint || container.element.contains(elementFromPoint);\n    });\n  }\n\n  _canAcceptEnteringItem(item: MdbDraggableDirective) {\n    return !this.enterPredicate(item);\n  }\n\n  _setEvents(activeDraggable: MdbDraggableDirective) {\n    const inactiveSortItems = this._cachedDraggables.filter((draggable) => {\n      if (draggable.instance === activeDraggable) {\n        this._activeItem = draggable;\n      }\n\n      return draggable.instance !== activeDraggable;\n    });\n\n    this._inactiveItems = inactiveSortItems;\n\n    if (!this.sortingDisabled) {\n      inactiveSortItems.forEach((draggable) => {\n        draggable.element.style.transition = `transform 300ms ease`;\n        draggable.element.addEventListener('mouseenter', this._mouseEnterHandler);\n      });\n    }\n  }\n\n  private _handleMouseEnter(event: any) {\n    const enteredItem: any = this._getTarget(event);\n\n    const itemBelow = enteredItem.index > this._activeItem.index;\n\n    const itemsToMove = this._getItemsToMove(itemBelow, enteredItem);\n\n    this._slideItems(itemBelow, itemsToMove);\n    this._slideActiveItem(this._activeItem);\n\n    this._activeItem.index = enteredItem.index;\n\n    this._setIndexes(itemsToMove, itemBelow);\n  }\n\n  private _getTarget(event: any) {\n    return this._cachedDraggables.find((draggable) => draggable.element === event.target);\n  }\n\n  _slideItems(itemBelow: boolean, itemsToMove: CachedDraggable[]) {\n    itemsToMove.forEach((item) => {\n      const index = itemBelow ? item.index - 1 : item.index + 1;\n      const adjacentItem = this._cachedDraggables[index];\n\n      const distanceY = adjacentItem.offsetTop - item.offsetTop;\n      const distanceX = adjacentItem.offsetLeft - item.offsetLeft;\n\n      item.translateY = distanceY;\n      item.translateX = distanceX;\n\n      this._setTranslate(item.element, distanceX, distanceY);\n    });\n  }\n\n  _slideActiveItem(item: CachedDraggable) {\n    let sumY = 0;\n    let sumX = 0;\n\n    this._cachedDraggables.forEach((draggable) => {\n      sumY -= draggable.translateY;\n      sumX -= draggable.translateX;\n    });\n\n    const placeholder = item.instance._getPlaceholder();\n\n    this._setTranslate(placeholder, sumX, sumY);\n  }\n\n  _getItemsToMove(itemBelow: boolean, enteredItem: CachedDraggable) {\n    return this._cachedDraggables.filter((draggable) => {\n      if (itemBelow) {\n        return this._activeItem.index < draggable.index && draggable.index <= enteredItem.index;\n      }\n\n      return this._activeItem.index > draggable.index && draggable.index >= enteredItem.index;\n    });\n  }\n\n  _setTranslate(element: HTMLElement, x: number, y: number) {\n    element.style.transform = `translate3d(${x}px, ${y}px, 0px)`;\n  }\n\n  _setIndexes(itemsToMove: CachedDraggable[], itemBelow: boolean) {\n    this._cachedDraggables = this._cachedDraggables.map((draggable) => {\n      itemsToMove.forEach((item) => {\n        if (draggable === item) {\n          if (itemBelow) {\n            item.index--;\n          } else {\n            item.index++;\n          }\n        }\n      });\n\n      return draggable;\n    });\n  }\n\n  _setOffsets() {\n    this._cachedDraggables.forEach((draggable) => {\n      draggable.offsetLeft = draggable.element.offsetLeft;\n      draggable.offsetTop = draggable.element.offsetTop;\n    });\n  }\n\n  _resetTranslatesInfo() {\n    this._cachedDraggables.forEach((draggable) => {\n      draggable.translateX = 0;\n      draggable.translateY = 0;\n    });\n  }\n\n  _getDraggableIndex(item: MdbDraggableDirective) {\n    const correspondingItem: CachedDraggable = this._cachedDraggables.find(\n      (draggable) => draggable.instance === item\n    );\n    return correspondingItem.index;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MdbDraggableDirective } from './draggable.directive';\nimport { MdbSortableContainerDirective } from './sortable-container.directive';\n\n@NgModule({\n  declarations: [MdbDraggableDirective, MdbSortableContainerDirective],\n  imports: [],\n  exports: [MdbDraggableDirective, MdbSortableContainerDirective],\n})\nexport class MdbDragAndDropModule {}\n","/*\n * Public API Surface of mdb-angular-drag-and-drop\n */\n\nexport * from './lib/drag-and-drop.module';\nexport * from './lib/draggable.directive';\nexport * from './lib/sortable-container.directive';\nexport { MdbDropEvent } from './lib/types';\nexport {\n  moveItemsInContainer,\n  moveItemToNewContainer,\n  copyItemToNewContainer,\n} from './lib/utilities';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}